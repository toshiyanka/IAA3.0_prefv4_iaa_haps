# -*- mode: perl; indent-tabs-mode: nil; perl-indent-level: 2; cperl-indent-level: 2; -*-
#-------------------------------------------------------------------------------------------------------
##     Package Name: gk-utils
##          Project: Server 10nm (srvr10nm)
##            Owner: Adam Jacobson (adam.m.jacobson@intel.com)
##      Description: This package is used to simply define the models, duts, and test list
##                   which are used by the Server 10nm Model Build tools to create and regress Models.
##
##
##
##   (C) Copyright Intel Corporation, 2013
##   Licensed material --  Program property of Intel Corporation
##   All Rights Reserved
##
##   This program is the property of Intel Corporation and is furnished
##   pursuant to a written license agreement. It may not be used, reproduced,
##   or disclosed to others except in accordance with the terms and conditions
##   of that agreement
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
##   Server 10nm (srvr10nm) GateKeeper Build-Regress Configuration
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
##
## Pragmas
##
##-------------------------------------------------------------------------------------------------------
use strict;
use warnings;

##-------------------------------------------------------------------------------------------------------
##
## Modules
##
##-------------------------------------------------------------------------------------------------------
use Data::Dumper;
require "$ENV{GK_CONFIG_DIR}/lib/GkConfigLib.pm";

##-------------------------------------------------------------------------------------------------------
##
## Variables
##
##-------------------------------------------------------------------------------------------------------
use vars qw(%Models %cfg_common $arch);
my $cluster = "rcf_widget_library";

##-------------------------------------------------------------------------------------------------------
## Load Common Config File
##-------------------------------------------------------------------------------------------------------
&load_config("GkUtils.srvr10nm.common.cfg");

##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
## DO NOT EDIT ABOVE THIS LINE
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
##
## Recipe
##
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
## Timeout based on Cluster in hours.
##-------------------------------------------------------------------------------------------------------
$Models{timeout}{$cluster} = 8;

##-------------------------------------------------------------------------------------------------------
## Limits for semaphores are defined in this section.
##-------------------------------------------------------------------------------------------------------
$Models{semaphores} =
  {
   build => 1,
  };

##-------------------------------------------------------------------------------------------------------
## Any Other Commands are defined and declared in this section.
##-------------------------------------------------------------------------------------------------------
my @VARIANTS = qw ( xpropdebug );
my @MODELS = qw( dft_reset_sync cdc_wrapper ip_disable fuse_hip_glue);
my $DUT_LIST = join( ',', @MODELS );
my $TARGET_LIST = "";
foreach my $model (@MODELS) {
  foreach my $variant (@VARIANTS) {
    $TARGET_LIST .= " -btb $model:$variant";
  }
}

$Models{general_cmds} =
  [
   ## NBFeeder ENV Dump
   {
    'NAME'         => 'NBFEEDER_ENV_DUMP',
    'CMDS'         => 'env',
    'JOB_PRE_EXEC' => $cfg_common{general_pre_exec},
    'EVENTS'       => 'filter turnin mock release post-release',
    'JOB_TYPE'     => 'info',
    'GATING'       => 0,
   },

   ## Pre-Turnin QC for MockTurnin
   {
    'NAME'         => 'PRE_TURNIN_QC',
    'CMDS'         => '<RTL_PROJ_BIN>/pre_turnin_qc.pl',
    'JOB_PRE_EXEC' => $cfg_common{general_pre_exec},
    'EVENTS'       => 'mock',
    'JOB_TYPE'     => 'qc',
   },


  ## Add check for self-uniquification
  {
     'NAME' => 'chkuniq',
     'ARGS' => 'chkuniq -prefix rcfwl -MR <MODEL_ROOT> -skiplist <MODEL_ROOT>/tools/uniquification/inputs/skiplist -output <MODEL_ROOT>/target -exit',
     'NBCLASS' => "$arch&&1G",
     'EVENT' => 'filter turnin mock release',
     'GATING'       => 1 ,
   },

   ## Add check for compiler directive - to skip addition of new non-compliant directives
  {
     'NAME' => 'check_compiler_directives',
     'ARGS' => 'chkdirective -prefix rcfwl -MR <MODEL_ROOT>',
     'NBCLASS' => "$arch&&1G",
     'EVENT' => 'filter turnin mock release',
     'GATING'       => 1 ,
   },


   ## Build Jobs
   {
    'DUTS'         => $DUT_LIST,
    'NAME'         => 'rcfwl_build',
    'CMDS'         => "-dut rcfwl -ASSIGN -mc=<DUT>  -nodelete_flow_data",
    'ARGS_COND'    => { MOCK => "$TARGET_LIST", }, # Builds debug model variants for mocks
    'SEMAPHORE'    => [qw(build)],
    'NBCLASS'      => "$arch&&1G",
    'DEPENDENCY'   => { },
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'bman',
   },

#  ## Build VCLP   ---- now part of default build
#   {
#    'DUTS'         => $DUT_LIST,
#    'NAME'         => 'rcfwl_build_vclp',
#    'CMDS'         => "-dut rcfwl -ASSIGN -mc=<DUT> -s all +s vclp -nodelete_flow_data",
#    'SEMAPHORE'    => [qw(build)],
#    'NBCLASS'      => "$arch&&1G",
#    'DEPENDENCY'   => { "/rcfwl_build/bman.rcfwl.POST_FLOW" => "Success", },
#    'NBFLOW'       => 1,
#    'JOB_TYPE'     => 'build',
#    'CMD_TYPE'     => 'bman',
#    'GATING'       =>  1 ,
#   },

   {
   'DUTS'         => $DUT_LIST,
   'NAME'         => 'rcfwl_sglint',
   'CMDS'         => "-dut rcfwl -ASSIGN -mc=<DUT> -s all +s sglint -nodelete_flow_data",
   'SEMAPHORE'    => [qw(build)],
   'NBCLASS'      => "$arch&&1G",
   'DEPENDENCY'   => {"rcfwl_build" => "Success",},
   'NBFLOW'       => 1,
   'JOB_TYPE'     => 'build',
   'CMD_TYPE'     => 'bman',
   'GATING'       => 0,
  },

   # Removing quick_syn and enabling FEBE HDK as part of gk turnin : gprasann ww28.4
   # including syn2sim

   { 
    'DUTS'         => 'rcfwl',
    'NAME'         => '<DUT>_build_hdk_febe',
    'CMDS'         => "+s .flg_v2k_sim +s .syn2sim -stop_dc_at upf", 
    'DEPENDENCY'   => {
                        "rcfwl_build/bman.rcfwl.FLG.FLG_load_dft_reset_sync" => "Success",
                        "rcfwl_build/bman.rcfwl.vcs.elab_dft_reset_sync" => "Success",
                        "rcfwl_build/bman.rcfwl.FLG.FLG_load_cdc_wrapper" => "Success",
                        "rcfwl_build/bman.rcfwl.vcs.elab_cdc_wrapper" => "Success",
                        "rcfwl_build/bman.rcfwl.FLG.FLG_load_ip_disable" => "Success",
                        "rcfwl_build/bman.rcfwl.vcs.elab_ip_disable" => "Success",
                        "rcfwl_build/bman.rcfwl.FLG.FLG_load_fuse_hip_glue" => "Success",
                        "rcfwl_build/bman.rcfwl.vcs.elab_fuse_hip_glue" => "Success",
                      },
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'febe',
    'USE_ALT_FLOWBEE' => 1,
    'EVENTS'       => 'filter turnin mock release',
    'GATING'       => 1,
   },

 

  ## Enabling FEBE HDK as part of gk turnin : sprusty ww28.5

   {
    'DUTS'         => 'rcfwl',
    'NAME'         => '<DUT>_build_hdk_full_febe',
#    'CMDS'         => "-flow ip_release -gkturnin",
#per Gautham HSD 1406957302
    'CMDS'         => "-s all +s .dc +s .fv +s .caliber +s .review -flow ip_release -gkturnin",
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'febe',
    'USE_ALT_FLOWBEE' => 1,
    'EVENTS'       => 'post-release',
    'GATING'       => 0,
   },


  ## interface & parameter checks
   {
     'DUTS'        => 'dft_reset_sync cdc_wrapper ip_disable fuse_hip_glue',
     'NAME'        => '<DUT>_interface_check',
     'CMDS'        => '<MODEL_ROOT>/scripts/interface_checker.pl --interface_control_file <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "rcfwl_build/bman.rcfwl.collage.collage_build_rcfwl_<DUT>_collage_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },
   {
     'DUTS'        => 'dft_reset_sync cdc_wrapper ip_disable fuse_hip_glue',
     'NAME'        => '<DUT>_parameter_check',
     'CMDS'     => '<MODEL_ROOT>/scripts/port_parameter_checker.pl --interface_control_file <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "rcfwl_build/bman.rcfwl.collage.collage_build_rcfwl_<DUT>_collage_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },


  ## Zircon IP Dashboard update
   {
    'DUTS'         => 'rcfwl',
    'NAME'         => 'rcfwl_zircon_ipdash_upload',
    'JOB_WORK_DIR' => '<MODEL_ROOT>',
    'CMDS'         => '<MODEL_ROOT>/scripts/run_zircon.csh',
    'JOB_PRE_EXEC' => $cfg_common{general_pre_exec},
    'NBCLASS'      => "$arch&&1G",
    'JOB_TYPE'     => 'zircon',
    'DEPENDENCY'   => {
                      },
    'EVENTS'       => 'post-release',
    'GATING'       => 0,
   },


  ];







##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
## DO NOT EDIT BELOW THIS LINE
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
## Load Common Post Config File
##-------------------------------------------------------------------------------------------------------
&load_config("GkUtils.srvr10nm.common.post.cfg");

##-------------------------------------------------------------------------------------------------------
##
## Return status
##
##-------------------------------------------------------------------------------------------------------
1;
