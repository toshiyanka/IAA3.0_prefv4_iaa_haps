# -*- mode: perl; indent-tabs-mode: nil; perl-indent-level: 2; cperl-indent-level: 2; -*-
#-------------------------------------------------------------------------------------------------------
##     Package Name: gk-utils
##          Project: Server 10nm (srvr10nm)
##            Owner: Adam Jacobson (adam.m.jacobson@intel.com)
##      Description: This package is used to simply define the models, duts, and test list
##                   which are used by the Server 10nm Model Build tools to create and regress Models.
##
##
##
##   (C) Copyright Intel Corporation, 2013
##   Licensed material --  Program property of Intel Corporation
##   All Rights Reserved
##
##   This program is the property of Intel Corporation and is furnished
##   pursuant to a written license agreement. It may not be used, reproduced,
##   or disclosed to others except in accordance with the terms and conditions
##   of that agreement
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
##   Server 10nm (srvr10nm) GateKeeper Build-Regress Configuration
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
##
## Pragmas
##
##-------------------------------------------------------------------------------------------------------
use strict;
use warnings;

##-------------------------------------------------------------------------------------------------------
##
## Modules
##
##-------------------------------------------------------------------------------------------------------
use Data::Dumper;
require "$ENV{GK_CONFIG_DIR}/lib/GkConfigLib.pm";

##-------------------------------------------------------------------------------------------------------
##
## Variables
##
##-------------------------------------------------------------------------------------------------------
use vars qw(%Models %cfg_common $arch);
my $cluster = "globalclk";

##-------------------------------------------------------------------------------------------------------
## Load Common Config File
##-------------------------------------------------------------------------------------------------------
&load_config("GkUtils.srvr10nm.common.cfg");

##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
## DO NOT EDIT ABOVE THIS LINE
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
##
## Recipe
##
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
## Timeout based on Cluster in hours.
##-------------------------------------------------------------------------------------------------------
$Models{timeout}{$cluster} = 8;

##-------------------------------------------------------------------------------------------------------
## Limits for semaphores are defined in this section.
##-------------------------------------------------------------------------------------------------------
$Models{semaphores} =
  {
   build => 1,
  };

##-------------------------------------------------------------------------------------------------------
## Any Other Commands are defined and declared in this section.
##-------------------------------------------------------------------------------------------------------

my @MODELS = qw(cda rcb_lcb vret_clock_gate divsync_gen trunk_clock_switch glitchfree_clkmux clkdist_mux clkdist_clkmux clkdist_repeater  refclkdist  psocsyncdist psocclkdist mesh_clkdist pclkdist   pccdu psyncdist      clkreqaggr);
my $DUT_LIST = join( ',', @MODELS );

$Models{general_cmds} =
  [
   ## NBFeeder ENV Dump
   {
    'NAME'         => 'NBFEEDER_ENV_DUMP',
    'CMDS'         => 'env',
    'JOB_PRE_EXEC' => $cfg_common{general_pre_exec},
    'EVENTS'       => 'filter turnin mock release post-release',
    'JOB_TYPE'     => 'info',
    'GATING'       => 0,
   },

   ## Pre-Turnin QC for MockTurnin
   {
    'NAME'         => 'PRE_TURNIN_QC',
    'CMDS'         => '<RTL_PROJ_BIN>/pre_turnin_qc.pl',
    'JOB_PRE_EXEC' => $cfg_common{general_pre_exec},
    'EVENTS'       => 'mock',
    'JOB_TYPE'     => 'qc',
   },

   ## Build Jobs
   {

    'DUTS'         => $DUT_LIST ,
#    'NAME'         => '<DUT>_build',
    'NAME'         => 'globalclk_build',
    'CMDS'         => "-dut globalclk -ASSIGN -mc=$DUT_LIST -nodelete_flow_data +s sgcdc -nodelete_flow_data -spyglass_cdc_list_opts \"-ace_args -cleanup -cleanup_mode batch_sgcdc_gk -enable_flatten_dir_cleanup -enable_empty_dir_cleanup -ace_args-\" ",
    'SEMAPHORE'    => [qw(build)],
    'NBCLASS'      => "$arch&&1G",
    'DEPENDENCY'   => {},
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'bman',
   },

 ## sglint
   {
    'DUTS'         => $DUT_LIST ,
    'NAME'         => 'globalclk_sglint',
    'CMDS'         => "-dut globalclk -ASSIGN -mc=clkdist_repeater -nodelete_flow_data -s all +s sglint -nodelete_flow_data ",
    'SEMAPHORE'    => [qw(build)],
    'NBCLASS'      => "$arch&&1G",
    'DEPENDENCY'   => {"globalclk_build" => "Success",},
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'bman',
    'GATING'       => 0,
   },


  ## interface & parameter checks
   {
     'DUTS'        => 'divsync_gen glitchfree_clkmux clkdist_mux clkdist_repeater  refclkdist  psocsyncdist psocclkdist mesh_clkdist pclkdist pccdu psyncdist clkreqaggr ' ,
     'NAME'        => '<DUT>_interface_check',
     'CMDS'        => '<MODEL_ROOT>/scripts/interface_checker.pl --interface_control_file <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file    <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_<DUT>_rtl_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },
   {
     'DUTS'        => 'divsync_gen glitchfree_clkmux  clkdist_repeater  refclkdist  psocsyncdist psocclkdist mesh_clkdist pclkdist pccdu psyncdist clkreqaggr ' ,
     'NAME'        => '<DUT>_parameter_check',
     'CMDS'     => '<MODEL_ROOT>/scripts/port_parameter_checker.pl --interface_control_file     <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file     <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_<DUT>_rtl_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },
 ## rcb_lcb collage build is named differently from the others
   {
     'DUTS'        => 'rcb_lcb ' ,
     'NAME'        => '<DUT>_interface_check',
     'CMDS'        => '<MODEL_ROOT>/scripts/interface_checker.pl --interface_control_file <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file    <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_rcb_lcb_ph1_collage_lib" => "Success",
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_rcb_ph1_collage_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },
   {
     'DUTS'        => 'rcb_lcb ' ,
     'NAME'        => '<DUT>_parameter_check',
     'CMDS'     => '<MODEL_ROOT>/scripts/port_parameter_checker.pl --interface_control_file     <MODEL_ROOT>/tools/interface_control/<DUT>_ifccntl.txt --input_port_parameter_file     <MODEL_ROOT>/target/collage/ip_kits/<DUT>.build.summary',
     'DEPENDENCY'  => {
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_rcb_lcb_ph1_collage_lib" => "Success",
                        "globalclk_build/bman.globalclk.collage.collage_build_gclk_rcb_ph1_collage_lib" => "Success",
                        },
    'NBCLASS'      => "$arch&&1G",
   },
 ## CDA   
    {
      'DUTS'        => 'cda ' ,
      'NAME'        => '<DUT>_interface_check',
      'CMDS'        => '<MODEL_ROOT>/scripts/interface_checker.pl --interface_control_file <MODEL_ROOT>/tools/interface_control/gclk_make_clk_cda_ifccntl.txt --input_port_parameter_file    <MODEL_ROOT>/target/collage/ip_kits/gclk_make_clk_cda.build.summary',
      'DEPENDENCY'  => {
                         "globalclk_build/bman.globalclk.collage.collage_build_gclk_cda_collage_lib" => "Success",
                         },
     'NBCLASS'      => "$arch&&1G",
    },
    {
      'DUTS'        => 'cda ' ,
      'NAME'        => 'gclk_make_clk_cda_parameter_check',
      'CMDS'     => '<MODEL_ROOT>/scripts/port_parameter_checker.pl --interface_control_file     <MODEL_ROOT>/tools/interface_control/gclk_make_clk_cda_ifccntl.txt --input_port_parameter_file     <MODEL_ROOT>/target/collage/ip_kits/gclk_make_clk_cda.build.summary',
      'DEPENDENCY'  => {
                         "globalclk_build/bman.globalclk.collage.collage_build_gclk_cda_collage_lib" => "Success",
                         },
     'NBCLASS'      => "$arch&&1G",
    },
## Enabling FEBE HDK as part of gk turnin : sprusty ww29.2

   {
    'DUTS'         => 'globalclk',
    'NAME'         => '<DUT>_build_hdk_febe',
    'CMDS'         => "+s .flg_v2k_sim +s .syn2sim -stop_dc_at upf",
    'DEPENDENCY'   => {
                        "globalclk_build/bman.globalclk.vcs.elab_refclkdist" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_refclkdist" => "Success",
                        "globalclk_build/bman.globalclk.vcs.elab_pccdu" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_pccdu" => "Success",
                        "globalclk_build/bman.globalclk.vcs.elab_psyncdist" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_psyncdist" => "Success",
                        "globalclk_build/bman.globalclk.vcs.elab_clkreqaggr" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_clkreqaggr" => "Success",
                        "globalclk_build/bman.globalclk.vcs.elab_rcb_lcb" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_rcb_lcb" => "Success",
			"globalclk_build/bman.globalclk.vcs.elab_vret_clock_gate" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_vret_clock_gate" => "Success",
			"globalclk_build/bman.globalclk.vcs.elab_trunk_clock_switch" => "Success",
                        "globalclk_build/bman.globalclk.FLG.FLG_load_trunk_clock_switch" => "Success",
        },
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'febe',
    'USE_ALT_FLOWBEE' => 1,
    'EVENTS'       => 'filter turnin mock release',
    'GATING'       => 1,
    
   },

 ##   {
#    'DUTS'         => 'globalclk',
##     'NAME'        => 'fev_syn2sim',
#     'CMDS'        => '-s all +s .flg_v2k_sim +s .syn2sim',
#    'DEPENDENCY'   => {
#                        "globalclk_build/bman.globalclk.vcs.elab_refclkdist" => "Success",
 #                       "globalclk_build/bman.globalclk.FLG.FLG_load_refclkdist" => "Success",
#                        "globalclk_build/bman.globalclk.vcs.elab_pccdu" => "Success",
#                        "globalclk_build/bman.globalclk.FLG.FLG_load_pccdu" => "Success",
#                        "globalclk_build/bman.globalclk.vcs.elab_psyncdist" => "Success",
#                        "globalclk_build/bman.globalclk.FLG.FLG_load_psyncdist" => "Success",
#                        "globalclk_build/bman.globalclk.vcs.elab_clkreqaggr" => "Success",
#                        "globalclk_build/bman.globalclk.FLG.FLG_load_clkreqaggr" => "Success",
                        
#        },
#    'NBFLOW'       => 1,
#    'JOB_TYPE'     => 'build',
#    'CMD_TYPE'     => 'febe',
#    'USE_ALT_FLOWBEE' => 1,
#    'GATING'       => 0,
   
#   },
 
 {
    'DUTS'         => 'globalclk',
    'NAME'         => '<DUT>_build_hdk_full_febe',
    'CMDS'         => "-s all +s .dc +s .fv +s .caliber +s .review -flow ip_release  -gkturnin",
    'NBFLOW'       => 1,
    'JOB_TYPE'     => 'build',
    'CMD_TYPE'     => 'febe',
    'USE_ALT_FLOWBEE' => 1,
    'EVENTS'       => 'post-release',
    'GATING'       => 0,
   },



  ];

##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------
## DO NOT EDIT BELOW THIS LINE
##-------------------------------------------------------------------------------------------------------
##-------------------------------------------------------------------------------------------------------

##-------------------------------------------------------------------------------------------------------
## Load Common Post Config File
##-------------------------------------------------------------------------------------------------------
&load_config("GkUtils.srvr10nm.common.post.cfg");

##-------------------------------------------------------------------------------------------------------
##
## Return status
##
##-------------------------------------------------------------------------------------------------------
1;
