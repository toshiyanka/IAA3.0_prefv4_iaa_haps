##--------------------------------------------------------------------------------
## INTEL CONFIDENTIAL
##
## Copyright 2015 Intel Corporation All Rights Reserved.
## The source code contained or described herein and all documents related to the
## source code ("Material") are owned by Intel Corporation or its suppliers or
## licensors. Title to the Material remains with Intel Corporation or its
## suppliers and licensors. The Material contains trade secrets and proprietary
## and confidential information of Intel or its suppliers and licensors. The
## Material is protected by worldwide copyright and trade secret laws and treaty
## provisions. No part of the Material may be used, copied, reproduced, modified,
## published, uploaded, posted, transmitted, distributed, or disclosed in any way
## without Intels prior express written permission.
##
## No license under any patent, copyright, trade secret or other intellectual
## property right is granted to or conferred upon you by disclosure or delivery
## of the Materials, either expressly, by implication, inducement, estoppel or
## otherwise. Any license under such intellectual property rights must be express
## and approved by Intel in writing.
##
##--------------------------------------------------------------------------------

my $PROJECT = "rcfwl_dfxsecure_plugin";

my $debussy_pli_target;
   if ($ENV{VCS_TARGET_ARCH} eq 'suse64') {
      $debussy_pli_target = "LINUX64";
   }
   elsif ($ENV{VCS_TARGET_ARCH} eq 'suse32') {
      $debussy_pli_target = "LINUX";
   }

%audf = (
         Includes => [
      #project udf files 
     "ace/effm_flows/effmcheck.udf",
   ],


   OSData => {
      -debussy_pli_libs => {
         -enable_flag => "-enable_debussy", # or -fsdb
         -error_if_not_found  => 1,
      #   vcs => {
      #      'Linux-SuSE' => {
      #         'i686' => [
      #            "$ENV{VERDI_HOME}/share/PLI/snps_unified/$debussy_pli_target/novas.tab",
      #            "$ENV{VERDI_HOME}/share/PLI/snps_unified/$debussy_pli_target/pli.a",
      #         ],
      #         'x86-64' => [
      #            "$ENV{VERDI_HOME}/share/PLI/snps_unified/$debussy_pli_target/novas.tab",
      #            "$ENV{VERDI_HOME}/share/PLI/snps_unified/$debussy_pli_target/pli.a",
      #         ],
      #      }, ## End of Linux-SuSE
      #   }, ## End of vcs
      #}, ## End of debussy_pli_libs
      #-PrintHier_pli => {
      #   -enable_flag => "-enable_PrintHier_pli",
      #   -error_if_not_found  => 1,
      #   vcs => {
      #       'Linux-SuSE' => {
      #           'i686' => [
      #               "$ENV{REPO_ROOT}/scripts/bin/common/PrintHier/PrintHier.tab",
      #               "$ENV{REPO_ROOT}/scripts/bin/common/PrintHier/PrintHier.c",
      #           ],
      #           'x86-64' => [
      #               "$ENV{REPO_ROOT}/scripts/bin/common/PrintHier/PrintHier.tab",
      #               "$ENV{REPO_ROOT}/scripts/bin/common/PrintHier/PrintHier.c",
      #           ],
      #       },
      #   },
      },
   }, ## End of OSData
   InterfaceVars => {
      -use_incdir_fulldepth_searchpath => {default => 1},
      # Override the definition of the following flags to set
      # custom default values

      #-dynamic_list_creator => {
      #default => "bin/create_dynamic_random_list.pl",
      #},
   -spyglass_compile_opts => {
   default          => [ 'set_option enableSV09 yes',
                         'set_option define INTEL_SVA_OFF',
                         'set_option define SVA_OFF',
                         'set_option allow_non_lrm yes',
            ],
    },
      -enable_spyglass_group_run => {default=> "0"},
      -post_process_pattern_file => {
         default => "ace/dfxsecure_plugin_postsim.pp",
      },
      -ignored_faulty_hdl_compilers => {
         default => ["debussy",],
      },
      -simv_args => {
         default => [
            "+vcs+flush+all",
            "-licqueue",
            "+vcs+flush+log",
         ],
      },
      -simulator => {
         default => "vcs",
      },
      -vlog_opts => {
         default => [
            "+define+UVM+XVM+OVM",
            "+define+UVM_NO_DPI",
            "+define+UVM_OBJECT_DO_NOT_NEED_CONSTRUCTOR",
         ],
      },
      -elab_opts => {
         default => [
            "-sverilog",
            "-licqueue",
            "-debug_all",
            #"-lca",
			"-error=UNIQUE",
			"-error=PRIORITY",
			"-error=MTOCMUCS", 
            "+vcsd",
            "+memcbk",
            "+vpi",
            "-timescale=1ps/1ps",
            "-xprop=$ENV{IP_ROOT}/tools/xprop/xprop_dfxsecureplugin.cfg",
			"-xprop=unifiedInference",
         ],
      },
      -static_check_cfg_file => {
                merging => "ASSIGN",
                default => ["$ENV{REPO_ROOT}/tools/lint/ace_static_check.lintra.cfg"],
      },
      -use_legacy_tagfilter  => { default => 1},
      -clean_lib_before_recompile => { default => 0, },
      -elab_models      => { default => 1 },
      -test_in_model    => { default => 1 },
      -enable_debussy   => {default => 1 },
      -models_to_compile => {default => ["dfxsecure_plugin_model",],},
      -models_to_elab    => {default => ["dfxsecure_plugin_model",],},
      -use_model_dfxsecure_plugin_model_UVM   => {
                                              default => 0,
                                              type  => "BOOLEAN",
                                              alias => "-ASSIGN -mc=dfxsecure_plugin_UVM_model -ASSIGN -models_to_elab=dfxsecure_plugin_UVM_model -m dfxsecure_plugin_UVM_model",
                                              help  => {
                                                    desc  => "Compiling dfxsecure_plugin with UVM" ,
                                              },
      },

# Use this switch to enable xprop
      #-en_xprop                              => {
      #                                            default => 0,
      #                                            type    => "BOOLEAN",
      #                                            alias   => " -elab_opts -xprop=$ENV{IP_ROOT}/tools/xprop/xprop_dfxsecureplugin.cfg -elab_opts -xprop=unifiedInference ",
      #                                            help    => {
      #                                            desc    => "Enable xprop feature during simulation. By default tmerge mode is enabled in order to enable other modes
      #               please modify the config file $ENV{IP_ROOT}/tools/xprop/xprop_dfxsecureplugin.cfg " ,
      #      },
      #},
      $PROJECT => {
         __PROTOTYPES => { import => ["TEST","LOWPOWER","CDC", "TSA"] },
         -test => {
            default => "DfxSecurePlugin_DefaultTest",
         },
		 -spyglass_goals => {
                         clear_default => 1,
                         default => [],
         },
         -model => { default => "dfxsecure_plugin_model", },
         -implicit_runmode_libs => { default => ["dfxsecure_plugin_model::RunModes"],},
         -test_build_target => { default => "all", },
         -fsdb_file => { default => "Dump.fsdb", },
         -test_make_file => {
            default => "ace/ace_test.mak",
         },
         -create_random_regression => {
            type => "SCALAR",
            shortcut => "crr",
            alias => "-x DfxSecurePlugin_PolicySweepSeqTest:<VAL>:random_seed -rtt -nb -nbmon",
         },
         -hier_dump_top => { default => "DfxSecurePlugin_Tbtop.dfxsecure_top_inst",},
      },
   },

   CommandMapper => {

        $PROJECT => {
            -test_manager => {
                replace_mod => {
                    exec_test => {
                     #   'Ace::WorkModules::Simulate' => 'VCS_Simulate',
                    },
                },
                remove_mod => {
                    exec_test => ["Ace::WorkModules::Cleanup",],
                    },
                add_mod => {
                    exec_test => ["simfigen::latest::simfigen", "Ace::WorkModules::Cleanup"],
                    },
                },
        },
    }, # CommandMapper
  HDLSpec => {
       -hdl_compiler => {
          lintra => {
           -vlogToolArgs => "LIRA_OPTS_START -D SVA_OFF -D INTEL_SVA_OFF -D EMULATION -D ASSSERT_OFF LIRA_OPTS_END",  
           -vcomToolArgs => "LIRA_OPTS_START -D SVA_OFF -D INTEL_SVA_OFF -D EMULATION -D ASSERT_OFF LIRA_OPTS_END",
        },
          vcs => {
           -vlogToolArgs => "+define+INTEL_SIMONLY",  
        },
       },
          
  },

);

if($ENV{VERDI_VERSION} =~/2014|2015|2016|2017/){
$audf{OSData}{'-debussy_pli_libs'}{vcs}{'Linux-SuSE'} = {
               'i686' => [
                  "$ENV{VERDI_HOME}/share/PLI/VCS/SUSE64/novas.tab",
                  "$ENV{VERDI_HOME}/share/PLI/VCS/SUSE64/pli.a",
               ],
               'x86-64' => [
                  "$ENV{VERDI_HOME}/share/PLI/VCS/SUSE64/novas.tab",
                  "$ENV{VERDI_HOME}/share/PLI/VCS/SUSE64/pli.a",
               ],
            }, ## End of Linux-SuSE 

}

print "$audf{OSData}{-debussy_pli_libs}{vcs}{'Linux-SuSE'}{'x86-64'}[0]";

