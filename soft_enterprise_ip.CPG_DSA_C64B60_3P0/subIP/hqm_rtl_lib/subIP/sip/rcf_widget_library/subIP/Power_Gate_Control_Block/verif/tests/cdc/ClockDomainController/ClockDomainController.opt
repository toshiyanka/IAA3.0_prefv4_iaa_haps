use common::RunModes;
common::RunModes::init_library;
{
    %opts = (
        -model                          => "cdc_pgcb_collection",     #Refer to the cdc model defined in cdc.udf file 
        -zin_top                        => "cdc_ClockDomainController_lib.ClockDomainController", #Refer to the top level module in the unit
        -enabled_post_process_modes     => "AceCDC_default,AceCDC_summary",
        -cdc_ppm                        => "AceCDC_default,AceCDC_summary",
        -enable_runsim_postsim_checks   => 0,
        -create_postmortem_file         => 1,
        -postsim_log_max_num_warn       => 10,
        -post_process_parser            => "$ENV{ACE_HOME}/bin/ace_postsim.pl",
        -post_process_pattern_file      => "$ENV{ACE_HOME}/udf/ace_base_postsim.pp",
        -zin_ctrl_files                 => [ 
            "$ENV{INTELCDC_ROOT}/prototype/cdc_global.tcl",
            "$ENV{INTELCDC_ROOT}/prototype/$ENV{CDC_PROCESS}/cdc_global_waivers.tcl",
            "$ENV{MODEL_ROOT}/tools/cdc/ClockDomainController/ClockDomainController_cdc.tcl", ###Please give absolute path
            "$ENV{MODEL_ROOT}/tools/cdc/ClockDomainController/ClockDomainController_waivers.tcl",
        ],
        -enable_cdc_lint => 1,
        -cdc_lint_args =>  [
            "-wf ClockDomainController_waiver_w.xml",
            "-wd $ENV{MODEL_ROOT}/tools/cdc/cdcLint/",
        ],
    );

    %runModes = (
        RptCLK => {
            -zin_run_type               => '-report_clock', 
            -enabled_post_process_modes => "AceCDC_default",
        },
    );
}
