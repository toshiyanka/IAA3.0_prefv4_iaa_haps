#--*-perl-*------------------
%audf = (
    InterfaceVars => {
        # These two set up default command-line switches to enable "test-in-model" flow.
        -elab_models => { default => 1 },
        -models_to_elab => {clear_default => 1,  default => [ "pgcb_collection" ] },
        -test_in_model => { default => 1 },
        #-enable_testbuilder_with_test_in_model => { default => 1 },  # This was set to '1' previously, when using our PCH-heritage TestBuilder.pm and CommonTestBuilder.pm collateral.  Which worked okay, but broke on csme_pmt and csme_kvm (but worked on csme_rtc!) when trying to use the ace testlist facility:  the first test in the testlist file would run TIM, but all subsequent would be compiled in traditional form, failing due to some compilation error.  Now avoiding our custom work modules, in which case we also need to skip the testbuilder run.
        #-enable_testcopy_with_test_in_model => { default => 1 },

        -enable_sub_libraries        => { default => 1 },
        #-golden                      => { alias => "-results /p/sip/csme/TBD/ -collect_data_svcov " },
        #-fsdb_on                     => { default => 1 },
        #-cleanup_pattern_file        => { default => "ace/csme_rtc/ace_cleanup.pp" },
        #-cleanup_mode                => { validation => '/batch|local|keeptrk|nokeep/' },
        -pre_clean_test              => { default => 1 },
        -enable_liblist_elab_order   => { default => 1 },
        -vlog_opts                   => {
             default => [
                '-timescale=1ps/1ps',
                '+define+VCSSIM',
                #'+define+ASSERT_ON',  ##ylai4: temporary disable ASSERT_ON to avoid Verdi error
            ],
        },
        -simv_args => {
             default => [
                '+vpdupdate',
            ],
        },

        # Specify home directory
        -home_site => { default => 'fm', },

        # Specify to turn on assertion copy back flow
        #-assertion_copy_back => { default => 1, },

        # This set of elaboration options used to reside in ace/common/common_ivars.udf, but sub-IPs such as CSE encountered issues with our 
        # warnings-promotion arguments.  So, as a result, this set of promotion options were moved into each CM IP _local_ivars.udf file.
        -elab_opts => {
            default => [
                # Elaboration options which specify which warnings to flag, which warnings to elevate to errors, and so on.
                # Here is a sample of all those warnings seen in an ME cluster regression on LPT-H:
                #      1        1 Warning-[IPC] Illegal high conn for port connect
                #      2        1 Warning-[LCA_FEATURES_ENABLED] Usage warning
                #      3        1 Warning-[NO-GENERIC-MATCH-FILE] Generic or parameter not found
                #      4        1 Warning-[TMR] Text macro redefined
                #      5        2 Warning-[DLLIL-NS] Duplicate logical library in liblist
                #      6        2 Warning-[GENERICFILE-EMPTY] Generic file empty or invalid
                #      7        4 Warning-[CPBRM] Precision or Sign Mismatch
                #      8        4 Warning-[FILE_OPENED_WARN] File already opened
                #      9        4 Warning-[PSBU] Invalid values in bin
                #     10        7 Warning-[IDTS] Ignoring dynamic type sensitivity
                #     11        7 Warning-[SVA-LCDNAWPSC] Lead and property/sequence clocks differ
                #     12       11 Warning-[CFLL-NS] Cannot find logical library
                #     13       20 Warning-[FCPSBU] Invalid values in bin
                #     14       20CSME_CM_UPF_SIM' Warning-[FCPSM] Mismatch in bin range values
                #     15       29 Warning-[ENUMASSIGN] Illegal assignment to enum variable
                #     16       32 Warning-[OSVF-NPVIUFPI] Obsolete System Verilog feature
                #     17       62 Warning-[PCWM-W] Port connection width mismatch
                #     18      100 Warning-[SVA-OPTCOV-PABNE] Pass Action Blocks not executed
                #     19      324 Warning-[SVA-LDRF] Large delay or repetition found.

                # Elevate the following warnings to errors:  those that involve connectivity-related issues primarily.  Later on, we'll consider coverage- and assertion-related warnings for such elevation.
#                '+vcs+error=CFLL-NS',  # Cannot find logical library
#                '+vcs+error=CPBRM',  # Precision or Sign Mismatch
#                '+vcs+error=ENUMASSIGN',  # Illegal assignment to enum variable
#                '+vcs+error=GENERICFILE-EMPTY',  # Generic file empty or invalid
#                '+vcs+error=INAV',  # What is this one?
#                '+vcs+error=IPC',  # Illegal high conn for port connect
#                '+vcs+error=NO-GENERIC-MATCH-FILE',  # Generic or parameter not found
#                '+vcs+error=PCWM-W',   # Port connection width mismatch
#                '+vcs+error=SVA-LCDNAWPSC',  # Lead and property/sequence clocks differ
#                '+vcs+error=TFIPC-L',  # Elevate this "Warning-[TFIPC-L] Too few instance port connections" coding-error to an actual error.  Combats the growth of this issue.
                '-cm line+cond+branch+fsm+tgl+assert',  ## added to remove warning while enabling functional coverage - dmeka 012213
            ],
        },

        pgcb_collection => {
            -hier_dump_top     => { default => ['RandTestbench',] }, 
            __PROTOTYPES => { import => [ 'TEST', 'CDC', ] },

            #-enable_runsim_postsim_checks  => { default => 1, },
            -implicit_runmode_libs => {
                default => ['common::RunModes']
            },
            #-pwr_elab_opts_vcs => {
            #    default => [
            #            "-liblist UPF+LPA",
            #            "-power=dccompat_gen_separator",
            #            "-power=coverage",
            #            "-power=always_on",
            #    ],
            #},
            #-run_regression => {
            #    switch  => {
            #        doa =>  '-unbuffer -x -nb -tl doa.list -seed 0  ',
            #        focus =>  '-unbuffer -x -nb -tl focus.list -seed 0 ',
            #    },
            #},
            -test_run_copy_files => { default => [], },
            -test_run_touch_files => { default => [], },
            # TODO: figure out how to specify a matrix of packages to tests to model, and so on.
            #-test_pkg => {
            #    default => 'csme_rtc_testpkg',
            #},
            #-test => {
            #    default => 'csme_rtc_test01',
            #},
            # Override the model by specifying '-model' in the ace command.
            -model => {
                default => 'pgcb_collection',
            },
            # This is the make target for the /p/com/eda/intel/ace/2.00.00.beta.00/bin/ace_test_base.mak (for version 2.0) Makefile.  'force' specifies the targets 'cleanall all'.
            -test_build_target => {
                default => 'force',
            },
            -no_replayvcd_dump,
        }, ##end of InterfaceVars->csme_rtc
    }, # end of InterfaceVars
    CheckerData => {
       pgcb_collection => {
            onda_postchecker => {
                -enable_flag => "-enable_onda_postchecker",
                scripts => [
                    "/p/com/eda/intel/onda/prod/bin/onda: cdc -ver $ENV{ CDC_VER } -ip $ENV{ ACE_PROJECT } -sd  $ENV{ IP_ROOT }",
                ],
                -regexp => '/ONDA STATUS: PASS/i',
                -error_if_not_found => 1,
            },
       },
    }, #end of CheckerData
);

