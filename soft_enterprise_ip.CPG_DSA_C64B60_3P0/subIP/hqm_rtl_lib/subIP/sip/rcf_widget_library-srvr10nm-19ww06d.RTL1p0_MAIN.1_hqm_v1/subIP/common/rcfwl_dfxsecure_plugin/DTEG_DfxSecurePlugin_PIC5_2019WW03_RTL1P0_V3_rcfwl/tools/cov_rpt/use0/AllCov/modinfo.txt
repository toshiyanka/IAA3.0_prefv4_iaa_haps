===============================================================================
Module : DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
 90.84  95.35  90.00  75.53 --      93.33 100.00 

Source File(s) : 

/nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/source/rtl/dfxsecure_plugin/dfxsecure_plugin.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                                        
100.00 100.00 100.00 100.00 --     100.00 100.00 DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x) 



-------------------------------------------------------------------------------
Line Coverage for Module : \DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 

             Line No.   Total   Covered  Percent
TOTAL                       43       41    95.35
ALWAYS            169        4        4   100.00
ALWAYS            185       18       17    94.44
ALWAYS            281        1        1   100.00
ROUTINE           287       19       18    94.74
INITIAL            62        1        1   100.00

168                        begin
169        1/1                if (!fdfx_powergood)
170                           begin  
171        1/1                  dfxsecure_feature_lch <= {DFX_SECURE_WIDTH{LOW}};
172                           end  
173                           else
174                           begin
175        1/1                   if (fdfx_policy_update)
176                              begin  
177        1/1                      dfxsecure_feature_lch <= fdfx_secure_policy;
178                              end   
                        MISSING_ELSE
179                           end   
180                        end     
181                       
182                       //---------------------------------------------------------------------------------------
183                       always_comb
184                       begin
185        1/1              case (dfxsecure_feature_lch)
186                         POLICY0:
187                         begin
188        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY0 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY0 * SIZE_OF_EACH_FEATURE_GROUP)]; 
189                         end
190                         POLICY1:
191                         begin
192        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY1 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY1 * SIZE_OF_EACH_FEATURE_GROUP)]; 
193                         end
194                         POLICY2:
195                         begin
196        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY2 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY2 * SIZE_OF_EACH_FEATURE_GROUP)];
197                         end
198                         POLICY3:
199                         begin
200        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY3 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY3 * SIZE_OF_EACH_FEATURE_GROUP)];
201                         end
202                         POLICY4:
203                         begin
204        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY4 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY4 * SIZE_OF_EACH_FEATURE_GROUP)] ;
205                         end
206                         POLICY5:
207                         begin
208        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY5 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY5 * SIZE_OF_EACH_FEATURE_GROUP)] ;
209                         end
210                         POLICY6:
211                         begin
212        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY6 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY6 * SIZE_OF_EACH_FEATURE_GROUP)] ;
213                         end
214                         POLICY7:
215                         begin
216        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY7 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY7 * SIZE_OF_EACH_FEATURE_GROUP)] ;
217                         end
218                         POLICY8:
219                         begin
220        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY8 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY8 * SIZE_OF_EACH_FEATURE_GROUP)] ;
221                         end
222                         POLICY9:
223                         begin
224        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY9 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY9 * SIZE_OF_EACH_FEATURE_GROUP)] ;
225                         end
226                         POLICY10:
227                         begin
228        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY10 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY10 * SIZE_OF_EACH_FEATURE_GROUP)] ;
229                         end
230                         POLICY11:
231                         begin
232        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY11 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY11 * SIZE_OF_EACH_FEATURE_GROUP)] ;
233                         end
234                         POLICY12:
235                         begin
236        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY12 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY12 * SIZE_OF_EACH_FEATURE_GROUP)] ;
237                         end
238                         POLICY13:
239                         begin
240        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY13 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY13 * SIZE_OF_EACH_FEATURE_GROUP)] ;
241                         end
242                         POLICY14:
243                         begin
244        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY14 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY14 * SIZE_OF_EACH_FEATURE_GROUP)] ;
245                         end
246                         POLICY15:
247                         begin
248        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY15 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY15 * SIZE_OF_EACH_FEATURE_GROUP)] ;
249                         end
250                         default:
251                         begin
252        0/1     ==>        dfxsecure_feature_int = {SIZE_OF_EACH_FEATURE_GROUP{LOW}};
253                         end
254                         endcase
255                       end  
256                     `ifndef DC
257                         `ifndef EMULATION
258                       typedef enum logic [4:0] {
259                           security_locked       = {1'b0,POLICY0},
260                           functionality_locked  = {1'b0,POLICY1},
261                           security_unlocked     = {1'b0,POLICY2},
262                           fuse_programming_only = {1'b0,POLICY3},
263                           intel_unlocked        = {1'b0,POLICY4},
264                           oem_unlocked          = {1'b0,POLICY5},
265                           endebug_unlocked      = {1'b0,POLICY6},
266                           infrared_unlocked     = {1'b0,POLICY7},
267                           dram_debug_unlocked   = {1'b0,POLICY8},
268                           user3_unlocked        = {1'b0,POLICY9},
269                           user4_unlocked        = {1'b0,POLICY10},
270                           user5_unlocked        = {1'b0,POLICY11},
271                           user6_unlocked        = {1'b0,POLICY12},
272                           user7_unlocked        = {1'b0,POLICY13},
273                           user8_unlocked        = {1'b0,POLICY14},
274                           part_disabled         = {1'b0,POLICY15},
275                           undriven              = UNDRIVEN} dfxsecure_policy_encode;
276                     
277                        dfxsecure_policy_encode policy_name;
278                     
279                        always_comb
280                        begin
281        1/1                policy_name = dfxsecure_policy_str(dfxsecure_feature_lch);
282                        end
283                     
284                        function automatic dfxsecure_policy_encode dfxsecure_policy_str(logic [(DFX_SECURE_WIDTH - 1):0] secure_policy);
285                           begin
286                              dfxsecure_policy_encode str;
287        1/1                   case (secure_policy)
288        1/1                      POLICY0 : begin str = security_locked;       end
289        1/1                      POLICY1 : begin str = functionality_locked;  end
290        1/1                      POLICY2 : begin str = security_unlocked;     end
291        1/1                      POLICY3 : begin str = fuse_programming_only; end
292        1/1                      POLICY4 : begin str = intel_unlocked;        end
293        1/1                      POLICY5 : begin str = oem_unlocked;          end
294        1/1                      POLICY6 : begin str = endebug_unlocked;      end
295        1/1                      POLICY7 : begin str = infrared_unlocked;     end
296        1/1                      POLICY8 : begin str = dram_debug_unlocked;   end
297        1/1                      POLICY9 : begin str = user3_unlocked;        end
298        1/1                      POLICY10: begin str = user4_unlocked;        end
299        1/1                      POLICY11: begin str = user5_unlocked;        end
300        1/1                      POLICY12: begin str = user6_unlocked;        end
301        1/1                      POLICY13: begin str = user7_unlocked;        end
302        1/1                      POLICY14: begin str = user8_unlocked;        end
303        1/1                      POLICY15: begin str = part_disabled;         end
304        0/1     ==>              default:  begin str = undriven;              end
305                              endcase
306        1/1                   return str;

  FILE: /nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/source/rtl/include/assertions/dfxsecure_include.sv
68         1/1                      #1ps

-------------------------------------------------------------------------------
Cond Coverage for Module : \DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 

               Total   Covered  Percent
Conditions         10        9    90.00
Logical            10        9    90.00
Non-Logical         0        0
Event               0        0

 LINE       153
 EXPRESSION ((fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[0] : dfxsecure_feature_mux[0])
             --------------1-------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       154
 EXPRESSION ((fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[1] : dfxsecure_feature_mux[1])
             --------------1-------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       155
 EXPRESSION 
 Number  Term
      1  (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[(SIZE_OF_EACH_FEATURE_GROUP - 1):2] : dfxsecure_feature_mux[(SIZE_OF_EACH_FEATURE_GROUP - 1):2])

-1- Status                        
 0  Covered
 1  Covered

 LINE       160
 EXPRESSION ((dfxsecure_feature_lch == oem_secure_policy) ? HIGH : LOW)
             ----------------------1---------------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       162
 EXPRESSION ((oem_select == HIGH) ? sb_policy_ovr_value : dfxsecure_feature_int)
             ----------1---------

-1- Status                        
 0  Covered
 1  Not Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : \DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 
                Total Covered Percent 
Totals          16    11      68.75   
Total Bits      94    71      75.53   
Total Bits 0->1 47    35      74.47   
Total Bits 1->0 47    36      76.60   

                            
Ports          9  7  77.78  
Port Bits      42 24 57.14  
Port Bits 0->1 21 12 57.14  
Port Bits 1->0 21 12 57.14  

                              
Signals          7  4  57.14  
Signal Bits      52 47 90.38  
Signal Bits 0->1 26 23 88.46  
Signal Bits 1->0 26 24 92.31  

Port Details
                          Toggle Toggle 1->0 Toggle 0->1 Direction 
fdfx_powergood            Yes    Yes         Yes         INPUT     
fdfx_secure_policy[3:0]   Yes    Yes         Yes         INPUT     
fdfx_earlyboot_exit       Yes    Yes         Yes         INPUT     
fdfx_policy_update        Yes    Yes         Yes         INPUT     
dfxsecure_feature_en[2:0] Yes    Yes         Yes         OUTPUT    
visa_all_dis              Yes    Yes         Yes         OUTPUT    
visa_customer_dis         Yes    Yes         Yes         OUTPUT    
sb_policy_ovr_value[4:0]  No     No          No          INPUT     
oem_secure_policy[3:0]    No     No          No          INPUT     

Signal Details
                            Toggle Toggle 1->0 Toggle 0->1 
dfxsecure_feature_int[4:0]  Yes    Yes         Yes         
dfxsecure_feature_lch[3:0]  Yes    Yes         Yes         
dfxsecure_feature_mux[4:0]  Yes    Yes         Yes         
oem_dfx_compare             No     Yes         No          
oem_select                  No     No          No          
policy_name[3:0]            Yes    Yes         Yes         
policy_name[4]              No     No          No          
local_feature_en_value[4:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Module : \DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 
         Line No. Total Covered Percent 
Branches          30    28      93.33   
TERNARY  153      2     2       100.00  
TERNARY  154      2     2       100.00  
TERNARY  155      2     2       100.00  
TERNARY  160      2     2       100.00  
TERNARY  162      2     1       50.00   
IF       169      3     3       100.00  
CASE     185      17    16      94.12   


153           assign visa_customer_dis    = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[0] : dfxsecure_feature_mux[0];
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


154           assign visa_all_dis         = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[1] : dfxsecure_feature_mux[1]; 
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


155           assign dfxsecure_feature_en = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[(SIZE_OF_EACH_FEATURE_GROUP - 1):2] : dfxsecure_feature_mux[(SIZE_OF_EACH_FEATURE_GROUP - 1):2];
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


160           assign oem_dfx_compare       = (dfxsecure_feature_lch == oem_secure_policy) ? HIGH : LOW; 
                                                                                          -1-  
                                                                                          ==>  
                                                                                          ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


162           assign dfxsecure_feature_mux = (oem_select == HIGH) ? sb_policy_ovr_value : dfxsecure_feature_int;
                                                                  -1-  
                                                                  ==>  
                                                                  ==>  

Branches:

-1- Status      
1   Not Covered 
0   Covered     


169              if (!fdfx_powergood)
                 -1-  
170              begin  
171                dfxsecure_feature_lch <= {DFX_SECURE_WIDTH{LOW}};
                   ==>
172              end  
173              else
174              begin
175                 if (fdfx_policy_update)
                    -2-  
176                 begin  
177                    dfxsecure_feature_lch <= fdfx_secure_policy;
                       ==>
178                 end   
                    MISSING_ELSE
                    ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


185            case (dfxsecure_feature_lch)
               -1-  
186            POLICY0:
187            begin
188              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY0 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY0 * SIZE_OF_EACH_FEATURE_GROUP)]; 
                 ==>
189            end
190            POLICY1:
191            begin
192              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY1 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY1 * SIZE_OF_EACH_FEATURE_GROUP)]; 
                 ==>
193            end
194            POLICY2:
195            begin
196              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY2 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY2 * SIZE_OF_EACH_FEATURE_GROUP)];
                 ==>
197            end
198            POLICY3:
199            begin
200              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY3 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY3 * SIZE_OF_EACH_FEATURE_GROUP)];
                 ==>
201            end
202            POLICY4:
203            begin
204              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY4 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY4 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
205            end
206            POLICY5:
207            begin
208              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY5 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY5 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
209            end
210            POLICY6:
211            begin
212              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY6 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY6 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
213            end
214            POLICY7:
215            begin
216              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY7 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY7 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
217            end
218            POLICY8:
219            begin
220              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY8 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY8 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
221            end
222            POLICY9:
223            begin
224              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY9 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY9 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
225            end
226            POLICY10:
227            begin
228              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY10 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY10 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
229            end
230            POLICY11:
231            begin
232              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY11 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY11 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
233            end
234            POLICY12:
235            begin
236              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY12 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY12 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
237            end
238            POLICY13:
239            begin
240              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY13 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY13 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
241            end
242            POLICY14:
243            begin
244              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY14 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY14 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
245            end
246            POLICY15:
247            begin
248              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY15 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY15 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
249            end
250            default:
251            begin
252              dfxsecure_feature_int = {SIZE_OF_EACH_FEATURE_GROUP{LOW}};
                 ==>

Branches:

-1-       Status      
POLICY0   Covered     
POLICY1   Covered     
POLICY2   Covered     
POLICY3   Covered     
POLICY4   Covered     
POLICY5   Covered     
POLICY6   Covered     
POLICY7   Covered     
POLICY8   Covered     
POLICY9   Covered     
POLICY10  Covered     
POLICY11  Covered     
POLICY12  Covered     
POLICY13  Covered     
POLICY14  Covered     
POLICY15  Covered     
default   Not Covered 


-------------------------------------------------------------------------------
Assert Coverage for Module : \DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 
                 Total Attempted Percent Succeeded/Matched Percent 
Assertions       6     6         100.00  6                 100.00  
Cover properties 0     0                 0                         
Cover sequences  0     0                 0                         
Total            6     6         100.00  6                 100.00  



-------------------------------------------------------------------------------

Assertion Details

Name                                                                                     Attempts Real Successes Failures Incomplete 
CHK_DFX_SECURE_WIDTH_IS_FOUR                                                             80       80             0        0          
CHK_OEM_SECURE_POLICY_IS_USER_DEFINED_POLICY_STATES_IF_USE_OVR_IS_HIGH                   80       80             0        0          
CHK_OEM_SECURE_POLICY_IS_ZERO_IF_USE_OVR_IS_ZERO                                         80       80             0        0          
CHK_SB_POLICY_OVR_VALUE_IS_ZERO_IF_USE_OVR_IS_ZERO                                       80       80             0        0          
chk_check_output_eq_early_bootexit_val_when_early_bootexit_low                           780      260            0        0          
genblk2.chk_check_output_eq_plcy_matrix_val_when_use_sb_disabled_and_early_bootexit_high 780      440            0        0          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 100.00 100.00 100.00 --     100.00 100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 100.00 100.00 100.00 --     100.00 100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                                      
 90.84  95.35  90.00  75.53 --      93.33 100.00 DFXSECURE_PLUGIN_RTL_LIB.dfxsecure_plugin 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                     
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop(X) 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)

             Line No.   Total   Covered  Percent
TOTAL                       41       41   100.00
ALWAYS            169        4        4   100.00
ALWAYS            185       17       17   100.00
ALWAYS            281        1        1   100.00
ROUTINE           287       18       18   100.00
INITIAL            62        1        1   100.00

168                        begin
169        1/1                if (!fdfx_powergood)
170                           begin  
171        1/1                  dfxsecure_feature_lch <= {DFX_SECURE_WIDTH{LOW}};
172                           end  
173                           else
174                           begin
175        1/1                   if (fdfx_policy_update)
176                              begin  
177        1/1                      dfxsecure_feature_lch <= fdfx_secure_policy;
178                              end   
                        MISSING_ELSE
179                           end   
180                        end     
181                       
182                       //---------------------------------------------------------------------------------------
183                       always_comb
184                       begin
185        1/1              case (dfxsecure_feature_lch)
186                         POLICY0:
187                         begin
188        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY0 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY0 * SIZE_OF_EACH_FEATURE_GROUP)]; 
189                         end
190                         POLICY1:
191                         begin
192        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY1 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY1 * SIZE_OF_EACH_FEATURE_GROUP)]; 
193                         end
194                         POLICY2:
195                         begin
196        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY2 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY2 * SIZE_OF_EACH_FEATURE_GROUP)];
197                         end
198                         POLICY3:
199                         begin
200        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY3 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY3 * SIZE_OF_EACH_FEATURE_GROUP)];
201                         end
202                         POLICY4:
203                         begin
204        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY4 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY4 * SIZE_OF_EACH_FEATURE_GROUP)] ;
205                         end
206                         POLICY5:
207                         begin
208        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY5 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY5 * SIZE_OF_EACH_FEATURE_GROUP)] ;
209                         end
210                         POLICY6:
211                         begin
212        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY6 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY6 * SIZE_OF_EACH_FEATURE_GROUP)] ;
213                         end
214                         POLICY7:
215                         begin
216        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY7 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY7 * SIZE_OF_EACH_FEATURE_GROUP)] ;
217                         end
218                         POLICY8:
219                         begin
220        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY8 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY8 * SIZE_OF_EACH_FEATURE_GROUP)] ;
221                         end
222                         POLICY9:
223                         begin
224        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY9 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY9 * SIZE_OF_EACH_FEATURE_GROUP)] ;
225                         end
226                         POLICY10:
227                         begin
228        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY10 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY10 * SIZE_OF_EACH_FEATURE_GROUP)] ;
229                         end
230                         POLICY11:
231                         begin
232        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY11 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY11 * SIZE_OF_EACH_FEATURE_GROUP)] ;
233                         end
234                         POLICY12:
235                         begin
236        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY12 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY12 * SIZE_OF_EACH_FEATURE_GROUP)] ;
237                         end
238                         POLICY13:
239                         begin
240        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY13 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY13 * SIZE_OF_EACH_FEATURE_GROUP)] ;
241                         end
242                         POLICY14:
243                         begin
244        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY14 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY14 * SIZE_OF_EACH_FEATURE_GROUP)] ;
245                         end
246                         POLICY15:
247                         begin
248        1/1                dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY15 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY15 * SIZE_OF_EACH_FEATURE_GROUP)] ;
249                         end
250                         default:
251                         begin
252        excluded           dfxsecure_feature_int = {SIZE_OF_EACH_FEATURE_GROUP{LOW}};
253                         end
254                         endcase
255                       end  
256                     `ifndef DC
257                         `ifndef EMULATION
258                       typedef enum logic [4:0] {
259                           security_locked       = {1'b0,POLICY0},
260                           functionality_locked  = {1'b0,POLICY1},
261                           security_unlocked     = {1'b0,POLICY2},
262                           fuse_programming_only = {1'b0,POLICY3},
263                           intel_unlocked        = {1'b0,POLICY4},
264                           oem_unlocked          = {1'b0,POLICY5},
265                           endebug_unlocked      = {1'b0,POLICY6},
266                           infrared_unlocked     = {1'b0,POLICY7},
267                           dram_debug_unlocked   = {1'b0,POLICY8},
268                           user3_unlocked        = {1'b0,POLICY9},
269                           user4_unlocked        = {1'b0,POLICY10},
270                           user5_unlocked        = {1'b0,POLICY11},
271                           user6_unlocked        = {1'b0,POLICY12},
272                           user7_unlocked        = {1'b0,POLICY13},
273                           user8_unlocked        = {1'b0,POLICY14},
274                           part_disabled         = {1'b0,POLICY15},
275                           undriven              = UNDRIVEN} dfxsecure_policy_encode;
276                     
277                        dfxsecure_policy_encode policy_name;
278                     
279                        always_comb
280                        begin
281        1/1                policy_name = dfxsecure_policy_str(dfxsecure_feature_lch);
282                        end
283                     
284                        function automatic dfxsecure_policy_encode dfxsecure_policy_str(logic [(DFX_SECURE_WIDTH - 1):0] secure_policy);
285                           begin
286                              dfxsecure_policy_encode str;
287        1/1                   case (secure_policy)
288        1/1                      POLICY0 : begin str = security_locked;       end
289        1/1                      POLICY1 : begin str = functionality_locked;  end
290        1/1                      POLICY2 : begin str = security_unlocked;     end
291        1/1                      POLICY3 : begin str = fuse_programming_only; end
292        1/1                      POLICY4 : begin str = intel_unlocked;        end
293        1/1                      POLICY5 : begin str = oem_unlocked;          end
294        1/1                      POLICY6 : begin str = endebug_unlocked;      end
295        1/1                      POLICY7 : begin str = infrared_unlocked;     end
296        1/1                      POLICY8 : begin str = dram_debug_unlocked;   end
297        1/1                      POLICY9 : begin str = user3_unlocked;        end
298        1/1                      POLICY10: begin str = user4_unlocked;        end
299        1/1                      POLICY11: begin str = user5_unlocked;        end
300        1/1                      POLICY12: begin str = user6_unlocked;        end
301        1/1                      POLICY13: begin str = user7_unlocked;        end
302        1/1                      POLICY14: begin str = user8_unlocked;        end
303        1/1                      POLICY15: begin str = part_disabled;         end
304        excluded                 default:  begin str = undriven;              end
305                              endcase
306        1/1                   return str;

  FILE: /nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/source/rtl/include/assertions/dfxsecure_include.sv
68         1/1                      #1ps

-------------------------------------------------------------------------------
Cond Coverage for Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)

               Total   Covered  Percent
Conditions          9        9   100.00
Logical             9        9   100.00
Non-Logical         0        0
Event               0        0

 LINE       153
 EXPRESSION ((fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[0] : dfxsecure_feature_mux[0])
             --------------1-------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       154
 EXPRESSION ((fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[1] : dfxsecure_feature_mux[1])
             --------------1-------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       155
 EXPRESSION 
 Number  Term
      1  (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[(SIZE_OF_EACH_FEATURE_GROUP - 1):2] : dfxsecure_feature_mux[(SIZE_OF_EACH_FEATURE_GROUP - 1):2])

-1- Status                        
 0  Covered
 1  Covered

 LINE       160
 EXPRESSION ((dfxsecure_feature_lch == oem_secure_policy) ? HIGH : LOW)
             ----------------------1---------------------

-1- Status                        
 0  Covered
 1  Covered

 LINE       162
 EXPRESSION ((oem_select == HIGH) ? sb_policy_ovr_value : dfxsecure_feature_int)
             ----------1---------

-1- Status                        
 0  Covered
 1  Excluded

-------------------------------------------------------------------------------
Toggle Coverage for Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)
                Total Covered Percent 
Totals          12    12      100.00  
Total Bits      70    70      100.00  
Total Bits 0->1 35    35      100.00  
Total Bits 1->0 35    35      100.00  

                            
Ports          7  7  100.00 
Port Bits      24 24 100.00 
Port Bits 0->1 12 12 100.00 
Port Bits 1->0 12 12 100.00 

                              
Signals          5  5  100.00 
Signal Bits      46 46 100.00 
Signal Bits 0->1 23 23 100.00 
Signal Bits 1->0 23 23 100.00 

Port Details
                          Toggle   Toggle 1->0 Toggle 0->1 Direction 
fdfx_powergood            Yes      Yes         Yes         INPUT     
fdfx_secure_policy[3:0]   Yes      Yes         Yes         INPUT     
fdfx_earlyboot_exit       Yes      Yes         Yes         INPUT     
fdfx_policy_update        Yes      Yes         Yes         INPUT     
dfxsecure_feature_en[2:0] Yes      Yes         Yes         OUTPUT    
visa_all_dis              Yes      Yes         Yes         OUTPUT    
visa_customer_dis         Yes      Yes         Yes         OUTPUT    
sb_policy_ovr_value[4:0]  Excluded Excluded    Excluded    INPUT     
oem_secure_policy[3:0]    Excluded Excluded    Excluded    INPUT     

Signal Details
                            Toggle   Toggle 1->0 Toggle 0->1 
dfxsecure_feature_int[4:0]  Yes      Yes         Yes         
dfxsecure_feature_lch[3:0]  Yes      Yes         Yes         
dfxsecure_feature_mux[4:0]  Yes      Yes         Yes         
oem_dfx_compare             Excluded Excluded    Excluded    
oem_select                  Excluded Excluded    Excluded    
policy_name[3:0]            Yes      Yes         Yes         
policy_name[4]              Excluded Excluded    Excluded    
local_feature_en_value[4:0] Yes      Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)
         Line No. Total Covered Percent 
Branches          28    28      100.00  
TERNARY  153      2     2       100.00  
TERNARY  154      2     2       100.00  
TERNARY  155      2     2       100.00  
TERNARY  160      2     2       100.00  
TERNARY  162      1     1       100.00  
IF       169      3     3       100.00  
CASE     185      16    16      100.00  


153           assign visa_customer_dis    = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[0] : dfxsecure_feature_mux[0];
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


154           assign visa_all_dis         = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[1] : dfxsecure_feature_mux[1]; 
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


155           assign dfxsecure_feature_en = (fdfx_earlyboot_exit == LOW) ? DFX_EARLYBOOT_FEATURE_ENABLE[(SIZE_OF_EACH_FEATURE_GROUP - 1):2] : dfxsecure_feature_mux[(SIZE_OF_EACH_FEATURE_GROUP - 1):2];
                                                                         -1-  
                                                                         ==>  
                                                                         ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


160           assign oem_dfx_compare       = (dfxsecure_feature_lch == oem_secure_policy) ? HIGH : LOW; 
                                                                                          -1-  
                                                                                          ==>  
                                                                                          ==>  

Branches:

-1- Status  
1   Covered 
0   Covered 


162           assign dfxsecure_feature_mux = (oem_select == HIGH) ? sb_policy_ovr_value : dfxsecure_feature_int;
                                                                  -1-  
                                                                  ==> (Excluded)  
                                                                  ==>  

Branches:

-1- Status   
1   Excluded 
0   Covered  


169              if (!fdfx_powergood)
                 -1-  
170              begin  
171                dfxsecure_feature_lch <= {DFX_SECURE_WIDTH{LOW}};
                   ==>
172              end  
173              else
174              begin
175                 if (fdfx_policy_update)
                    -2-  
176                 begin  
177                    dfxsecure_feature_lch <= fdfx_secure_policy;
                       ==>
178                 end   
                    MISSING_ELSE
                    ==>

Branches:

-1- -2- Status  
1   -   Covered 
0   1   Covered 
0   0   Covered 


185            case (dfxsecure_feature_lch)
               -1-  
186            POLICY0:
187            begin
188              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY0 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY0 * SIZE_OF_EACH_FEATURE_GROUP)]; 
                 ==>
189            end
190            POLICY1:
191            begin
192              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY1 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY1 * SIZE_OF_EACH_FEATURE_GROUP)]; 
                 ==>
193            end
194            POLICY2:
195            begin
196              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY2 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY2 * SIZE_OF_EACH_FEATURE_GROUP)];
                 ==>
197            end
198            POLICY3:
199            begin
200              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY3 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY3 * SIZE_OF_EACH_FEATURE_GROUP)];
                 ==>
201            end
202            POLICY4:
203            begin
204              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY4 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY4 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
205            end
206            POLICY5:
207            begin
208              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY5 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY5 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
209            end
210            POLICY6:
211            begin
212              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY6 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY6 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
213            end
214            POLICY7:
215            begin
216              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY7 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY7 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
217            end
218            POLICY8:
219            begin
220              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY8 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY8 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
221            end
222            POLICY9:
223            begin
224              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY9 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY9 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
225            end
226            POLICY10:
227            begin
228              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY10 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY10 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
229            end
230            POLICY11:
231            begin
232              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY11 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY11 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
233            end
234            POLICY12:
235            begin
236              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY12 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY12 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
237            end
238            POLICY13:
239            begin
240              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY13 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY13 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
241            end
242            POLICY14:
243            begin
244              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY14 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY14 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
245            end
246            POLICY15:
247            begin
248              dfxsecure_feature_int = DFX_SECURE_POLICY_MATRIX[(((POLICY15 * SIZE_OF_EACH_FEATURE_GROUP) + SIZE_OF_EACH_FEATURE_GROUP) - 1):(POLICY15 * SIZE_OF_EACH_FEATURE_GROUP)] ;
                 ==>
249            end
250            default:
251            begin
252              dfxsecure_feature_int = {SIZE_OF_EACH_FEATURE_GROUP{LOW}};
                 ==> (Excluded)

Branches:

-1-       Status   
POLICY0   Covered  
POLICY1   Covered  
POLICY2   Covered  
POLICY3   Covered  
POLICY4   Covered  
POLICY5   Covered  
POLICY6   Covered  
POLICY7   Covered  
POLICY8   Covered  
POLICY9   Covered  
POLICY10  Covered  
POLICY11  Covered  
POLICY12  Covered  
POLICY13  Covered  
POLICY14  Covered  
POLICY15  Covered  
default   Excluded 


-------------------------------------------------------------------------------
Assert Coverage for Instance : DfxSecurePlugin_Tbtop.dfxsecure_top_inst(x)
                 Total Attempted Percent Succeeded/Matched Percent 
Assertions       6     6         100.00  6                 100.00  
Cover properties 0     0                 0                         
Cover sequences  0     0                 0                         
Total            6     6         100.00  6                 100.00  



-------------------------------------------------------------------------------

Assertion Details

Name                                                                                     Attempts Real Successes Failures Incomplete 
CHK_DFX_SECURE_WIDTH_IS_FOUR                                                             80       80             0        0          
CHK_OEM_SECURE_POLICY_IS_USER_DEFINED_POLICY_STATES_IF_USE_OVR_IS_HIGH                   80       80             0        0          
CHK_OEM_SECURE_POLICY_IS_ZERO_IF_USE_OVR_IS_ZERO                                         80       80             0        0          
CHK_SB_POLICY_OVR_VALUE_IS_ZERO_IF_USE_OVR_IS_ZERO                                       80       80             0        0          
chk_check_output_eq_early_bootexit_val_when_early_bootexit_low                           780      260            0        0          
genblk2.chk_check_output_eq_plcy_matrix_val_when_use_sb_disabled_and_early_bootexit_high 780      440            0        0          


===============================================================================
Module : vcs_paramclassrepository
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 --     --     --     --     --     100.00 

Module self-instances :

SCORE LINE COND TOGGLE FSM BRANCH ASSERT NAME 



-------------------------------------------------------------------------------
Assert Coverage for Module : vcs_paramclassrepository
                 Total Attempted Percent Succeeded/Matched Percent 
Assertions       4     4         100.00  4                 100.00  
Cover properties 0     0                 0                         
Cover sequences  0     0                 0                         
Total            4     4         100.00  4                 100.00  



-------------------------------------------------------------------------------

Assertion Details

Name                                                                         Attempts Real Successes Failures Incomplete 
\DfxSecurePlugin_Driver#(3,4,0,10000.000000000000)::connect .unnamed$$_0     80       80             0        0          
\DfxSecurePlugin_Env#(3,4,0,10000.000000000000)::connect .unnamed$$_0        80       80             0        0          
\DfxSecurePlugin_InpMonitor#(3,4,0,10000.000000000000)::connect .unnamed$$_0 80       80             0        0          
\DfxSecurePlugin_OutMonitor#(3,4,0,10000.000000000000)::connect .unnamed$$_0 80       80             0        0          


===============================================================================
Module : DFXSECURE_PLUGIN_TI_LIB.DfxSecurePlugin_TestIsland
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 --     --     --     --     --     100.00 

Source File(s) : 

/nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/verif/tb/DfxSecurePlugin_TestIsland.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                                               
100.00 --     --     --     --     --     100.00 DfxSecurePlugin_Tbtop.i_DfxSecurePlugin_TestIsland 



-------------------------------------------------------------------------------
Line Coverage for Module : \DFXSECURE_PLUGIN_TI_LIB.DfxSecurePlugin_TestIsland 

             Line No.   Total   Covered  Percent
TOTAL                        0        0
INITIAL            86        0        0

85                         begin
86         excluded           vif_container = new ();
87         excluded           vif_container.set_v_if (`DFX_SECURE_PLUGIN_PIF);
88         excluded           set_config_object (DFXSECUREPLUGINVIF, "V_DFXSECPLUGIN_VIF", vif_container, 0);

-------------------------------------------------------------------------------
Assert Coverage for Module : \DFXSECURE_PLUGIN_TI_LIB.DfxSecurePlugin_TestIsland 
                 Total Attempted Percent Succeeded/Matched Percent 
Assertions       17    17        100.00  17                100.00  
Cover properties 0     0                 0                         
Cover sequences  0     0                 0                         
Total            17    17        100.00  17                100.00  



-------------------------------------------------------------------------------

Assertion Details

Name                                                                             Attempts Real Successes Failures Incomplete 
SECURE_POLICY_CHECK_BEFORE_EARLYBOOTEXIT                                         13060    6240           0        0          
genblk2.policy_checker_use0[0].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[10].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    20             0        0          
genblk2.policy_checker_use0[11].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    20             0        0          
genblk2.policy_checker_use0[12].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    20             0        0          
genblk2.policy_checker_use0[13].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    20             0        0          
genblk2.policy_checker_use0[14].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    20             0        0          
genblk2.policy_checker_use0[15].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0 13060    340            0        0          
genblk2.policy_checker_use0[1].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[2].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[3].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[4].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[5].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[6].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[7].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[8].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          
genblk2.policy_checker_use0[9].SECURE_POLICY_CHECK_AFTER_EARLYBOOTEXIT_USE_SB_0  13060    20             0        0          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : DfxSecurePlugin_Tbtop.i_DfxSecurePlugin_TestIsland
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 --     --     --     --     --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 --     --     --     --     --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                                               
100.00 --     --     --     --     --     100.00 DFXSECURE_PLUGIN_TI_LIB.DfxSecurePlugin_TestIsland 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                     
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop(X) 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : DFXSECURE_PLUGIN_PKG_LIB.DfxSecurePlugin_pin_if(X)
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
--     --     --     --     --     --     --     

Source File(s) : 

/nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/verif/tb/DfxSecurePlugin_pin_if.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                         
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop.pif(X) 



-------------------------------------------------------------------------------
Toggle Coverage for Module : \DFXSECURE_PLUGIN_PKG_LIB.DfxSecurePlugin_pin_if (X)
Port Details
       Toggle   Toggle 1->0 Toggle 0->1 Direction 
tb_clk Excluded Excluded    Excluded    INPUT     

Signal Details
                          Toggle   Toggle 1->0 Toggle 0->1 
fdfx_powergood            Excluded Excluded    Excluded    
fdfx_secure_policy[3:0]   Excluded Excluded    Excluded    
fdfx_earlyboot_exit       Excluded Excluded    Excluded    
fdfx_policy_update        Excluded Excluded    Excluded    
dfxsecure_feature_en[2:0] Excluded Excluded    Excluded    
visa_all_dis              Excluded Excluded    Excluded    
visa_customer_dis         Excluded Excluded    Excluded    
sb_policy_ovr_value[4:0]  Excluded Excluded    Excluded    
oem_secure_policy[3:0]    Excluded Excluded    Excluded    


===============================================================================
Module : DFXSECURE_PLUGIN_TB_LIB.DfxSecurePlugin_ClkGen(X)
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
--     --     --     --     --     --     --     

Source File(s) : 

/nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/verif/tb/DfxSecurePlugin_ClkGen.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                                              
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop.i_DfxSecurePlugin_ClkGen(X) 



-------------------------------------------------------------------------------
Line Coverage for Module : \DFXSECURE_PLUGIN_TB_LIB.DfxSecurePlugin_ClkGen (X)

             Line No.   Total   Covered  Percent
TOTAL                        0        0
INITIAL            61        0        0
ALWAYS             66        0        0

60                          initial begin
61         excluded             DfxSecurePlugin_tb_clk = 1'b0;
62                          end
63                      
64                          // 100 MHz always on TB Clock
65                          always begin
66         excluded             #(TB_CLK_PERIOD/2) DfxSecurePlugin_tb_clk = ~(DfxSecurePlugin_tb_clk);

-------------------------------------------------------------------------------
Toggle Coverage for Module : \DFXSECURE_PLUGIN_TB_LIB.DfxSecurePlugin_ClkGen (X)
Port Details
                       Toggle   Toggle 1->0 Toggle 0->1 Direction 
DfxSecurePlugin_tb_clk Excluded Excluded    Excluded    OUTPUT    


===============================================================================
Module : DfxSecurePlugin_Tbtop(X)
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
--     --     --     --     --     --     --     

Source File(s) : 

/nfs/iind/disks/mg_disk1653/sudheer/tarball/for_release/dteg-dfxsecure_plugin/target/dfxsecure_plugin/ICL/aceroot/verif/tb/DfxSecurePlugin_Tbtop.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                     
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop(X) 



-------------------------------------------------------------------------------
Line Coverage for Module : DfxSecurePlugin_Tbtop(X)

             Line No.   Total   Covered  Percent
TOTAL                        0        0
INITIAL           102        0        0
INITIAL           110        0        0
INITIAL           118        0        0

101                        initial begin : VCD_BLOCK
102        excluded           if (($test$plusargs("DUMP_VCD")) || ($test$plusargs("VCD"))) begin
103        excluded              $display("Dump in VCD format ENABLED");
104        excluded              $vcdplusfile("Dump.vcd");
105        excluded                 $vcdpluson(0,DfxSecurePlugin_Tbtop);
106                           end
                   ==>  MISSING_ELSE
107                        end : VCD_BLOCK
108                     
109                        initial begin : VPD_BLOCK
110        excluded           if (($test$plusargs("DUMP_VPD")) || ($test$plusargs("VPD"))) begin
111        excluded              $display("Dump in VPD format ENABLED");
112        excluded              $vcdplusfile("Dump.vpd");
113        excluded                 $vcdpluson(0,DfxSecurePlugin_Tbtop);
114                           end
                   ==>  MISSING_ELSE
115                        end : VPD_BLOCK
116                     
117                        initial begin : FSDB_BLOCK
118        excluded           if (($test$plusargs("DUMP")) || ($test$plusargs("FSDB"))) begin
119        excluded              $display("Dump ENABLED");
120        excluded              $fsdbDumpfile("Dump.fsdb");
121        excluded              $fsdbDumpSVAon; 
122                              `ifdef POWERVCD
123                              $fsdbDumpvars(dfxsecure_plugin,"+all");
124                              `else
125        excluded              $fsdbDumpvars("+all");
126                              `endif
127        excluded            $fsdbDumpSVAoff;
128                           end
                   ==>  MISSING_ELSE

-------------------------------------------------------------------------------
Toggle Coverage for Module : DfxSecurePlugin_Tbtop(X)
Signal Details
          Toggle   Toggle 1->0 Toggle 0->1 
soc_clock Excluded Excluded    Excluded    


-------------------------------------------------------------------------------
Branch Coverage for Module : DfxSecurePlugin_Tbtop(X)
         Line No. Total Covered Percent 
Branches          0     0               
IF       102      0     0               
IF       110      0     0               
IF       118      0     0               


102              if (($test$plusargs("DUMP_VCD")) || ($test$plusargs("VCD"))) begin
                 -1-  
103                 $display("Dump in VCD format ENABLED");
                    ==> (Excluded)
104                 $vcdplusfile("Dump.vcd");
105                    $vcdpluson(0,DfxSecurePlugin_Tbtop);
106              end
                 MISSING_ELSE
                 ==> (Excluded)

Branches:

-1- Status   
1   Excluded 
0   Excluded 


110              if (($test$plusargs("DUMP_VPD")) || ($test$plusargs("VPD"))) begin
                 -1-  
111                 $display("Dump in VPD format ENABLED");
                    ==> (Excluded)
112                 $vcdplusfile("Dump.vpd");
113                    $vcdpluson(0,DfxSecurePlugin_Tbtop);
114              end
                 MISSING_ELSE
                 ==> (Excluded)

Branches:

-1- Status   
1   Excluded 
0   Excluded 


118              if (($test$plusargs("DUMP")) || ($test$plusargs("FSDB"))) begin
                 -1-  
119                 $display("Dump ENABLED");
                    ==> (Excluded)
120                 $fsdbDumpfile("Dump.fsdb");
121                 $fsdbDumpSVAon; 
122                 `ifdef POWERVCD
123                 $fsdbDumpvars(dfxsecure_plugin,"+all");
124                 `else
125                 $fsdbDumpvars("+all");
126                 `endif
127               $fsdbDumpSVAoff;
128              end
                 MISSING_ELSE
                 ==> (Excluded)

Branches:

-1- Status   
1   Excluded 
0   Excluded 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : DfxSecurePlugin_Tbtop(X)
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
--     --     --     --     --     --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT 
100.00 100.00 100.00 100.00 --     100.00 100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                     
--     --     --     --     --     --     --     DfxSecurePlugin_Tbtop(X) 


Parent : 

none
----------------


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH ASSERT NAME                         
100.00 100.00 100.00 100.00 --     100.00 100.00 dfxsecure_top_inst(x)        
100.00 --     --     --     --     --     100.00 i_DfxSecurePlugin_TestIsland 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
