# -*-cperl-*-
BEGIN {
    unshift @INC, ("$ENV{MODEL_ROOT}/tools/febe/inputs/common/finalized","$ENV{MODEL_ROOT}/tools/febe/inputs/common",);
}

package finalized;

use dft_reset_sync_final_cfg;
use cdc_wrapper_final_cfg;
use ip_disable_final_cfg;
use fuse_hip_glue_final_cfg;

use lib "$ENV{RTL_PROJ_BIN}/perllib";
use ToolConfig;

my $CTECH_cfg = {
                 -path => [],
                 -replace => [],
};

my @add_replace_ctech_files = (
                               #priority order top-to-bottom
                               #for example, you may now choose a mixed design of nom,svt. E.g. nom for clk ctechs with a *ctech_lib*clk*.sv pattern
                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech")."/source/p1274/ec0/ln/*ctech_lib*.sv"),
                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech_exp")."/source/p1274/ec0/ln/*ctech_lib*.sv"),
#                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech_exp")."/source/p1274/ec0/syn_tmp/*ctech_lib*.sv"),
                              );

foreach my $file (@add_replace_ctech_files) {
     my @source = split(/source/,$file);
     my @function = split(/ctech_lib_/,$source[1]);
     my $replace = {
                    #assume match should be from source/v
                    match => "source/v/ctech_lib_$function[1]",
                    replace => "source$function[0]ctech_lib_$function[1]",
                   };
     push($CTECH_cfg->{-replace},$replace);
 }

sub get_data() {

    return {
        rcfwl_dft_reset_sync          =>   $dft_reset_sync_final_cfg::dc_cfg ,
        rcfwl_cdc_wrapper             =>   $cdc_wrapper_final_cfg::dc_cfg ,
            rcfwl_ip_disable          =>   $ip_disable_final_cfg::dc_cfg,
        rcfwl_fuse_hip_glue           =>   $fuse_hip_glue_final_cfg::dc_cfg ,

        COMMON_CFG => {
            -lib_variant => "ln,nn",
            -stdlib_type => "ec0",
            -add_ctech_files => [],
#            -search => ["$ENV{MODEL_ROOT}/src/rtl/widgets",],
#            -nb_resource => {'dc' => 'CLASS_8G',},
            -rm_ctech_files => [
                                "\/v\/ctech_lib*",
                               ],
         },
        PATH_REGULATOR => {
            -full_env => [ 'MODEL_ROOT', 'REPO_ROOT', 'IP_RELEASES' , 'CTECH_VERSION', 'CTECH_EXP_VERSION' ],
        },
        'CTECH' => $CTECH_cfg,
         LIB_2STAGE_CFG => {
#           '-libfiles_as_designfiles' => 1,
#           '-add_defines' => ['SVA_OFF', 'INTEL_SVA_OFF'],
           '-enable_skip' => 1,
           '-filter_defines' => ['INTEL_SIMONLY','INST_ON'],
            -sim_filter_defines => ['INTEL_SVA_OFF','DC_INCLUDES',],
            -sim_add_defines => ['NO_PWR_PINS',],
        },
          LIB_2STAGE_CFG_sim  => {
           '-enable_skip' => 1,
           'filter_hier' => [],
           'filter_defines' => ['INTEL_SIMONLY','INST_ON'],
           '-add_defines' => [ 'NO_PWR_PINS' ],
          },
    }
}

1;
