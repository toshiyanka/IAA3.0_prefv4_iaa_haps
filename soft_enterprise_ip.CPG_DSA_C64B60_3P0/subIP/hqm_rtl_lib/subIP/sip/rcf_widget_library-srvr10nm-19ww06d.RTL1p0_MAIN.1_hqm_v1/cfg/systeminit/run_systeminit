#!/usr/bin/env perl
##!/usr/bin/perl

use lib "$ENV{RTL_PROJ_BIN}/perllib";
use ToolConfig;

#------------------------------------------------------------------------
sub get_repo_root {
#------------------------------------------------------------------------
    # try bk
    my $root = "";
    $root = `bk root 2>&1`;
    if ($? != 0) {
        # try git
        my $is_git_repo = `/usr/intel/bin/git rev-parse  --is-inside-work-tree`;
        chomp $is_git_repo;
        if ($? == 0 && ($is_git_repo eq "true")) {
        my $cdup = `/usr/intel/bin/git rev-parse --show-cdup`;
                chomp $cdup;
                $cdup = `pwd` if ($cdup eq "");
                chomp $cdup;
                $root = `realpath $cdup`;
                chomp $root;
        }
    }
    else {
        chomp $root;
        if ($root eq "cannot find package root") {
            $root = "";
        }
    }
    return $root;
}

# for cdf, we need to run acesh to get the env set up
#$root = get_repo_root();
#$pwd = `pwd`;
#chomp($pwd);
#$command = "acesh -dut dnv \"cd $pwd; ";

$command .= 'rm -f systeminit.dut_cfg;';
$command .= &ToolConfig::get_tool_env_var("ipconfig/tfm_vi_tb","TFM_VI_REL_ROOT") . "/bin/systeminit.pl";
$command .= ' -project_constraints=proj_constraints';
$command .= ' -test_constraints=test_constraints';
$command .= ' -dut_cfg=rcfwl.topology.dut_cfg';
$command .= ' ' . join(" ", @ARGV) . ';';
#$command .= 'rm -rf *simv* systeminit.log';

# this is the end " for the acesh command.
#$command .= "\"";

system("$command");

if (system("diff -q systeminit.dut_cfg systeminit.dut_cfg.gold") == 0) {
  print "PASSED!\n";
  system("rm systeminit.dut_cfg");
} else {
  print "FAILED!\n"; # The diff command above will show what failed
}

