<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<ipxact:abstractionDefinition xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014" xmlns:snps="http://www.synopsys.com/SPIRIT-snps" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.accellera.org/XMLSchema/IPXACT/1685-2014 http://www.accellera.org/XMLSchema/IPXACT/1685-2014/index.xsd">

  <ipxact:vendor>Intel</ipxact:vendor>

  <ipxact:library>Intel</ipxact:library>

  <ipxact:name>DTF::Misc_rtl</ipxact:name>

  <ipxact:version>v1.4_r1.2</ipxact:version>

  <ipxact:busType library="Intel" name="DTF::Misc" vendor="Intel" version="v1.4_r1.2"/>

  <ipxact:ports>
    <ipxact:port>
      <ipxact:logicalName>fdtf_survive_mode</ipxact:logicalName>
      <ipxact:description>When '1, forces total number of credits to be 4, independent on what is advertised by the downstream arbiter.  Signals used to override the normal credit exchange mechanisms used for survivability.  At integration, this signal may be tied to 0, or may be tied to a green TAP configuration bit that is located inside the IP, or provided from an external source.  This signal must not change once the "DTF active" signal has gone from a 0 to a 1.</ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:logicalName>fdtf_fast_cnt_width</ipxact:logicalName>
      <ipxact:description>Specifies the width of the LTA counter to be used within the all DTF components within the IP for timestamp packets.  This is a continuously sampled input strap and required to be stable before fdtf_rst_b is deasserted and not changed.  This encoding is used:
00: 7-bit LTA
01: 8-bit LTA
10: 6 bit LTA
11: 7-bit LTA </ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>2</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>2</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:logicalName>fdtf_packetizer_mid_N</ipxact:logicalName>
      <ipxact:description>DTF Major ID. This is an input strap and expected to be stable before fdtf_rst_b is deasserted.</ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>8</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>8</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:logicalName>fdtf_packetizer_cid_N</ipxact:logicalName>
      <ipxact:description>DTF Channel ID.  This is an input strap and expected to be stable before fdtf_rst_b is deasserted.</ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>8</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>required</ipxact:presence>
          <ipxact:width>8</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:isPresent>DTF_ISO_INTERFACE</ipxact:isPresent>
      <ipxact:logicalName>fdtf_iso_b</ipxact:logicalName>
      <ipxact:description>DTF Isolation, used for isolation when there is a voltage domain crossing within a DTF arbiter inside of the IP. Signal assumed to deassert prior to the corresponding reset signal (fdtf_rst_b) deasserting. If no voltage domain crossing is used within this IP, this signal is to be tied to '1.</ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:isPresent>DTF_PG_INTERFACE</ipxact:isPresent>
      <ipxact:logicalName>adtf_rst_out_b</ipxact:logicalName>
      <ipxact:description>DTF Reset Out. This signal is present only when DTF_PG_INTERFACE is set to '1.  </ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
    <ipxact:port>
      <ipxact:isPresent>DTF_PG_INTERFACE</ipxact:isPresent>
      <ipxact:logicalName>fdtf_pg_empty_in</ipxact:logicalName>
      <ipxact:description>DTF Empty In. This signal is present only when DTF_PG_INTERFACE is set to '1. </ipxact:description>
      <ipxact:wire>
        <ipxact:onMaster>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:onMaster>
        <ipxact:onSlave>
          <ipxact:presence>optional</ipxact:presence>
          <ipxact:width>1</ipxact:width>
          <ipxact:direction>out</ipxact:direction>
        </ipxact:onSlave>
        <ipxact:requiresDriver driverType="any"/>
      </ipxact:wire>
    </ipxact:port>
  </ipxact:ports>

  <ipxact:description>Revision: r1.2. Misc signals for DTF</ipxact:description>

  <ipxact:parameters>
    <ipxact:parameter parameterId="DTF_PG_INTERFACE" resolve="user" type="bit">
      <ipxact:name>DTF_PG_INTERFACE</ipxact:name>
      <ipxact:description>When set, adds two ports to the DTF interface to control situations where there is a voltage domain crossing outside of the IP.</ipxact:description>
      <ipxact:value>0</ipxact:value>
    </ipxact:parameter>
    <ipxact:parameter parameterId="DTF_ISO_INTERFACE" resolve="user" type="bit">
      <ipxact:name>DTF_ISO_INTERFACE</ipxact:name>
      <ipxact:description>When set, implements port for driving Isolation signal for internal DTF arbiter that contains a voltage domain crossing.
This parameter is required to be SoC modifiable when these two conditions are both true -
1. The IP contains a DTF arbiter component, and
2. The IP contains a voltage domain crossing with that DTF arbiter.</ipxact:description>
      <ipxact:value>0</ipxact:value>
    </ipxact:parameter>
    <ipxact:parameter parameterId="DTF_HEADER_WIDTH" resolve="user" type="int">
      <ipxact:name>DTF_HEADER_WIDTH</ipxact:name>
      <ipxact:description>Specifies the width of the downstream DTF header output, derived from DTF_DATA_WIDTH. Header width of 4, 7, 13, or 25 wires based on DTF data width of 8, 16, 32, or 64, which refers to the number of wires for data.  [From a time multiplexed perspective, 64 = 1 cycle, 32 = 2 cycles, 16 = 4 cycles, 8 = 8 cycles]. </ipxact:description>
      <ipxact:value>25</ipxact:value>
    </ipxact:parameter>
    <ipxact:parameter parameterId="DTF_DATA_WIDTH" resolve="user" type="int">
      <ipxact:name>DTF_DATA_WIDTH</ipxact:name>
      <ipxact:description>Specifies the width of the downstream DTF output. Supported values are 8, 16, 32, or 64, which refers to the number of wires for data. Note that header also scales by the same amount, and corresponds to a header width (DTF_HEADER_WIDTH) of 4, 7, 13, or 25 wires respectively. [From a time multiplexed perspective, 64 = 1 cycle, 32 = 2 cycles, 16 = 4 cycles, 8 = 8 cycles]. </ipxact:description>
      <ipxact:value>64</ipxact:value>
    </ipxact:parameter>
  </ipxact:parameters>

</ipxact:abstractionDefinition>
