///
///  INTEL CONFIDENTIAL
///
///  Copyright 2022 Intel Corporation All Rights Reserved.
///
///  The source code contained or described herein and all documents related
///  to the source code ("Material") are owned by Intel Corporation or its
///  suppliers or licensors. Title to the Material remains with Intel
///  Corporation or its suppliers and licensors. The Material contains trade
///  secrets and proprietary and confidential information of Intel or its
///  suppliers and licensors. The Material is protected by worldwide copyright
///  and trade secret laws and treaty provisions. No part of the Material may
///  be used, copied, reproduced, modified, published, uploaded, posted,
///  transmitted, distributed, or disclosed in any way without Intel's prior
///  express written permission.
///
///  No license under any patent, copyright, trade secret or other intellectual
///  property right is granted to or conferred upon you by disclosure or
///  delivery of the Materials, either expressly, by implication, inducement,
///  estoppel or otherwise. Any license under such intellectual property rights
///  must be express and approved by Intel in writing.
///

//                                                                             
// File:            hqm_system_csr_pkg.vh                                      
// Nebulon version: d22ww21.1                                                  
// Description:                                                                
//                                                                             
// No Description Provided                                                     
//                                                                             
// Copyright (C) 2022 Intel Corp. All rights reserved                          
// THIS FILE IS AUTOMATICALLY GENERATED BY INTEL RDL GENERATOR, DO NOT EDIT    
//                                                                             


// The NEBULON_RTLGEN_TEMPLATE env was: /p/hdk/rtl/proj_tools/nebulon_data/shdk74/20.35.01_gen3/generators/rtltemplates:/p/hdk/rtl/cad/x86-64_linux26/dt/nebulon/d20ww52.1/generators/rtltemplates:/p/hdk/rtl/cad/x86-64_linux26/dt/nebulon/d20ww52.1/generators/overhead_templates::/nfs/site/disks/crt_tools_007/dt/nebulon/d22ww21.1/generators/rtlgen_include_template:/nfs/site/disks/crt_tools_007/dt/nebulon/d22ww21.1/generators/rtlgen_pkg_template

`ifndef HQM_SYSTEM_CSR_PKG_VH
`define HQM_SYSTEM_CSR_PKG_VH

`include "rtlgen_include_hqm_system_csr_map.vh"
`include "rtlgen_pkg_hqm_system_csr_map.vh"

package hqm_system_csr_pkg;

import rtlgen_pkg_hqm_system_csr_map::*;

typedef cfg_req_32bit_t hqm_system_csr_cr_req_t;
typedef cfg_ack_32bit_t hqm_system_csr_cr_ack_t;
typedef struct packed {
   logic treg_trdy; 
   logic treg_cerr;   
   logic [31:0] treg_rdata;
} hqm_system_csr_sb_ack_t;

// Comments were moved out of macro, due to collage failure
// treg_data 
//    Assumption1: (treg_trdy == 0 | treg_cerr == 0) => treg_rdata   
//    Assumption2: non relevant fields & reserved are also set to 0  
// treg_trdy
//    Regular case: All banks should return same treg_trdy value.    
//    Special case: Multi cycle read/write from handcoded memory.    
//               One bank hold ack until result is ready          
//    For this case all acks are AND                               
// treg_cerr
//    Assumption: treg_trdy=0 => treg_cerr=0                         
//    Regular case: return error when all banks return error         
//    Spacial case: when bank with multi cycle request, hold the     
//                request, its ack treg_trdy=0 && treg_cerr=0     
//               when bank with multi cycle ready, all banks      
//            return ack, since the request is hold for all banks 

`ifndef RTLGEN_MERGE_SB_ACK_LIST
`define RTLGEN_MERGE_SB_ACK_LIST(sb_ack_list,merged_sb_ack)         \
  always_comb begin                                                 \
     merged_sb_ack.treg_rdata = '0;                                 \
     for (int i=0; i<$size(sb_ack_list); i++) begin                 \
        merged_sb_ack.treg_rdata |= sb_ack_list[i].treg_rdata;      \
     end                                                            \
  end                                                               \
                                                                    \
  always_comb begin                                                 \
     merged_sb_ack.treg_trdy = '1;                                  \
     for (int i=0; i<$size(sb_ack_list); i = i + 1) begin           \
        merged_sb_ack.treg_trdy &= sb_ack_list[i].treg_trdy;        \
     end                                                            \
  end                                                               \
                                                                    \
  always_comb begin                                                 \
     merged_sb_ack.treg_cerr = '0;                                  \
     for (int i=0; i<$size(sb_ack_list); i = i + 1) begin           \
        merged_sb_ack.treg_cerr |= sb_ack_list[i].treg_cerr;        \
     end                                                            \
  end                                                               
`endif // RTLGEN_MERGE_SB_ACK_LIST                                  

// sai_successfull - acknowledge with zero value must have valid=1 and miss=0
// read/write valid - all acknowledges should have the same valid
// read/write miss - return miss when all banks return miss
`ifndef RTLGEN_MERGE_CR_ACK_LIST
`define RTLGEN_MERGE_CR_ACK_LIST(cr_ack_list,merged_cr_ack)       \
   always_comb begin                                              \
      merged_cr_ack.data = '0;                                    \
      for (int i=0; i<$size(cr_ack_list); i++) begin              \
         merged_cr_ack.data |= cr_ack_list[i].data;               \
      end                                                         \
   end                                                            \
   always_comb begin                                              \
      merged_cr_ack.read_valid = '1;                              \
      for (int i=0; i<$size(cr_ack_list); i = i + 1) begin        \
         merged_cr_ack.read_valid &= cr_ack_list[i].read_valid;   \
      end                                                         \
   end                                                            \
   always_comb begin                                              \
      merged_cr_ack.write_valid = '1;                             \
      for (int i=0; i<$size(cr_ack_list); i = i + 1) begin        \
         merged_cr_ack.write_valid &= cr_ack_list[i].write_valid; \
      end                                                         \
   end                                                            \
   always_comb begin                                                      \
      merged_cr_ack.sai_successfull = '1;                                 \
      for (int i=0; i<$size(cr_ack_list); i = i + 1) begin                \
         merged_cr_ack.sai_successfull &= cr_ack_list[i].sai_successfull; \
      end                                                                 \
   end                                                                    \
   always_comb begin                                            \
      merged_cr_ack.read_miss = '1;                             \
      for (int i=0; i<$size(cr_ack_list); i = i + 1) begin      \
         merged_cr_ack.read_miss &= cr_ack_list[i].read_miss;   \
      end                                                       \
   end                                                          \
   always_comb begin                                            \
      merged_cr_ack.write_miss = '1;                            \
      for (int i=0; i<$size(cr_ack_list); i = i + 1) begin      \
         merged_cr_ack.write_miss &= cr_ack_list[i].write_miss; \
      end                                                       \
   end                                                          
`endif // RTLGEN_MERGE_CR_ACK_LIST                         

// ===================================================
// register structs

typedef struct packed {
    logic [31:0] TOTAL_CREDITS;  // RO
} TOTAL_CREDITS_t;

localparam TOTAL_CREDITS_REG_STRIDE = 48'h4;
localparam TOTAL_CREDITS_REG_ENTRIES = 1;
localparam HQM_SYSTEM_ATTRIBUTES_REGFILE_STRIDE = 48'h20;
localparam HQM_SYSTEM_ATTRIBUTES_REGFILE_ENTRIES = 1;
localparam [47:0] TOTAL_CREDITS_CR_ADDR = 48'h100;
localparam TOTAL_CREDITS_SIZE = 32;
localparam TOTAL_CREDITS_TOTAL_CREDITS_LO = 0;
localparam TOTAL_CREDITS_TOTAL_CREDITS_HI = 31;
localparam TOTAL_CREDITS_TOTAL_CREDITS_RESET = 'h4000;
localparam TOTAL_CREDITS_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_CREDITS_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_CREDITS_WO_MASK = 32'h0;
localparam TOTAL_CREDITS_RESET = 32'h4000;

typedef struct packed {
    logic [31:0] TOTAL_LDB_QID;  // RO
} TOTAL_LDB_QID_t;

localparam TOTAL_LDB_QID_REG_STRIDE = 48'h4;
localparam TOTAL_LDB_QID_REG_ENTRIES = 1;
localparam [47:0] TOTAL_LDB_QID_CR_ADDR = 48'h104;
localparam TOTAL_LDB_QID_SIZE = 32;
localparam TOTAL_LDB_QID_TOTAL_LDB_QID_LO = 0;
localparam TOTAL_LDB_QID_TOTAL_LDB_QID_HI = 31;
localparam TOTAL_LDB_QID_TOTAL_LDB_QID_RESET = 'h20;
localparam TOTAL_LDB_QID_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_LDB_QID_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_LDB_QID_WO_MASK = 32'h0;
localparam TOTAL_LDB_QID_RESET = 32'h20;

typedef struct packed {
    logic [31:0] TOTAL_DIR_QID;  // RO
} TOTAL_DIR_QID_t;

localparam TOTAL_DIR_QID_REG_STRIDE = 48'h4;
localparam TOTAL_DIR_QID_REG_ENTRIES = 1;
localparam [47:0] TOTAL_DIR_QID_CR_ADDR = 48'h108;
localparam TOTAL_DIR_QID_SIZE = 32;
localparam TOTAL_DIR_QID_TOTAL_DIR_QID_LO = 0;
localparam TOTAL_DIR_QID_TOTAL_DIR_QID_HI = 31;
localparam TOTAL_DIR_QID_TOTAL_DIR_QID_RESET = 'h40;
localparam TOTAL_DIR_QID_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_DIR_QID_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_DIR_QID_WO_MASK = 32'h0;
localparam TOTAL_DIR_QID_RESET = 32'h40;

typedef struct packed {
    logic [31:0] TOTAL_LDB_PORTS;  // RO
} TOTAL_LDB_PORTS_t;

localparam TOTAL_LDB_PORTS_REG_STRIDE = 48'h4;
localparam TOTAL_LDB_PORTS_REG_ENTRIES = 1;
localparam [47:0] TOTAL_LDB_PORTS_CR_ADDR = 48'h10C;
localparam TOTAL_LDB_PORTS_SIZE = 32;
localparam TOTAL_LDB_PORTS_TOTAL_LDB_PORTS_LO = 0;
localparam TOTAL_LDB_PORTS_TOTAL_LDB_PORTS_HI = 31;
localparam TOTAL_LDB_PORTS_TOTAL_LDB_PORTS_RESET = 'h40;
localparam TOTAL_LDB_PORTS_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_LDB_PORTS_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_LDB_PORTS_WO_MASK = 32'h0;
localparam TOTAL_LDB_PORTS_RESET = 32'h40;

typedef struct packed {
    logic [31:0] TOTAL_DIR_PORTS;  // RO
} TOTAL_DIR_PORTS_t;

localparam TOTAL_DIR_PORTS_REG_STRIDE = 48'h4;
localparam TOTAL_DIR_PORTS_REG_ENTRIES = 1;
localparam [47:0] TOTAL_DIR_PORTS_CR_ADDR = 48'h110;
localparam TOTAL_DIR_PORTS_SIZE = 32;
localparam TOTAL_DIR_PORTS_TOTAL_DIR_PORTS_LO = 0;
localparam TOTAL_DIR_PORTS_TOTAL_DIR_PORTS_HI = 31;
localparam TOTAL_DIR_PORTS_TOTAL_DIR_PORTS_RESET = 'h40;
localparam TOTAL_DIR_PORTS_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_DIR_PORTS_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_DIR_PORTS_WO_MASK = 32'h0;
localparam TOTAL_DIR_PORTS_RESET = 32'h40;

typedef struct packed {
    logic [31:0] TOTAL_VAS;  // RO
} TOTAL_VAS_t;

localparam TOTAL_VAS_REG_STRIDE = 48'h4;
localparam TOTAL_VAS_REG_ENTRIES = 1;
localparam [47:0] TOTAL_VAS_CR_ADDR = 48'h114;
localparam TOTAL_VAS_SIZE = 32;
localparam TOTAL_VAS_TOTAL_VAS_LO = 0;
localparam TOTAL_VAS_TOTAL_VAS_HI = 31;
localparam TOTAL_VAS_TOTAL_VAS_RESET = 'h20;
localparam TOTAL_VAS_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_VAS_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_VAS_WO_MASK = 32'h0;
localparam TOTAL_VAS_RESET = 32'h20;

typedef struct packed {
    logic  [7:0] reserved0;  // RSVD
    logic  [7:0] GROUP;  // RO
    logic  [7:0] SLOT;  // RO
    logic  [7:0] MODE;  // RO
} TOTAL_SN_REGIONS_t;

localparam TOTAL_SN_REGIONS_REG_STRIDE = 48'h4;
localparam TOTAL_SN_REGIONS_REG_ENTRIES = 1;
localparam [47:0] TOTAL_SN_REGIONS_CR_ADDR = 48'h118;
localparam TOTAL_SN_REGIONS_SIZE = 32;
localparam TOTAL_SN_REGIONS_GROUP_LO = 16;
localparam TOTAL_SN_REGIONS_GROUP_HI = 23;
localparam TOTAL_SN_REGIONS_GROUP_RESET = 'h2;
localparam TOTAL_SN_REGIONS_SLOT_LO = 8;
localparam TOTAL_SN_REGIONS_SLOT_HI = 15;
localparam TOTAL_SN_REGIONS_SLOT_RESET = 'h10;
localparam TOTAL_SN_REGIONS_MODE_LO = 0;
localparam TOTAL_SN_REGIONS_MODE_HI = 7;
localparam TOTAL_SN_REGIONS_MODE_RESET = 'h5;
localparam TOTAL_SN_REGIONS_USEMASK = 32'hFFFFFF;
localparam TOTAL_SN_REGIONS_RO_MASK = 32'hFFFFFF;
localparam TOTAL_SN_REGIONS_WO_MASK = 32'h0;
localparam TOTAL_SN_REGIONS_RESET = 32'h21005;

typedef struct packed {
    logic [31:0] TOTAL_VF;  // RO
} TOTAL_VF_t;

localparam TOTAL_VF_REG_STRIDE = 48'h4;
localparam TOTAL_VF_REG_ENTRIES = 1;
localparam [47:0] TOTAL_VF_CR_ADDR = 48'h11C;
localparam TOTAL_VF_SIZE = 32;
localparam TOTAL_VF_TOTAL_VF_LO = 0;
localparam TOTAL_VF_TOTAL_VF_HI = 31;
localparam TOTAL_VF_TOTAL_VF_RESET = 'h10;
localparam TOTAL_VF_USEMASK = 32'hFFFFFFFF;
localparam TOTAL_VF_RO_MASK = 32'hFFFFFFFF;
localparam TOTAL_VF_WO_MASK = 32'h0;
localparam TOTAL_VF_RESET = 32'h10;

typedef struct packed {
    logic  [7:0] UNIT_VERSION;  // RO
    logic [23:0] reserved0;  // RSVD
} CFG_UNIT_VERSION_t;

localparam CFG_UNIT_VERSION_REG_STRIDE = 48'h4;
localparam CFG_UNIT_VERSION_REG_ENTRIES = 1;
localparam [47:0] CFG_UNIT_VERSION_CR_ADDR = 48'h200;
localparam CFG_UNIT_VERSION_SIZE = 32;
localparam CFG_UNIT_VERSION_UNIT_VERSION_LO = 24;
localparam CFG_UNIT_VERSION_UNIT_VERSION_HI = 31;
localparam CFG_UNIT_VERSION_UNIT_VERSION_RESET = 8'h4;
localparam CFG_UNIT_VERSION_USEMASK = 32'hFF000000;
localparam CFG_UNIT_VERSION_RO_MASK = 32'hFF000000;
localparam CFG_UNIT_VERSION_WO_MASK = 32'h0;
localparam CFG_UNIT_VERSION_RESET = 32'h4000000;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [0:0] ILLEGAL_LDB_QID_CFG;  // RW
    logic  [0:0] DISABLED_QID;  // RW
    logic  [0:0] ILLEGAL_QID;  // RW
    logic  [0:0] ILLEGAL_PASID;  // RW
    logic  [0:0] ILLEGAL_PP;  // RW
    logic  [0:0] ILLEGAL_HCW;  // RW
} INGRESS_ALARM_ENABLE_t;

localparam INGRESS_ALARM_ENABLE_REG_STRIDE = 48'h4;
localparam INGRESS_ALARM_ENABLE_REG_ENTRIES = 1;
localparam [47:0] INGRESS_ALARM_ENABLE_CR_ADDR = 48'h300;
localparam INGRESS_ALARM_ENABLE_SIZE = 32;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_LDB_QID_CFG_LO = 5;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_LDB_QID_CFG_HI = 5;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_LDB_QID_CFG_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_DISABLED_QID_LO = 4;
localparam INGRESS_ALARM_ENABLE_DISABLED_QID_HI = 4;
localparam INGRESS_ALARM_ENABLE_DISABLED_QID_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_QID_LO = 3;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_QID_HI = 3;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_QID_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PASID_LO = 2;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PASID_HI = 2;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PASID_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PP_LO = 1;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PP_HI = 1;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_PP_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_HCW_LO = 0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_HCW_HI = 0;
localparam INGRESS_ALARM_ENABLE_ILLEGAL_HCW_RESET = 1'h0;
localparam INGRESS_ALARM_ENABLE_USEMASK = 32'h3F;
localparam INGRESS_ALARM_ENABLE_RO_MASK = 32'h0;
localparam INGRESS_ALARM_ENABLE_WO_MASK = 32'h0;
localparam INGRESS_ALARM_ENABLE_RESET = 32'h0;

typedef struct packed {
    logic [18:0] reserved0;  // RSVD
    logic  [0:0] VF_SYND_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W3_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W2_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W1_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W0_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ISR_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ISR_PERR;  // RW/1C/V
} ALARM_LUT_PERR_t;

localparam ALARM_LUT_PERR_REG_STRIDE = 48'h4;
localparam ALARM_LUT_PERR_REG_ENTRIES = 1;
localparam [47:0] ALARM_LUT_PERR_CR_ADDR = 48'h304;
localparam ALARM_LUT_PERR_SIZE = 32;
localparam ALARM_LUT_PERR_VF_SYND_PERR_LO = 12;
localparam ALARM_LUT_PERR_VF_SYND_PERR_HI = 12;
localparam ALARM_LUT_PERR_VF_SYND_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_MSIX_TBL_W3_PERR_LO = 11;
localparam ALARM_LUT_PERR_MSIX_TBL_W3_PERR_HI = 11;
localparam ALARM_LUT_PERR_MSIX_TBL_W3_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_MSIX_TBL_W2_PERR_LO = 10;
localparam ALARM_LUT_PERR_MSIX_TBL_W2_PERR_HI = 10;
localparam ALARM_LUT_PERR_MSIX_TBL_W2_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_MSIX_TBL_W1_PERR_LO = 9;
localparam ALARM_LUT_PERR_MSIX_TBL_W1_PERR_HI = 9;
localparam ALARM_LUT_PERR_MSIX_TBL_W1_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_MSIX_TBL_W0_PERR_LO = 8;
localparam ALARM_LUT_PERR_MSIX_TBL_W0_PERR_HI = 8;
localparam ALARM_LUT_PERR_MSIX_TBL_W0_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_LDB_CQ_AI_DATA_PERR_LO = 7;
localparam ALARM_LUT_PERR_LDB_CQ_AI_DATA_PERR_HI = 7;
localparam ALARM_LUT_PERR_LDB_CQ_AI_DATA_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_DIR_CQ_AI_DATA_PERR_LO = 6;
localparam ALARM_LUT_PERR_DIR_CQ_AI_DATA_PERR_HI = 6;
localparam ALARM_LUT_PERR_DIR_CQ_AI_DATA_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_U_PERR_LO = 5;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_U_PERR_HI = 5;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_U_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_L_PERR_LO = 4;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_L_PERR_HI = 4;
localparam ALARM_LUT_PERR_LDB_CQ_AI_ADDR_L_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_U_PERR_LO = 3;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_U_PERR_HI = 3;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_U_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_L_PERR_LO = 2;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_L_PERR_HI = 2;
localparam ALARM_LUT_PERR_DIR_CQ_AI_ADDR_L_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_LDB_CQ_ISR_PERR_LO = 1;
localparam ALARM_LUT_PERR_LDB_CQ_ISR_PERR_HI = 1;
localparam ALARM_LUT_PERR_LDB_CQ_ISR_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_DIR_CQ_ISR_PERR_LO = 0;
localparam ALARM_LUT_PERR_DIR_CQ_ISR_PERR_HI = 0;
localparam ALARM_LUT_PERR_DIR_CQ_ISR_PERR_RESET = 1'h0;
localparam ALARM_LUT_PERR_USEMASK = 32'h1FFF;
localparam ALARM_LUT_PERR_RO_MASK = 32'h0;
localparam ALARM_LUT_PERR_WO_MASK = 32'h0;
localparam ALARM_LUT_PERR_RESET = 32'h0;

typedef struct packed {
    logic [16:0] reserved0;  // RSVD
    logic  [0:0] SCH_INT_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_RERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PERR;  // RW/1C/V
    logic  [0:0] SCH_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID2VQID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_FMT_PERR;  // RW/1C/V
} EGRESS_LUT_ERR_t;

localparam EGRESS_LUT_ERR_REG_STRIDE = 48'h4;
localparam EGRESS_LUT_ERR_REG_ENTRIES = 1;
localparam [47:0] EGRESS_LUT_ERR_CR_ADDR = 48'h308;
localparam EGRESS_LUT_ERR_SIZE = 32;
localparam EGRESS_LUT_ERR_SCH_INT_PL_PERR_LO = 14;
localparam EGRESS_LUT_ERR_SCH_INT_PL_PERR_HI = 14;
localparam EGRESS_LUT_ERR_SCH_INT_PL_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_SCH_REQ_PL_PERR_LO = 13;
localparam EGRESS_LUT_ERR_SCH_REQ_PL_PERR_HI = 13;
localparam EGRESS_LUT_ERR_SCH_REQ_PL_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_SCH_REQ_RERR_LO = 12;
localparam EGRESS_LUT_ERR_SCH_REQ_RERR_HI = 12;
localparam EGRESS_LUT_ERR_SCH_REQ_RERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_SCH_REQ_PERR_LO = 11;
localparam EGRESS_LUT_ERR_SCH_REQ_PERR_HI = 11;
localparam EGRESS_LUT_ERR_SCH_REQ_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_SCH_DATA_PERR_LO = 10;
localparam EGRESS_LUT_ERR_SCH_DATA_PERR_HI = 10;
localparam EGRESS_LUT_ERR_SCH_DATA_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_LDB_QID2VQID_PERR_LO = 9;
localparam EGRESS_LUT_ERR_LDB_QID2VQID_PERR_HI = 9;
localparam EGRESS_LUT_ERR_LDB_QID2VQID_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_LDB_CQ_PASID_PERR_LO = 8;
localparam EGRESS_LUT_ERR_LDB_CQ_PASID_PERR_HI = 8;
localparam EGRESS_LUT_ERR_LDB_CQ_PASID_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_L_PERR_LO = 7;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_L_PERR_HI = 7;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_L_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_U_PERR_LO = 6;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_U_PERR_HI = 6;
localparam EGRESS_LUT_ERR_LDB_CQ_ADDR_U_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_LDB_CQ2VF_PF_RO_PERR_LO = 5;
localparam EGRESS_LUT_ERR_LDB_CQ2VF_PF_RO_PERR_HI = 5;
localparam EGRESS_LUT_ERR_LDB_CQ2VF_PF_RO_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_DIR_CQ_PASID_PERR_LO = 4;
localparam EGRESS_LUT_ERR_DIR_CQ_PASID_PERR_HI = 4;
localparam EGRESS_LUT_ERR_DIR_CQ_PASID_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_L_PERR_LO = 3;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_L_PERR_HI = 3;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_L_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_U_PERR_LO = 2;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_U_PERR_HI = 2;
localparam EGRESS_LUT_ERR_DIR_CQ_ADDR_U_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_DIR_CQ2VF_PF_RO_PERR_LO = 1;
localparam EGRESS_LUT_ERR_DIR_CQ2VF_PF_RO_PERR_HI = 1;
localparam EGRESS_LUT_ERR_DIR_CQ2VF_PF_RO_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_DIR_CQ_FMT_PERR_LO = 0;
localparam EGRESS_LUT_ERR_DIR_CQ_FMT_PERR_HI = 0;
localparam EGRESS_LUT_ERR_DIR_CQ_FMT_PERR_RESET = 1'h0;
localparam EGRESS_LUT_ERR_USEMASK = 32'h7FFF;
localparam EGRESS_LUT_ERR_RO_MASK = 32'h0;
localparam EGRESS_LUT_ERR_WO_MASK = 32'h0;
localparam EGRESS_LUT_ERR_RESET = 32'h0;

typedef struct packed {
    logic [11:0] reserved0;  // RSVD
    logic  [0:0] PORT_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP2PP_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP2PP_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_CFG_V_PERR;  // RW/1C/V
} INGRESS_LUT_ERR_t;

localparam INGRESS_LUT_ERR_REG_STRIDE = 48'h4;
localparam INGRESS_LUT_ERR_REG_ENTRIES = 1;
localparam [47:0] INGRESS_LUT_ERR_CR_ADDR = 48'h30C;
localparam INGRESS_LUT_ERR_SIZE = 32;
localparam INGRESS_LUT_ERR_PORT_PERR_LO = 19;
localparam INGRESS_LUT_ERR_PORT_PERR_HI = 19;
localparam INGRESS_LUT_ERR_PORT_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_DIR_VPP2PP_MB_ECC_ERR_LO = 18;
localparam INGRESS_LUT_ERR_VF_DIR_VPP2PP_MB_ECC_ERR_HI = 18;
localparam INGRESS_LUT_ERR_VF_DIR_VPP2PP_MB_ECC_ERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_LDB_VPP2PP_PERR_LO = 17;
localparam INGRESS_LUT_ERR_VF_LDB_VPP2PP_PERR_HI = 17;
localparam INGRESS_LUT_ERR_VF_LDB_VPP2PP_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_DIR_VPP_V_PERR_LO = 16;
localparam INGRESS_LUT_ERR_VF_DIR_VPP_V_PERR_HI = 16;
localparam INGRESS_LUT_ERR_VF_DIR_VPP_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_LDB_VPP_V_PERR_LO = 15;
localparam INGRESS_LUT_ERR_VF_LDB_VPP_V_PERR_HI = 15;
localparam INGRESS_LUT_ERR_VF_LDB_VPP_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_DIR_PP_V_PERR_LO = 14;
localparam INGRESS_LUT_ERR_DIR_PP_V_PERR_HI = 14;
localparam INGRESS_LUT_ERR_DIR_PP_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_PP_V_PERR_LO = 13;
localparam INGRESS_LUT_ERR_LDB_PP_V_PERR_HI = 13;
localparam INGRESS_LUT_ERR_LDB_PP_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_DIR_VQID2QID_MB_ECC_ERR_LO = 12;
localparam INGRESS_LUT_ERR_VF_DIR_VQID2QID_MB_ECC_ERR_HI = 12;
localparam INGRESS_LUT_ERR_VF_DIR_VQID2QID_MB_ECC_ERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_LDB_VQID2QID_MB_ECC_ERR_LO = 11;
localparam INGRESS_LUT_ERR_VF_LDB_VQID2QID_MB_ECC_ERR_HI = 11;
localparam INGRESS_LUT_ERR_VF_LDB_VQID2QID_MB_ECC_ERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_DIR_VQID_V_PERR_LO = 10;
localparam INGRESS_LUT_ERR_VF_DIR_VQID_V_PERR_HI = 10;
localparam INGRESS_LUT_ERR_VF_DIR_VQID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_VF_LDB_VQID_V_PERR_LO = 9;
localparam INGRESS_LUT_ERR_VF_LDB_VQID_V_PERR_HI = 9;
localparam INGRESS_LUT_ERR_VF_LDB_VQID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_QID_ITS_PERR_LO = 8;
localparam INGRESS_LUT_ERR_LDB_QID_ITS_PERR_HI = 8;
localparam INGRESS_LUT_ERR_LDB_QID_ITS_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_DIR_QID_ITS_PERR_LO = 7;
localparam INGRESS_LUT_ERR_DIR_QID_ITS_PERR_HI = 7;
localparam INGRESS_LUT_ERR_DIR_QID_ITS_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_DIR_QID_V_PERR_LO = 6;
localparam INGRESS_LUT_ERR_DIR_QID_V_PERR_HI = 6;
localparam INGRESS_LUT_ERR_DIR_QID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_QID_V_PERR_LO = 5;
localparam INGRESS_LUT_ERR_LDB_QID_V_PERR_HI = 5;
localparam INGRESS_LUT_ERR_LDB_QID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_VASQID_V_PERR_LO = 4;
localparam INGRESS_LUT_ERR_LDB_VASQID_V_PERR_HI = 4;
localparam INGRESS_LUT_ERR_LDB_VASQID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_DIR_VASQID_V_PERR_LO = 3;
localparam INGRESS_LUT_ERR_DIR_VASQID_V_PERR_HI = 3;
localparam INGRESS_LUT_ERR_DIR_VASQID_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_PP2VAS_PERR_LO = 2;
localparam INGRESS_LUT_ERR_LDB_PP2VAS_PERR_HI = 2;
localparam INGRESS_LUT_ERR_LDB_PP2VAS_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_DIR_PP2VAS_PERR_LO = 1;
localparam INGRESS_LUT_ERR_DIR_PP2VAS_PERR_HI = 1;
localparam INGRESS_LUT_ERR_DIR_PP2VAS_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_LDB_QID_CFG_V_PERR_LO = 0;
localparam INGRESS_LUT_ERR_LDB_QID_CFG_V_PERR_HI = 0;
localparam INGRESS_LUT_ERR_LDB_QID_CFG_V_PERR_RESET = 1'h0;
localparam INGRESS_LUT_ERR_USEMASK = 32'hFFFFF;
localparam INGRESS_LUT_ERR_RO_MASK = 32'h0;
localparam INGRESS_LUT_ERR_WO_MASK = 32'h0;
localparam INGRESS_LUT_ERR_RESET = 32'h0;

typedef struct packed {
    logic [20:0] reserved0;  // RSVD
    logic  [0:0] ROB_ERROR;  // RW/1C/V
    logic  [0:0] RF_IPAR_ERROR;  // RW/1C/V
    logic  [0:0] ALARM_INT_ERR;  // RW/1C/V
    logic  [0:0] SCH_WB_PERR;  // RW/1C/V
    logic  [0:0] FIFO_OVERFLOW;  // RW/1C/V
    logic  [0:0] FIFO_UNDERFLOW;  // RW/1C/V
    logic  [0:0] SCH_SM_ERR;  // RW/1C/V
    logic  [0:0] ALARM_PERR;  // RW/1C/V
    logic  [0:0] EGRESS_PERR;  // RW/1C/V
    logic  [0:0] INGRESS_PERR;  // RW/1C/V
    logic  [0:0] CQ_ADDR_OVERFLOW;  // RW/1C/V
} ALARM_ERR_t;

localparam ALARM_ERR_REG_STRIDE = 48'h4;
localparam ALARM_ERR_REG_ENTRIES = 1;
localparam [47:0] ALARM_ERR_CR_ADDR = 48'h310;
localparam ALARM_ERR_SIZE = 32;
localparam ALARM_ERR_ROB_ERROR_LO = 10;
localparam ALARM_ERR_ROB_ERROR_HI = 10;
localparam ALARM_ERR_ROB_ERROR_RESET = 1'b0;
localparam ALARM_ERR_RF_IPAR_ERROR_LO = 9;
localparam ALARM_ERR_RF_IPAR_ERROR_HI = 9;
localparam ALARM_ERR_RF_IPAR_ERROR_RESET = 1'b0;
localparam ALARM_ERR_ALARM_INT_ERR_LO = 8;
localparam ALARM_ERR_ALARM_INT_ERR_HI = 8;
localparam ALARM_ERR_ALARM_INT_ERR_RESET = 1'b0;
localparam ALARM_ERR_SCH_WB_PERR_LO = 7;
localparam ALARM_ERR_SCH_WB_PERR_HI = 7;
localparam ALARM_ERR_SCH_WB_PERR_RESET = 1'b0;
localparam ALARM_ERR_FIFO_OVERFLOW_LO = 6;
localparam ALARM_ERR_FIFO_OVERFLOW_HI = 6;
localparam ALARM_ERR_FIFO_OVERFLOW_RESET = 1'b0;
localparam ALARM_ERR_FIFO_UNDERFLOW_LO = 5;
localparam ALARM_ERR_FIFO_UNDERFLOW_HI = 5;
localparam ALARM_ERR_FIFO_UNDERFLOW_RESET = 1'b0;
localparam ALARM_ERR_SCH_SM_ERR_LO = 4;
localparam ALARM_ERR_SCH_SM_ERR_HI = 4;
localparam ALARM_ERR_SCH_SM_ERR_RESET = 1'b0;
localparam ALARM_ERR_ALARM_PERR_LO = 3;
localparam ALARM_ERR_ALARM_PERR_HI = 3;
localparam ALARM_ERR_ALARM_PERR_RESET = 1'b0;
localparam ALARM_ERR_EGRESS_PERR_LO = 2;
localparam ALARM_ERR_EGRESS_PERR_HI = 2;
localparam ALARM_ERR_EGRESS_PERR_RESET = 1'b0;
localparam ALARM_ERR_INGRESS_PERR_LO = 1;
localparam ALARM_ERR_INGRESS_PERR_HI = 1;
localparam ALARM_ERR_INGRESS_PERR_RESET = 1'b0;
localparam ALARM_ERR_CQ_ADDR_OVERFLOW_LO = 0;
localparam ALARM_ERR_CQ_ADDR_OVERFLOW_HI = 0;
localparam ALARM_ERR_CQ_ADDR_OVERFLOW_RESET = 1'b0;
localparam ALARM_ERR_USEMASK = 32'h7FF;
localparam ALARM_ERR_RO_MASK = 32'h0;
localparam ALARM_ERR_WO_MASK = 32'h0;
localparam ALARM_ERR_RESET = 32'h0;

typedef struct packed {
    logic [24:0] reserved0;  // RSVD
    logic  [0:0] INGRESS_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR0;  // RW/1C/V
} ALARM_MB_ECC_ERR_t;

localparam ALARM_MB_ECC_ERR_REG_STRIDE = 48'h4;
localparam ALARM_MB_ECC_ERR_REG_ENTRIES = 1;
localparam [47:0] ALARM_MB_ECC_ERR_CR_ADDR = 48'h314;
localparam ALARM_MB_ECC_ERR_SIZE = 32;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR2_LO = 6;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR2_HI = 6;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR2_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR1_LO = 5;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR1_HI = 5;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR1_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR0_LO = 4;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR0_HI = 4;
localparam ALARM_MB_ECC_ERR_INGRESS_MB_ECC_ERR0_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR3_LO = 3;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR3_HI = 3;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR3_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR2_LO = 2;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR2_HI = 2;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR2_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR1_LO = 1;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR1_HI = 1;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR1_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR0_LO = 0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR0_HI = 0;
localparam ALARM_MB_ECC_ERR_WB_DIR_MB_ECC_ERR0_RESET = 1'b0;
localparam ALARM_MB_ECC_ERR_USEMASK = 32'h7F;
localparam ALARM_MB_ECC_ERR_RO_MASK = 32'h0;
localparam ALARM_MB_ECC_ERR_WO_MASK = 32'h0;
localparam ALARM_MB_ECC_ERR_RESET = 32'h0;

typedef struct packed {
    logic [22:0] reserved0;  // RSVD
    logic  [0:0] INGRESS_SB_ECC_ERR4;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR0;  // RW/1C/V
} ALARM_SB_ECC_ERR_t;

localparam ALARM_SB_ECC_ERR_REG_STRIDE = 48'h4;
localparam ALARM_SB_ECC_ERR_REG_ENTRIES = 1;
localparam [47:0] ALARM_SB_ECC_ERR_CR_ADDR = 48'h318;
localparam ALARM_SB_ECC_ERR_SIZE = 32;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR4_LO = 8;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR4_HI = 8;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR4_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR3_LO = 7;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR3_HI = 7;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR3_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR2_LO = 6;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR2_HI = 6;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR2_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR1_LO = 5;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR1_HI = 5;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR1_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR0_LO = 4;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR0_HI = 4;
localparam ALARM_SB_ECC_ERR_INGRESS_SB_ECC_ERR0_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR3_LO = 3;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR3_HI = 3;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR3_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR2_LO = 2;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR2_HI = 2;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR2_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR1_LO = 1;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR1_HI = 1;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR1_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR0_LO = 0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR0_HI = 0;
localparam ALARM_SB_ECC_ERR_WB_DIR_SB_ECC_ERR0_RESET = 1'b0;
localparam ALARM_SB_ECC_ERR_USEMASK = 32'h1FF;
localparam ALARM_SB_ECC_ERR_RO_MASK = 32'h0;
localparam ALARM_SB_ECC_ERR_WO_MASK = 32'h0;
localparam ALARM_SB_ECC_ERR_RESET = 32'h0;

typedef struct packed {
    logic [29:0] reserved0;  // RSVD
    logic  [0:0] CNT_CLRV;  // RW
    logic  [0:0] CNT_CLR;  // RW
} HQM_SYSTEM_CNT_CTL_t;

localparam HQM_SYSTEM_CNT_CTL_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_CTL_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_CTL_CR_ADDR = 48'h31C;
localparam HQM_SYSTEM_CNT_CTL_SIZE = 32;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLRV_LO = 1;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLRV_HI = 1;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLRV_RESET = 1'b0;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLR_LO = 0;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLR_HI = 0;
localparam HQM_SYSTEM_CNT_CTL_CNT_CLR_RESET = 1'b0;
localparam HQM_SYSTEM_CNT_CTL_USEMASK = 32'h3;
localparam HQM_SYSTEM_CNT_CTL_RO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_CTL_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_CTL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] reserved0;  // RSVD
    logic  [0:0] MSIX_1_ACK;  // RW/1C/V
    logic  [0:0] MSIX_0_ACK;  // RW/1C/V
} MSIX_ACK_t;

localparam MSIX_ACK_REG_STRIDE = 48'h4;
localparam MSIX_ACK_REG_ENTRIES = 1;
localparam [47:0] MSIX_ACK_CR_ADDR = 48'h400;
localparam MSIX_ACK_SIZE = 32;
localparam MSIX_ACK_MSIX_1_ACK_LO = 1;
localparam MSIX_ACK_MSIX_1_ACK_HI = 1;
localparam MSIX_ACK_MSIX_1_ACK_RESET = 1'b0;
localparam MSIX_ACK_MSIX_0_ACK_LO = 0;
localparam MSIX_ACK_MSIX_0_ACK_HI = 0;
localparam MSIX_ACK_MSIX_0_ACK_RESET = 1'b0;
localparam MSIX_ACK_USEMASK = 32'h3;
localparam MSIX_ACK_RO_MASK = 32'h0;
localparam MSIX_ACK_WO_MASK = 32'h0;
localparam MSIX_ACK_RESET = 32'h0;

typedef struct packed {
    logic [29:0] reserved0;  // RSVD
    logic  [0:0] MSIX_1_PASSTHRU;  // RW
    logic  [0:0] MSIX_0_PASSTHRU;  // RW
} MSIX_PASSTHROUGH_t;

localparam MSIX_PASSTHROUGH_REG_STRIDE = 48'h4;
localparam MSIX_PASSTHROUGH_REG_ENTRIES = 1;
localparam [47:0] MSIX_PASSTHROUGH_CR_ADDR = 48'h404;
localparam MSIX_PASSTHROUGH_SIZE = 32;
localparam MSIX_PASSTHROUGH_MSIX_1_PASSTHRU_LO = 1;
localparam MSIX_PASSTHROUGH_MSIX_1_PASSTHRU_HI = 1;
localparam MSIX_PASSTHROUGH_MSIX_1_PASSTHRU_RESET = 1'b0;
localparam MSIX_PASSTHROUGH_MSIX_0_PASSTHRU_LO = 0;
localparam MSIX_PASSTHROUGH_MSIX_0_PASSTHRU_HI = 0;
localparam MSIX_PASSTHROUGH_MSIX_0_PASSTHRU_RESET = 1'b0;
localparam MSIX_PASSTHROUGH_USEMASK = 32'h3;
localparam MSIX_PASSTHROUGH_RO_MASK = 32'h0;
localparam MSIX_PASSTHROUGH_WO_MASK = 32'h0;
localparam MSIX_PASSTHROUGH_RESET = 32'h0;

typedef struct packed {
    logic [29:0] reserved0;  // RSVD
    logic  [0:0] IMS_POLLING;  // RW
    logic  [0:0] MODE;  // RW
} MSIX_MODE_t;

localparam MSIX_MODE_REG_STRIDE = 48'h4;
localparam MSIX_MODE_REG_ENTRIES = 1;
localparam [47:0] MSIX_MODE_CR_ADDR = 48'h408;
localparam MSIX_MODE_SIZE = 32;
localparam MSIX_MODE_IMS_POLLING_LO = 1;
localparam MSIX_MODE_IMS_POLLING_HI = 1;
localparam MSIX_MODE_IMS_POLLING_RESET = 1'h0;
localparam MSIX_MODE_MODE_LO = 0;
localparam MSIX_MODE_MODE_HI = 0;
localparam MSIX_MODE_MODE_RESET = 1'h0;
localparam MSIX_MODE_USEMASK = 32'h3;
localparam MSIX_MODE_RO_MASK = 32'h0;
localparam MSIX_MODE_WO_MASK = 32'h0;
localparam MSIX_MODE_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] MSIX_31_SENT;  // RW/1C/V
    logic  [0:0] MSIX_30_SENT;  // RW/1C/V
    logic  [0:0] MSIX_29_SENT;  // RW/1C/V
    logic  [0:0] MSIX_28_SENT;  // RW/1C/V
    logic  [0:0] MSIX_27_SENT;  // RW/1C/V
    logic  [0:0] MSIX_26_SENT;  // RW/1C/V
    logic  [0:0] MSIX_25_SENT;  // RW/1C/V
    logic  [0:0] MSIX_24_SENT;  // RW/1C/V
    logic  [0:0] MSIX_23_SENT;  // RW/1C/V
    logic  [0:0] MSIX_22_SENT;  // RW/1C/V
    logic  [0:0] MSIX_21_SENT;  // RW/1C/V
    logic  [0:0] MSIX_20_SENT;  // RW/1C/V
    logic  [0:0] MSIX_19_SENT;  // RW/1C/V
    logic  [0:0] MSIX_18_SENT;  // RW/1C/V
    logic  [0:0] MSIX_17_SENT;  // RW/1C/V
    logic  [0:0] MSIX_16_SENT;  // RW/1C/V
    logic  [0:0] MSIX_15_SENT;  // RW/1C/V
    logic  [0:0] MSIX_14_SENT;  // RW/1C/V
    logic  [0:0] MSIX_13_SENT;  // RW/1C/V
    logic  [0:0] MSIX_12_SENT;  // RW/1C/V
    logic  [0:0] MSIX_11_SENT;  // RW/1C/V
    logic  [0:0] MSIX_10_SENT;  // RW/1C/V
    logic  [0:0] MSIX_9_SENT;  // RW/1C/V
    logic  [0:0] MSIX_8_SENT;  // RW/1C/V
    logic  [0:0] MSIX_7_SENT;  // RW/1C/V
    logic  [0:0] MSIX_6_SENT;  // RW/1C/V
    logic  [0:0] MSIX_5_SENT;  // RW/1C/V
    logic  [0:0] MSIX_4_SENT;  // RW/1C/V
    logic  [0:0] MSIX_3_SENT;  // RW/1C/V
    logic  [0:0] MSIX_2_SENT;  // RW/1C/V
    logic  [0:0] MSIX_1_SENT;  // RW/1C/V
    logic  [0:0] MSIX_0_SENT;  // RW/1C/V
} MSIX_31_0_SYND_t;

localparam MSIX_31_0_SYND_REG_STRIDE = 48'h4;
localparam MSIX_31_0_SYND_REG_ENTRIES = 1;
localparam [47:0] MSIX_31_0_SYND_CR_ADDR = 48'h410;
localparam MSIX_31_0_SYND_SIZE = 32;
localparam MSIX_31_0_SYND_MSIX_31_SENT_LO = 31;
localparam MSIX_31_0_SYND_MSIX_31_SENT_HI = 31;
localparam MSIX_31_0_SYND_MSIX_31_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_30_SENT_LO = 30;
localparam MSIX_31_0_SYND_MSIX_30_SENT_HI = 30;
localparam MSIX_31_0_SYND_MSIX_30_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_29_SENT_LO = 29;
localparam MSIX_31_0_SYND_MSIX_29_SENT_HI = 29;
localparam MSIX_31_0_SYND_MSIX_29_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_28_SENT_LO = 28;
localparam MSIX_31_0_SYND_MSIX_28_SENT_HI = 28;
localparam MSIX_31_0_SYND_MSIX_28_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_27_SENT_LO = 27;
localparam MSIX_31_0_SYND_MSIX_27_SENT_HI = 27;
localparam MSIX_31_0_SYND_MSIX_27_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_26_SENT_LO = 26;
localparam MSIX_31_0_SYND_MSIX_26_SENT_HI = 26;
localparam MSIX_31_0_SYND_MSIX_26_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_25_SENT_LO = 25;
localparam MSIX_31_0_SYND_MSIX_25_SENT_HI = 25;
localparam MSIX_31_0_SYND_MSIX_25_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_24_SENT_LO = 24;
localparam MSIX_31_0_SYND_MSIX_24_SENT_HI = 24;
localparam MSIX_31_0_SYND_MSIX_24_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_23_SENT_LO = 23;
localparam MSIX_31_0_SYND_MSIX_23_SENT_HI = 23;
localparam MSIX_31_0_SYND_MSIX_23_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_22_SENT_LO = 22;
localparam MSIX_31_0_SYND_MSIX_22_SENT_HI = 22;
localparam MSIX_31_0_SYND_MSIX_22_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_21_SENT_LO = 21;
localparam MSIX_31_0_SYND_MSIX_21_SENT_HI = 21;
localparam MSIX_31_0_SYND_MSIX_21_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_20_SENT_LO = 20;
localparam MSIX_31_0_SYND_MSIX_20_SENT_HI = 20;
localparam MSIX_31_0_SYND_MSIX_20_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_19_SENT_LO = 19;
localparam MSIX_31_0_SYND_MSIX_19_SENT_HI = 19;
localparam MSIX_31_0_SYND_MSIX_19_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_18_SENT_LO = 18;
localparam MSIX_31_0_SYND_MSIX_18_SENT_HI = 18;
localparam MSIX_31_0_SYND_MSIX_18_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_17_SENT_LO = 17;
localparam MSIX_31_0_SYND_MSIX_17_SENT_HI = 17;
localparam MSIX_31_0_SYND_MSIX_17_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_16_SENT_LO = 16;
localparam MSIX_31_0_SYND_MSIX_16_SENT_HI = 16;
localparam MSIX_31_0_SYND_MSIX_16_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_15_SENT_LO = 15;
localparam MSIX_31_0_SYND_MSIX_15_SENT_HI = 15;
localparam MSIX_31_0_SYND_MSIX_15_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_14_SENT_LO = 14;
localparam MSIX_31_0_SYND_MSIX_14_SENT_HI = 14;
localparam MSIX_31_0_SYND_MSIX_14_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_13_SENT_LO = 13;
localparam MSIX_31_0_SYND_MSIX_13_SENT_HI = 13;
localparam MSIX_31_0_SYND_MSIX_13_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_12_SENT_LO = 12;
localparam MSIX_31_0_SYND_MSIX_12_SENT_HI = 12;
localparam MSIX_31_0_SYND_MSIX_12_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_11_SENT_LO = 11;
localparam MSIX_31_0_SYND_MSIX_11_SENT_HI = 11;
localparam MSIX_31_0_SYND_MSIX_11_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_10_SENT_LO = 10;
localparam MSIX_31_0_SYND_MSIX_10_SENT_HI = 10;
localparam MSIX_31_0_SYND_MSIX_10_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_9_SENT_LO = 9;
localparam MSIX_31_0_SYND_MSIX_9_SENT_HI = 9;
localparam MSIX_31_0_SYND_MSIX_9_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_8_SENT_LO = 8;
localparam MSIX_31_0_SYND_MSIX_8_SENT_HI = 8;
localparam MSIX_31_0_SYND_MSIX_8_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_7_SENT_LO = 7;
localparam MSIX_31_0_SYND_MSIX_7_SENT_HI = 7;
localparam MSIX_31_0_SYND_MSIX_7_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_6_SENT_LO = 6;
localparam MSIX_31_0_SYND_MSIX_6_SENT_HI = 6;
localparam MSIX_31_0_SYND_MSIX_6_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_5_SENT_LO = 5;
localparam MSIX_31_0_SYND_MSIX_5_SENT_HI = 5;
localparam MSIX_31_0_SYND_MSIX_5_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_4_SENT_LO = 4;
localparam MSIX_31_0_SYND_MSIX_4_SENT_HI = 4;
localparam MSIX_31_0_SYND_MSIX_4_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_3_SENT_LO = 3;
localparam MSIX_31_0_SYND_MSIX_3_SENT_HI = 3;
localparam MSIX_31_0_SYND_MSIX_3_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_2_SENT_LO = 2;
localparam MSIX_31_0_SYND_MSIX_2_SENT_HI = 2;
localparam MSIX_31_0_SYND_MSIX_2_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_1_SENT_LO = 1;
localparam MSIX_31_0_SYND_MSIX_1_SENT_HI = 1;
localparam MSIX_31_0_SYND_MSIX_1_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_MSIX_0_SENT_LO = 0;
localparam MSIX_31_0_SYND_MSIX_0_SENT_HI = 0;
localparam MSIX_31_0_SYND_MSIX_0_SENT_RESET = 1'b0;
localparam MSIX_31_0_SYND_USEMASK = 32'hFFFFFFFF;
localparam MSIX_31_0_SYND_RO_MASK = 32'h0;
localparam MSIX_31_0_SYND_WO_MASK = 32'h0;
localparam MSIX_31_0_SYND_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] MSIX_63_SENT;  // RW/1C/V
    logic  [0:0] MSIX_62_SENT;  // RW/1C/V
    logic  [0:0] MSIX_61_SENT;  // RW/1C/V
    logic  [0:0] MSIX_60_SENT;  // RW/1C/V
    logic  [0:0] MSIX_59_SENT;  // RW/1C/V
    logic  [0:0] MSIX_58_SENT;  // RW/1C/V
    logic  [0:0] MSIX_57_SENT;  // RW/1C/V
    logic  [0:0] MSIX_56_SENT;  // RW/1C/V
    logic  [0:0] MSIX_55_SENT;  // RW/1C/V
    logic  [0:0] MSIX_54_SENT;  // RW/1C/V
    logic  [0:0] MSIX_53_SENT;  // RW/1C/V
    logic  [0:0] MSIX_52_SENT;  // RW/1C/V
    logic  [0:0] MSIX_51_SENT;  // RW/1C/V
    logic  [0:0] MSIX_50_SENT;  // RW/1C/V
    logic  [0:0] MSIX_49_SENT;  // RW/1C/V
    logic  [0:0] MSIX_48_SENT;  // RW/1C/V
    logic  [0:0] MSIX_47_SENT;  // RW/1C/V
    logic  [0:0] MSIX_46_SENT;  // RW/1C/V
    logic  [0:0] MSIX_45_SENT;  // RW/1C/V
    logic  [0:0] MSIX_44_SENT;  // RW/1C/V
    logic  [0:0] MSIX_43_SENT;  // RW/1C/V
    logic  [0:0] MSIX_42_SENT;  // RW/1C/V
    logic  [0:0] MSIX_41_SENT;  // RW/1C/V
    logic  [0:0] MSIX_40_SENT;  // RW/1C/V
    logic  [0:0] MSIX_39_SENT;  // RW/1C/V
    logic  [0:0] MSIX_38_SENT;  // RW/1C/V
    logic  [0:0] MSIX_37_SENT;  // RW/1C/V
    logic  [0:0] MSIX_36_SENT;  // RW/1C/V
    logic  [0:0] MSIX_35_SENT;  // RW/1C/V
    logic  [0:0] MSIX_34_SENT;  // RW/1C/V
    logic  [0:0] MSIX_33_SENT;  // RW/1C/V
    logic  [0:0] MSIX_32_SENT;  // RW/1C/V
} MSIX_63_32_SYND_t;

localparam MSIX_63_32_SYND_REG_STRIDE = 48'h4;
localparam MSIX_63_32_SYND_REG_ENTRIES = 1;
localparam [47:0] MSIX_63_32_SYND_CR_ADDR = 48'h414;
localparam MSIX_63_32_SYND_SIZE = 32;
localparam MSIX_63_32_SYND_MSIX_63_SENT_LO = 31;
localparam MSIX_63_32_SYND_MSIX_63_SENT_HI = 31;
localparam MSIX_63_32_SYND_MSIX_63_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_62_SENT_LO = 30;
localparam MSIX_63_32_SYND_MSIX_62_SENT_HI = 30;
localparam MSIX_63_32_SYND_MSIX_62_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_61_SENT_LO = 29;
localparam MSIX_63_32_SYND_MSIX_61_SENT_HI = 29;
localparam MSIX_63_32_SYND_MSIX_61_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_60_SENT_LO = 28;
localparam MSIX_63_32_SYND_MSIX_60_SENT_HI = 28;
localparam MSIX_63_32_SYND_MSIX_60_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_59_SENT_LO = 27;
localparam MSIX_63_32_SYND_MSIX_59_SENT_HI = 27;
localparam MSIX_63_32_SYND_MSIX_59_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_58_SENT_LO = 26;
localparam MSIX_63_32_SYND_MSIX_58_SENT_HI = 26;
localparam MSIX_63_32_SYND_MSIX_58_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_57_SENT_LO = 25;
localparam MSIX_63_32_SYND_MSIX_57_SENT_HI = 25;
localparam MSIX_63_32_SYND_MSIX_57_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_56_SENT_LO = 24;
localparam MSIX_63_32_SYND_MSIX_56_SENT_HI = 24;
localparam MSIX_63_32_SYND_MSIX_56_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_55_SENT_LO = 23;
localparam MSIX_63_32_SYND_MSIX_55_SENT_HI = 23;
localparam MSIX_63_32_SYND_MSIX_55_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_54_SENT_LO = 22;
localparam MSIX_63_32_SYND_MSIX_54_SENT_HI = 22;
localparam MSIX_63_32_SYND_MSIX_54_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_53_SENT_LO = 21;
localparam MSIX_63_32_SYND_MSIX_53_SENT_HI = 21;
localparam MSIX_63_32_SYND_MSIX_53_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_52_SENT_LO = 20;
localparam MSIX_63_32_SYND_MSIX_52_SENT_HI = 20;
localparam MSIX_63_32_SYND_MSIX_52_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_51_SENT_LO = 19;
localparam MSIX_63_32_SYND_MSIX_51_SENT_HI = 19;
localparam MSIX_63_32_SYND_MSIX_51_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_50_SENT_LO = 18;
localparam MSIX_63_32_SYND_MSIX_50_SENT_HI = 18;
localparam MSIX_63_32_SYND_MSIX_50_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_49_SENT_LO = 17;
localparam MSIX_63_32_SYND_MSIX_49_SENT_HI = 17;
localparam MSIX_63_32_SYND_MSIX_49_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_48_SENT_LO = 16;
localparam MSIX_63_32_SYND_MSIX_48_SENT_HI = 16;
localparam MSIX_63_32_SYND_MSIX_48_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_47_SENT_LO = 15;
localparam MSIX_63_32_SYND_MSIX_47_SENT_HI = 15;
localparam MSIX_63_32_SYND_MSIX_47_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_46_SENT_LO = 14;
localparam MSIX_63_32_SYND_MSIX_46_SENT_HI = 14;
localparam MSIX_63_32_SYND_MSIX_46_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_45_SENT_LO = 13;
localparam MSIX_63_32_SYND_MSIX_45_SENT_HI = 13;
localparam MSIX_63_32_SYND_MSIX_45_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_44_SENT_LO = 12;
localparam MSIX_63_32_SYND_MSIX_44_SENT_HI = 12;
localparam MSIX_63_32_SYND_MSIX_44_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_43_SENT_LO = 11;
localparam MSIX_63_32_SYND_MSIX_43_SENT_HI = 11;
localparam MSIX_63_32_SYND_MSIX_43_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_42_SENT_LO = 10;
localparam MSIX_63_32_SYND_MSIX_42_SENT_HI = 10;
localparam MSIX_63_32_SYND_MSIX_42_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_41_SENT_LO = 9;
localparam MSIX_63_32_SYND_MSIX_41_SENT_HI = 9;
localparam MSIX_63_32_SYND_MSIX_41_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_40_SENT_LO = 8;
localparam MSIX_63_32_SYND_MSIX_40_SENT_HI = 8;
localparam MSIX_63_32_SYND_MSIX_40_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_39_SENT_LO = 7;
localparam MSIX_63_32_SYND_MSIX_39_SENT_HI = 7;
localparam MSIX_63_32_SYND_MSIX_39_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_38_SENT_LO = 6;
localparam MSIX_63_32_SYND_MSIX_38_SENT_HI = 6;
localparam MSIX_63_32_SYND_MSIX_38_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_37_SENT_LO = 5;
localparam MSIX_63_32_SYND_MSIX_37_SENT_HI = 5;
localparam MSIX_63_32_SYND_MSIX_37_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_36_SENT_LO = 4;
localparam MSIX_63_32_SYND_MSIX_36_SENT_HI = 4;
localparam MSIX_63_32_SYND_MSIX_36_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_35_SENT_LO = 3;
localparam MSIX_63_32_SYND_MSIX_35_SENT_HI = 3;
localparam MSIX_63_32_SYND_MSIX_35_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_34_SENT_LO = 2;
localparam MSIX_63_32_SYND_MSIX_34_SENT_HI = 2;
localparam MSIX_63_32_SYND_MSIX_34_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_33_SENT_LO = 1;
localparam MSIX_63_32_SYND_MSIX_33_SENT_HI = 1;
localparam MSIX_63_32_SYND_MSIX_33_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_MSIX_32_SENT_LO = 0;
localparam MSIX_63_32_SYND_MSIX_32_SENT_HI = 0;
localparam MSIX_63_32_SYND_MSIX_32_SENT_RESET = 1'b0;
localparam MSIX_63_32_SYND_USEMASK = 32'hFFFFFFFF;
localparam MSIX_63_32_SYND_RO_MASK = 32'h0;
localparam MSIX_63_32_SYND_WO_MASK = 32'h0;
localparam MSIX_63_32_SYND_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] MSIX_64_SENT;  // RW/1C/V
} MSIX_64_SYND_t;

localparam MSIX_64_SYND_REG_STRIDE = 48'h4;
localparam MSIX_64_SYND_REG_ENTRIES = 1;
localparam [47:0] MSIX_64_SYND_CR_ADDR = 48'h418;
localparam MSIX_64_SYND_SIZE = 32;
localparam MSIX_64_SYND_MSIX_64_SENT_LO = 0;
localparam MSIX_64_SYND_MSIX_64_SENT_HI = 0;
localparam MSIX_64_SYND_MSIX_64_SENT_RESET = 1'b0;
localparam MSIX_64_SYND_USEMASK = 32'h1;
localparam MSIX_64_SYND_RO_MASK = 32'h0;
localparam MSIX_64_SYND_WO_MASK = 32'h0;
localparam MSIX_64_SYND_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] MSIX_PBA_31_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_30_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_29_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_28_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_27_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_26_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_25_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_24_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_23_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_22_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_21_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_20_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_19_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_18_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_17_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_16_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_15_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_14_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_13_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_12_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_11_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_10_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_9_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_8_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_7_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_6_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_5_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_4_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_3_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_2_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_1_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_0_CLEAR;  // RW
} MSIX_PBA_31_0_CLEAR_t;

localparam MSIX_PBA_31_0_CLEAR_REG_STRIDE = 48'h4;
localparam MSIX_PBA_31_0_CLEAR_REG_ENTRIES = 1;
localparam [47:0] MSIX_PBA_31_0_CLEAR_CR_ADDR = 48'h420;
localparam MSIX_PBA_31_0_CLEAR_SIZE = 32;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_31_CLEAR_LO = 31;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_31_CLEAR_HI = 31;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_31_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_30_CLEAR_LO = 30;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_30_CLEAR_HI = 30;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_30_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_29_CLEAR_LO = 29;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_29_CLEAR_HI = 29;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_29_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_28_CLEAR_LO = 28;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_28_CLEAR_HI = 28;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_28_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_27_CLEAR_LO = 27;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_27_CLEAR_HI = 27;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_27_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_26_CLEAR_LO = 26;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_26_CLEAR_HI = 26;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_26_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_25_CLEAR_LO = 25;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_25_CLEAR_HI = 25;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_25_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_24_CLEAR_LO = 24;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_24_CLEAR_HI = 24;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_24_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_23_CLEAR_LO = 23;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_23_CLEAR_HI = 23;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_23_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_22_CLEAR_LO = 22;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_22_CLEAR_HI = 22;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_22_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_21_CLEAR_LO = 21;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_21_CLEAR_HI = 21;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_21_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_20_CLEAR_LO = 20;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_20_CLEAR_HI = 20;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_20_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_19_CLEAR_LO = 19;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_19_CLEAR_HI = 19;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_19_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_18_CLEAR_LO = 18;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_18_CLEAR_HI = 18;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_18_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_17_CLEAR_LO = 17;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_17_CLEAR_HI = 17;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_17_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_16_CLEAR_LO = 16;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_16_CLEAR_HI = 16;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_16_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_15_CLEAR_LO = 15;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_15_CLEAR_HI = 15;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_15_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_14_CLEAR_LO = 14;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_14_CLEAR_HI = 14;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_14_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_13_CLEAR_LO = 13;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_13_CLEAR_HI = 13;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_13_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_12_CLEAR_LO = 12;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_12_CLEAR_HI = 12;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_12_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_11_CLEAR_LO = 11;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_11_CLEAR_HI = 11;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_11_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_10_CLEAR_LO = 10;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_10_CLEAR_HI = 10;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_10_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_9_CLEAR_LO = 9;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_9_CLEAR_HI = 9;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_9_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_8_CLEAR_LO = 8;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_8_CLEAR_HI = 8;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_8_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_7_CLEAR_LO = 7;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_7_CLEAR_HI = 7;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_7_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_6_CLEAR_LO = 6;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_6_CLEAR_HI = 6;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_6_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_5_CLEAR_LO = 5;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_5_CLEAR_HI = 5;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_5_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_4_CLEAR_LO = 4;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_4_CLEAR_HI = 4;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_4_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_3_CLEAR_LO = 3;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_3_CLEAR_HI = 3;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_3_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_2_CLEAR_LO = 2;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_2_CLEAR_HI = 2;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_2_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_1_CLEAR_LO = 1;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_1_CLEAR_HI = 1;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_1_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_0_CLEAR_LO = 0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_0_CLEAR_HI = 0;
localparam MSIX_PBA_31_0_CLEAR_MSIX_PBA_0_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_31_0_CLEAR_USEMASK = 32'hFFFFFFFF;
localparam MSIX_PBA_31_0_CLEAR_RO_MASK = 32'h0;
localparam MSIX_PBA_31_0_CLEAR_WO_MASK = 32'h0;
localparam MSIX_PBA_31_0_CLEAR_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] MSIX_PBA_63_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_62_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_61_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_60_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_59_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_58_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_57_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_56_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_55_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_54_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_53_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_52_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_51_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_50_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_49_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_48_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_47_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_46_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_45_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_44_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_43_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_42_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_41_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_40_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_39_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_38_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_37_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_36_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_35_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_34_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_33_CLEAR;  // RW
    logic  [0:0] MSIX_PBA_32_CLEAR;  // RW
} MSIX_PBA_63_32_CLEAR_t;

localparam MSIX_PBA_63_32_CLEAR_REG_STRIDE = 48'h4;
localparam MSIX_PBA_63_32_CLEAR_REG_ENTRIES = 1;
localparam [47:0] MSIX_PBA_63_32_CLEAR_CR_ADDR = 48'h424;
localparam MSIX_PBA_63_32_CLEAR_SIZE = 32;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_63_CLEAR_LO = 31;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_63_CLEAR_HI = 31;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_63_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_62_CLEAR_LO = 30;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_62_CLEAR_HI = 30;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_62_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_61_CLEAR_LO = 29;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_61_CLEAR_HI = 29;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_61_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_60_CLEAR_LO = 28;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_60_CLEAR_HI = 28;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_60_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_59_CLEAR_LO = 27;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_59_CLEAR_HI = 27;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_59_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_58_CLEAR_LO = 26;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_58_CLEAR_HI = 26;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_58_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_57_CLEAR_LO = 25;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_57_CLEAR_HI = 25;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_57_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_56_CLEAR_LO = 24;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_56_CLEAR_HI = 24;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_56_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_55_CLEAR_LO = 23;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_55_CLEAR_HI = 23;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_55_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_54_CLEAR_LO = 22;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_54_CLEAR_HI = 22;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_54_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_53_CLEAR_LO = 21;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_53_CLEAR_HI = 21;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_53_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_52_CLEAR_LO = 20;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_52_CLEAR_HI = 20;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_52_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_51_CLEAR_LO = 19;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_51_CLEAR_HI = 19;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_51_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_50_CLEAR_LO = 18;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_50_CLEAR_HI = 18;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_50_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_49_CLEAR_LO = 17;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_49_CLEAR_HI = 17;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_49_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_48_CLEAR_LO = 16;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_48_CLEAR_HI = 16;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_48_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_47_CLEAR_LO = 15;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_47_CLEAR_HI = 15;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_47_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_46_CLEAR_LO = 14;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_46_CLEAR_HI = 14;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_46_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_45_CLEAR_LO = 13;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_45_CLEAR_HI = 13;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_45_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_44_CLEAR_LO = 12;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_44_CLEAR_HI = 12;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_44_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_43_CLEAR_LO = 11;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_43_CLEAR_HI = 11;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_43_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_42_CLEAR_LO = 10;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_42_CLEAR_HI = 10;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_42_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_41_CLEAR_LO = 9;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_41_CLEAR_HI = 9;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_41_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_40_CLEAR_LO = 8;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_40_CLEAR_HI = 8;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_40_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_39_CLEAR_LO = 7;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_39_CLEAR_HI = 7;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_39_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_38_CLEAR_LO = 6;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_38_CLEAR_HI = 6;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_38_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_37_CLEAR_LO = 5;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_37_CLEAR_HI = 5;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_37_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_36_CLEAR_LO = 4;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_36_CLEAR_HI = 4;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_36_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_35_CLEAR_LO = 3;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_35_CLEAR_HI = 3;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_35_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_34_CLEAR_LO = 2;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_34_CLEAR_HI = 2;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_34_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_33_CLEAR_LO = 1;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_33_CLEAR_HI = 1;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_33_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_32_CLEAR_LO = 0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_32_CLEAR_HI = 0;
localparam MSIX_PBA_63_32_CLEAR_MSIX_PBA_32_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_63_32_CLEAR_USEMASK = 32'hFFFFFFFF;
localparam MSIX_PBA_63_32_CLEAR_RO_MASK = 32'h0;
localparam MSIX_PBA_63_32_CLEAR_WO_MASK = 32'h0;
localparam MSIX_PBA_63_32_CLEAR_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] MSIX_PBA_64_CLEAR;  // RW
} MSIX_PBA_64_CLEAR_t;

localparam MSIX_PBA_64_CLEAR_REG_STRIDE = 48'h4;
localparam MSIX_PBA_64_CLEAR_REG_ENTRIES = 1;
localparam [47:0] MSIX_PBA_64_CLEAR_CR_ADDR = 48'h428;
localparam MSIX_PBA_64_CLEAR_SIZE = 32;
localparam MSIX_PBA_64_CLEAR_MSIX_PBA_64_CLEAR_LO = 0;
localparam MSIX_PBA_64_CLEAR_MSIX_PBA_64_CLEAR_HI = 0;
localparam MSIX_PBA_64_CLEAR_MSIX_PBA_64_CLEAR_RESET = 1'b0;
localparam MSIX_PBA_64_CLEAR_USEMASK = 32'h1;
localparam MSIX_PBA_64_CLEAR_RO_MASK = 32'h0;
localparam MSIX_PBA_64_CLEAR_WO_MASK = 32'h0;
localparam MSIX_PBA_64_CLEAR_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} DIR_CQ_31_0_OCC_INT_STATUS_t;

localparam DIR_CQ_31_0_OCC_INT_STATUS_REG_STRIDE = 48'h4;
localparam DIR_CQ_31_0_OCC_INT_STATUS_REG_ENTRIES = 1;
localparam [47:0] DIR_CQ_31_0_OCC_INT_STATUS_CR_ADDR = 48'h440;
localparam DIR_CQ_31_0_OCC_INT_STATUS_SIZE = 32;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_LO = 31;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_HI = 31;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_LO = 30;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_HI = 30;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_LO = 29;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_HI = 29;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_LO = 28;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_HI = 28;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_LO = 27;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_HI = 27;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_LO = 26;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_HI = 26;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_LO = 25;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_HI = 25;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_LO = 24;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_HI = 24;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_LO = 23;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_HI = 23;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_LO = 22;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_HI = 22;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_LO = 21;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_HI = 21;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_LO = 20;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_HI = 20;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_LO = 19;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_HI = 19;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_LO = 18;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_HI = 18;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_LO = 17;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_HI = 17;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_LO = 16;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_HI = 16;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_LO = 15;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_HI = 15;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_LO = 14;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_HI = 14;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_LO = 13;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_HI = 13;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_LO = 12;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_HI = 12;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_LO = 11;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_HI = 11;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_LO = 10;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_HI = 10;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_LO = 9;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_HI = 9;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_LO = 8;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_HI = 8;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_LO = 7;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_HI = 7;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_LO = 6;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_HI = 6;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_LO = 5;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_HI = 5;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_LO = 4;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_HI = 4;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_LO = 3;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_HI = 3;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_LO = 2;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_HI = 2;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_LO = 1;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_HI = 1;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_LO = 0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_HI = 0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_USEMASK = 32'hFFFFFFFF;
localparam DIR_CQ_31_0_OCC_INT_STATUS_RO_MASK = 32'h0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_WO_MASK = 32'h0;
localparam DIR_CQ_31_0_OCC_INT_STATUS_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} DIR_CQ_63_32_OCC_INT_STATUS_t;

localparam DIR_CQ_63_32_OCC_INT_STATUS_REG_STRIDE = 48'h4;
localparam DIR_CQ_63_32_OCC_INT_STATUS_REG_ENTRIES = 1;
localparam [47:0] DIR_CQ_63_32_OCC_INT_STATUS_CR_ADDR = 48'h444;
localparam DIR_CQ_63_32_OCC_INT_STATUS_SIZE = 32;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_LO = 31;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_HI = 31;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_LO = 30;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_HI = 30;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_LO = 29;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_HI = 29;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_LO = 28;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_HI = 28;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_LO = 27;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_HI = 27;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_LO = 26;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_HI = 26;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_LO = 25;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_HI = 25;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_LO = 24;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_HI = 24;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_LO = 23;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_HI = 23;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_LO = 22;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_HI = 22;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_LO = 21;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_HI = 21;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_LO = 20;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_HI = 20;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_LO = 19;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_HI = 19;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_LO = 18;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_HI = 18;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_LO = 17;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_HI = 17;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_LO = 16;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_HI = 16;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_LO = 15;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_HI = 15;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_LO = 14;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_HI = 14;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_LO = 13;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_HI = 13;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_LO = 12;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_HI = 12;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_LO = 11;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_HI = 11;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_LO = 10;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_HI = 10;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_LO = 9;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_HI = 9;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_LO = 8;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_HI = 8;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_LO = 7;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_HI = 7;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_LO = 6;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_HI = 6;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_LO = 5;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_HI = 5;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_LO = 4;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_HI = 4;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_LO = 3;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_HI = 3;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_LO = 2;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_HI = 2;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_LO = 1;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_HI = 1;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_LO = 0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_HI = 0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_RESET = 1'b0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_USEMASK = 32'hFFFFFFFF;
localparam DIR_CQ_63_32_OCC_INT_STATUS_RO_MASK = 32'h0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_WO_MASK = 32'h0;
localparam DIR_CQ_63_32_OCC_INT_STATUS_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} LDB_CQ_31_0_OCC_INT_STATUS_t;

localparam LDB_CQ_31_0_OCC_INT_STATUS_REG_STRIDE = 48'h4;
localparam LDB_CQ_31_0_OCC_INT_STATUS_REG_ENTRIES = 1;
localparam [47:0] LDB_CQ_31_0_OCC_INT_STATUS_CR_ADDR = 48'h460;
localparam LDB_CQ_31_0_OCC_INT_STATUS_SIZE = 32;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_LO = 31;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_HI = 31;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_31_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_LO = 30;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_HI = 30;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_30_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_LO = 29;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_HI = 29;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_29_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_LO = 28;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_HI = 28;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_28_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_LO = 27;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_HI = 27;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_27_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_LO = 26;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_HI = 26;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_26_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_LO = 25;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_HI = 25;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_25_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_LO = 24;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_HI = 24;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_24_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_LO = 23;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_HI = 23;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_23_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_LO = 22;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_HI = 22;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_22_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_LO = 21;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_HI = 21;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_21_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_LO = 20;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_HI = 20;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_20_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_LO = 19;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_HI = 19;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_19_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_LO = 18;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_HI = 18;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_18_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_LO = 17;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_HI = 17;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_17_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_LO = 16;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_HI = 16;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_16_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_LO = 15;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_HI = 15;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_15_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_LO = 14;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_HI = 14;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_14_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_LO = 13;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_HI = 13;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_13_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_LO = 12;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_HI = 12;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_12_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_LO = 11;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_HI = 11;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_11_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_LO = 10;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_HI = 10;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_10_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_LO = 9;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_HI = 9;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_9_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_LO = 8;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_HI = 8;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_8_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_LO = 7;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_HI = 7;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_7_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_LO = 6;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_HI = 6;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_6_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_LO = 5;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_HI = 5;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_5_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_LO = 4;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_HI = 4;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_4_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_LO = 3;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_HI = 3;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_3_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_LO = 2;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_HI = 2;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_2_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_LO = 1;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_HI = 1;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_1_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_LO = 0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_HI = 0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_CQ_0_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_USEMASK = 32'hFFFFFFFF;
localparam LDB_CQ_31_0_OCC_INT_STATUS_RO_MASK = 32'h0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_WO_MASK = 32'h0;
localparam LDB_CQ_31_0_OCC_INT_STATUS_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} LDB_CQ_63_32_OCC_INT_STATUS_t;

localparam LDB_CQ_63_32_OCC_INT_STATUS_REG_STRIDE = 48'h4;
localparam LDB_CQ_63_32_OCC_INT_STATUS_REG_ENTRIES = 1;
localparam [47:0] LDB_CQ_63_32_OCC_INT_STATUS_CR_ADDR = 48'h464;
localparam LDB_CQ_63_32_OCC_INT_STATUS_SIZE = 32;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_LO = 31;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_HI = 31;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_63_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_LO = 30;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_HI = 30;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_62_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_LO = 29;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_HI = 29;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_61_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_LO = 28;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_HI = 28;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_60_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_LO = 27;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_HI = 27;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_59_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_LO = 26;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_HI = 26;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_58_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_LO = 25;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_HI = 25;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_57_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_LO = 24;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_HI = 24;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_56_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_LO = 23;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_HI = 23;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_55_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_LO = 22;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_HI = 22;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_54_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_LO = 21;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_HI = 21;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_53_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_LO = 20;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_HI = 20;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_52_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_LO = 19;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_HI = 19;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_51_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_LO = 18;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_HI = 18;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_50_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_LO = 17;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_HI = 17;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_49_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_LO = 16;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_HI = 16;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_48_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_LO = 15;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_HI = 15;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_47_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_LO = 14;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_HI = 14;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_46_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_LO = 13;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_HI = 13;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_45_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_LO = 12;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_HI = 12;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_44_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_LO = 11;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_HI = 11;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_43_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_LO = 10;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_HI = 10;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_42_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_LO = 9;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_HI = 9;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_41_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_LO = 8;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_HI = 8;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_40_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_LO = 7;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_HI = 7;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_39_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_LO = 6;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_HI = 6;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_38_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_LO = 5;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_HI = 5;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_37_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_LO = 4;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_HI = 4;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_36_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_LO = 3;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_HI = 3;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_35_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_LO = 2;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_HI = 2;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_34_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_LO = 1;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_HI = 1;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_33_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_LO = 0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_HI = 0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_CQ_32_OCC_INT_RESET = 1'b0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_USEMASK = 32'hFFFFFFFF;
localparam LDB_CQ_63_32_OCC_INT_STATUS_RO_MASK = 32'h0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_WO_MASK = 32'h0;
localparam LDB_CQ_63_32_OCC_INT_STATUS_RESET = 32'h0;

typedef struct packed {
    logic [19:0] reserved0;  // RSVD
    logic  [0:0] RF_IPAR_ERROR;  // RW
    logic  [0:0] ALARM_INT_ERR;  // RW
    logic  [0:0] SCH_WB_PERR;  // RW
    logic  [0:0] FIFO_OVERFLOW;  // RW
    logic  [0:0] FIFO_UNDERFLOW;  // RW
    logic  [0:0] SCH_SM_ERROR;  // RW
    logic  [0:0] PF_TO_VF_ISR_PEND_ERROR;  // RW
    logic  [0:0] VF_TO_PF_ISR_PEND_ERROR;  // RW
    logic  [0:0] ALARM_PERR;  // RW
    logic  [0:0] EGRESS_PERR;  // RW
    logic  [0:0] INGRESS_PERR;  // RW
    logic  [0:0] CQ_ADDR_OVERFLOW_ERROR;  // RW
} SYS_ALARM_INT_ENABLE_t;

localparam SYS_ALARM_INT_ENABLE_REG_STRIDE = 48'h4;
localparam SYS_ALARM_INT_ENABLE_REG_ENTRIES = 1;
localparam [47:0] SYS_ALARM_INT_ENABLE_CR_ADDR = 48'h468;
localparam SYS_ALARM_INT_ENABLE_SIZE = 32;
localparam SYS_ALARM_INT_ENABLE_RF_IPAR_ERROR_LO = 11;
localparam SYS_ALARM_INT_ENABLE_RF_IPAR_ERROR_HI = 11;
localparam SYS_ALARM_INT_ENABLE_RF_IPAR_ERROR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_ALARM_INT_ERR_LO = 10;
localparam SYS_ALARM_INT_ENABLE_ALARM_INT_ERR_HI = 10;
localparam SYS_ALARM_INT_ENABLE_ALARM_INT_ERR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_SCH_WB_PERR_LO = 9;
localparam SYS_ALARM_INT_ENABLE_SCH_WB_PERR_HI = 9;
localparam SYS_ALARM_INT_ENABLE_SCH_WB_PERR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_FIFO_OVERFLOW_LO = 8;
localparam SYS_ALARM_INT_ENABLE_FIFO_OVERFLOW_HI = 8;
localparam SYS_ALARM_INT_ENABLE_FIFO_OVERFLOW_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_FIFO_UNDERFLOW_LO = 7;
localparam SYS_ALARM_INT_ENABLE_FIFO_UNDERFLOW_HI = 7;
localparam SYS_ALARM_INT_ENABLE_FIFO_UNDERFLOW_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_SCH_SM_ERROR_LO = 6;
localparam SYS_ALARM_INT_ENABLE_SCH_SM_ERROR_HI = 6;
localparam SYS_ALARM_INT_ENABLE_SCH_SM_ERROR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_PF_TO_VF_ISR_PEND_ERROR_LO = 5;
localparam SYS_ALARM_INT_ENABLE_PF_TO_VF_ISR_PEND_ERROR_HI = 5;
localparam SYS_ALARM_INT_ENABLE_PF_TO_VF_ISR_PEND_ERROR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_VF_TO_PF_ISR_PEND_ERROR_LO = 4;
localparam SYS_ALARM_INT_ENABLE_VF_TO_PF_ISR_PEND_ERROR_HI = 4;
localparam SYS_ALARM_INT_ENABLE_VF_TO_PF_ISR_PEND_ERROR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_ALARM_PERR_LO = 3;
localparam SYS_ALARM_INT_ENABLE_ALARM_PERR_HI = 3;
localparam SYS_ALARM_INT_ENABLE_ALARM_PERR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_EGRESS_PERR_LO = 2;
localparam SYS_ALARM_INT_ENABLE_EGRESS_PERR_HI = 2;
localparam SYS_ALARM_INT_ENABLE_EGRESS_PERR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_INGRESS_PERR_LO = 1;
localparam SYS_ALARM_INT_ENABLE_INGRESS_PERR_HI = 1;
localparam SYS_ALARM_INT_ENABLE_INGRESS_PERR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_CQ_ADDR_OVERFLOW_ERROR_LO = 0;
localparam SYS_ALARM_INT_ENABLE_CQ_ADDR_OVERFLOW_ERROR_HI = 0;
localparam SYS_ALARM_INT_ENABLE_CQ_ADDR_OVERFLOW_ERROR_RESET = 1'b1;
localparam SYS_ALARM_INT_ENABLE_USEMASK = 32'hFFF;
localparam SYS_ALARM_INT_ENABLE_RO_MASK = 32'h0;
localparam SYS_ALARM_INT_ENABLE_WO_MASK = 32'h0;
localparam SYS_ALARM_INT_ENABLE_RESET = 32'hFFF;

typedef struct packed {
    logic [23:0] reserved0;  // RSVD
    logic  [0:0] INGRESS_MB_ECC_ERROR_2;  // RW
    logic  [0:0] INGRESS_MB_ECC_ERROR_1;  // RW
    logic  [0:0] INGRESS_MB_ECC_ERROR_0;  // RW
    logic  [0:0] SYSTEM_CSR_MB_ECC_ERROR;  // RW
    logic  [0:0] SCH_WB_MB_ECC_ERROR_3;  // RW
    logic  [0:0] SCH_WB_MB_ECC_ERROR_2;  // RW
    logic  [0:0] SCH_WB_MB_ECC_ERROR_1;  // RW
    logic  [0:0] SCH_WB_MB_ECC_ERROR_0;  // RW
} SYS_ALARM_MB_ECC_INT_ENABLE_t;

localparam SYS_ALARM_MB_ECC_INT_ENABLE_REG_STRIDE = 48'h4;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_REG_ENTRIES = 1;
localparam [47:0] SYS_ALARM_MB_ECC_INT_ENABLE_CR_ADDR = 48'h46C;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SIZE = 32;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_2_LO = 7;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_2_HI = 7;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_2_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_1_LO = 6;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_1_HI = 6;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_1_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_0_LO = 5;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_0_HI = 5;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_INGRESS_MB_ECC_ERROR_0_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SYSTEM_CSR_MB_ECC_ERROR_LO = 4;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SYSTEM_CSR_MB_ECC_ERROR_HI = 4;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SYSTEM_CSR_MB_ECC_ERROR_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_3_LO = 3;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_3_HI = 3;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_3_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_2_LO = 2;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_2_HI = 2;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_2_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_1_LO = 1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_1_HI = 1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_1_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_0_LO = 0;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_0_HI = 0;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_SCH_WB_MB_ECC_ERROR_0_RESET = 1'b1;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_USEMASK = 32'hFF;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_RO_MASK = 32'h0;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_WO_MASK = 32'h0;
localparam SYS_ALARM_MB_ECC_INT_ENABLE_RESET = 32'hFF;

typedef struct packed {
    logic [21:0] reserved0;  // RSVD
    logic  [0:0] INGRESS_SB_ECC_ERROR_4;  // RW
    logic  [0:0] INGRESS_SB_ECC_ERROR_3;  // RW
    logic  [0:0] INGRESS_SB_ECC_ERROR_2;  // RW
    logic  [0:0] INGRESS_SB_ECC_ERROR_1;  // RW
    logic  [0:0] INGRESS_SB_ECC_ERROR_0;  // RW
    logic  [0:0] SYSTEM_CSR_SB_ECC_ERROR;  // RW
    logic  [0:0] SCH_WB_SB_ECC_ERROR_3;  // RW
    logic  [0:0] SCH_WB_SB_ECC_ERROR_2;  // RW
    logic  [0:0] SCH_WB_SB_ECC_ERROR_1;  // RW
    logic  [0:0] SCH_WB_SB_ECC_ERROR_0;  // RW
} SYS_ALARM_SB_ECC_INT_ENABLE_t;

localparam SYS_ALARM_SB_ECC_INT_ENABLE_REG_STRIDE = 48'h4;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_REG_ENTRIES = 1;
localparam [47:0] SYS_ALARM_SB_ECC_INT_ENABLE_CR_ADDR = 48'h470;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SIZE = 32;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_4_LO = 9;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_4_HI = 9;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_4_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_3_LO = 8;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_3_HI = 8;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_3_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_2_LO = 7;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_2_HI = 7;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_2_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_1_LO = 6;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_1_HI = 6;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_1_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_0_LO = 5;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_0_HI = 5;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_INGRESS_SB_ECC_ERROR_0_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SYSTEM_CSR_SB_ECC_ERROR_LO = 4;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SYSTEM_CSR_SB_ECC_ERROR_HI = 4;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SYSTEM_CSR_SB_ECC_ERROR_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_3_LO = 3;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_3_HI = 3;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_3_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_2_LO = 2;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_2_HI = 2;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_2_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_1_LO = 1;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_1_HI = 1;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_1_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_0_LO = 0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_0_HI = 0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_SCH_WB_SB_ECC_ERROR_0_RESET = 1'b0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_USEMASK = 32'h3FF;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_RO_MASK = 32'h0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_WO_MASK = 32'h0;
localparam SYS_ALARM_SB_ECC_INT_ENABLE_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] VALID;  // RW/1C/V
    logic  [0:0] MORE;  // RW/1C/V
    logic  [3:0] SOURCE;  // RO/V
    logic  [3:0] UNIT;  // RO/V
    logic  [5:0] AID;  // RO/V
    logic  [1:0] CLS;  // RO/V
    logic  [0:0] IS_LDB;  // RO/V
    logic  [2:0] reserved0;  // RSVD
    logic  [1:0] RTYPE;  // RO/V
    logic  [7:0] SYNDROME;  // RO/V
} ALARM_PF_SYND0_t;

localparam ALARM_PF_SYND0_REG_STRIDE = 48'h4;
localparam ALARM_PF_SYND0_REG_ENTRIES = 1;
localparam ALARM_PF_SYND_REGFILE_STRIDE = 48'h10;
localparam ALARM_PF_SYND_REGFILE_ENTRIES = 1;
localparam ALARM_PF_SYND0_CR_ADDR = 48'h500;
localparam ALARM_PF_SYND0_SIZE = 32;
localparam ALARM_PF_SYND0_VALID_LO = 31;
localparam ALARM_PF_SYND0_VALID_HI = 31;
localparam ALARM_PF_SYND0_VALID_RESET = 1'h0;
localparam ALARM_PF_SYND0_MORE_LO = 30;
localparam ALARM_PF_SYND0_MORE_HI = 30;
localparam ALARM_PF_SYND0_MORE_RESET = 1'h0;
localparam ALARM_PF_SYND0_SOURCE_LO = 26;
localparam ALARM_PF_SYND0_SOURCE_HI = 29;
localparam ALARM_PF_SYND0_SOURCE_RESET = 4'h0;
localparam ALARM_PF_SYND0_UNIT_LO = 22;
localparam ALARM_PF_SYND0_UNIT_HI = 25;
localparam ALARM_PF_SYND0_UNIT_RESET = 4'h0;
localparam ALARM_PF_SYND0_AID_LO = 16;
localparam ALARM_PF_SYND0_AID_HI = 21;
localparam ALARM_PF_SYND0_AID_RESET = 6'h0;
localparam ALARM_PF_SYND0_CLS_LO = 14;
localparam ALARM_PF_SYND0_CLS_HI = 15;
localparam ALARM_PF_SYND0_CLS_RESET = 2'h0;
localparam ALARM_PF_SYND0_IS_LDB_LO = 13;
localparam ALARM_PF_SYND0_IS_LDB_HI = 13;
localparam ALARM_PF_SYND0_IS_LDB_RESET = 1'h0;
localparam ALARM_PF_SYND0_RTYPE_LO = 8;
localparam ALARM_PF_SYND0_RTYPE_HI = 9;
localparam ALARM_PF_SYND0_RTYPE_RESET = 2'h0;
localparam ALARM_PF_SYND0_SYNDROME_LO = 0;
localparam ALARM_PF_SYND0_SYNDROME_HI = 7;
localparam ALARM_PF_SYND0_SYNDROME_RESET = 8'h0;
localparam ALARM_PF_SYND0_USEMASK = 32'hFFFFE3FF;
localparam ALARM_PF_SYND0_RO_MASK = 32'h3FFFE3FF;
localparam ALARM_PF_SYND0_WO_MASK = 32'h0;
localparam ALARM_PF_SYND0_RESET = 32'h0;

typedef struct packed {
    logic  [2:0] MSG_TYPE;  // RO/V
    logic  [2:0] QPRI;  // RO/V
    logic  [1:0] QTYPE;  // RO/V
    logic  [7:0] QID;  // RO/V
    logic [15:0] DSI;  // RO/V
} ALARM_PF_SYND1_t;

localparam ALARM_PF_SYND1_REG_STRIDE = 48'h4;
localparam ALARM_PF_SYND1_REG_ENTRIES = 1;
localparam ALARM_PF_SYND1_CR_ADDR = 48'h504;
localparam ALARM_PF_SYND1_SIZE = 32;
localparam ALARM_PF_SYND1_MSG_TYPE_LO = 29;
localparam ALARM_PF_SYND1_MSG_TYPE_HI = 31;
localparam ALARM_PF_SYND1_MSG_TYPE_RESET = 3'h0;
localparam ALARM_PF_SYND1_QPRI_LO = 26;
localparam ALARM_PF_SYND1_QPRI_HI = 28;
localparam ALARM_PF_SYND1_QPRI_RESET = 3'h0;
localparam ALARM_PF_SYND1_QTYPE_LO = 24;
localparam ALARM_PF_SYND1_QTYPE_HI = 25;
localparam ALARM_PF_SYND1_QTYPE_RESET = 2'h0;
localparam ALARM_PF_SYND1_QID_LO = 16;
localparam ALARM_PF_SYND1_QID_HI = 23;
localparam ALARM_PF_SYND1_QID_RESET = 8'h0;
localparam ALARM_PF_SYND1_DSI_LO = 0;
localparam ALARM_PF_SYND1_DSI_HI = 15;
localparam ALARM_PF_SYND1_DSI_RESET = 16'h0;
localparam ALARM_PF_SYND1_USEMASK = 32'hFFFFFFFF;
localparam ALARM_PF_SYND1_RO_MASK = 32'hFFFFFFFF;
localparam ALARM_PF_SYND1_WO_MASK = 32'h0;
localparam ALARM_PF_SYND1_RESET = 32'h0;

typedef struct packed {
    logic  [1:0] reserved0;  // RSVD
    logic  [0:0] DSI_ERROR;  // RO/V
    logic  [0:0] CQ_INT_REARM;  // RO/V
    logic  [0:0] QE_VALID;  // RO/V
    logic  [0:0] QE_ORSP;  // RO/V
    logic  [0:0] QE_UHL;  // RO/V
    logic  [0:0] CQ_POP;  // RO/V
    logic  [6:0] DEBUG;  // RO/V
    logic  [0:0] MEAS;  // RO/V
    logic [15:0] LOCK_ID;  // RO/V
} ALARM_PF_SYND2_t;

localparam ALARM_PF_SYND2_REG_STRIDE = 48'h4;
localparam ALARM_PF_SYND2_REG_ENTRIES = 1;
localparam ALARM_PF_SYND2_CR_ADDR = 48'h508;
localparam ALARM_PF_SYND2_SIZE = 32;
localparam ALARM_PF_SYND2_DSI_ERROR_LO = 29;
localparam ALARM_PF_SYND2_DSI_ERROR_HI = 29;
localparam ALARM_PF_SYND2_DSI_ERROR_RESET = 1'h0;
localparam ALARM_PF_SYND2_CQ_INT_REARM_LO = 28;
localparam ALARM_PF_SYND2_CQ_INT_REARM_HI = 28;
localparam ALARM_PF_SYND2_CQ_INT_REARM_RESET = 1'h0;
localparam ALARM_PF_SYND2_QE_VALID_LO = 27;
localparam ALARM_PF_SYND2_QE_VALID_HI = 27;
localparam ALARM_PF_SYND2_QE_VALID_RESET = 1'h0;
localparam ALARM_PF_SYND2_QE_ORSP_LO = 26;
localparam ALARM_PF_SYND2_QE_ORSP_HI = 26;
localparam ALARM_PF_SYND2_QE_ORSP_RESET = 1'h0;
localparam ALARM_PF_SYND2_QE_UHL_LO = 25;
localparam ALARM_PF_SYND2_QE_UHL_HI = 25;
localparam ALARM_PF_SYND2_QE_UHL_RESET = 1'h0;
localparam ALARM_PF_SYND2_CQ_POP_LO = 24;
localparam ALARM_PF_SYND2_CQ_POP_HI = 24;
localparam ALARM_PF_SYND2_CQ_POP_RESET = 1'h0;
localparam ALARM_PF_SYND2_DEBUG_LO = 17;
localparam ALARM_PF_SYND2_DEBUG_HI = 23;
localparam ALARM_PF_SYND2_DEBUG_RESET = 7'h0;
localparam ALARM_PF_SYND2_MEAS_LO = 16;
localparam ALARM_PF_SYND2_MEAS_HI = 16;
localparam ALARM_PF_SYND2_MEAS_RESET = 1'h0;
localparam ALARM_PF_SYND2_LOCK_ID_LO = 0;
localparam ALARM_PF_SYND2_LOCK_ID_HI = 15;
localparam ALARM_PF_SYND2_LOCK_ID_RESET = 16'h0;
localparam ALARM_PF_SYND2_USEMASK = 32'h3FFFFFFF;
localparam ALARM_PF_SYND2_RO_MASK = 32'h3FFFFFFF;
localparam ALARM_PF_SYND2_WO_MASK = 32'h0;
localparam ALARM_PF_SYND2_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] VALID;  // RW/1C/V
    logic  [0:0] MORE;  // RW/1C/V
    logic  [3:0] SOURCE;  // RO/V
    logic  [3:0] UNIT;  // RO/V
    logic  [5:0] AID;  // RO/V
    logic  [1:0] CLS;  // RO/V
    logic  [0:0] RSVD0;  // RO/V
    logic  [0:0] VF_PF_MB;  // RO/V
    logic  [0:0] CWD;  // RO/V
    logic  [0:0] ALARM;  // RO/V
    logic  [1:0] RTYPE;  // RO/V
    logic  [7:0] SYNDROME;  // RO/V
} ALARM_HW_SYND_t;

localparam ALARM_HW_SYND_REG_STRIDE = 48'h4;
localparam ALARM_HW_SYND_REG_ENTRIES = 1;
localparam ALARM_HW_SYND_CR_ADDR = 48'h50C;
localparam ALARM_HW_SYND_SIZE = 32;
localparam ALARM_HW_SYND_VALID_LO = 31;
localparam ALARM_HW_SYND_VALID_HI = 31;
localparam ALARM_HW_SYND_VALID_RESET = 1'h0;
localparam ALARM_HW_SYND_MORE_LO = 30;
localparam ALARM_HW_SYND_MORE_HI = 30;
localparam ALARM_HW_SYND_MORE_RESET = 1'h0;
localparam ALARM_HW_SYND_SOURCE_LO = 26;
localparam ALARM_HW_SYND_SOURCE_HI = 29;
localparam ALARM_HW_SYND_SOURCE_RESET = 4'h0;
localparam ALARM_HW_SYND_UNIT_LO = 22;
localparam ALARM_HW_SYND_UNIT_HI = 25;
localparam ALARM_HW_SYND_UNIT_RESET = 4'h0;
localparam ALARM_HW_SYND_AID_LO = 16;
localparam ALARM_HW_SYND_AID_HI = 21;
localparam ALARM_HW_SYND_AID_RESET = 6'h0;
localparam ALARM_HW_SYND_CLS_LO = 14;
localparam ALARM_HW_SYND_CLS_HI = 15;
localparam ALARM_HW_SYND_CLS_RESET = 2'h0;
localparam ALARM_HW_SYND_RSVD0_LO = 13;
localparam ALARM_HW_SYND_RSVD0_HI = 13;
localparam ALARM_HW_SYND_RSVD0_RESET = 1'h0;
localparam ALARM_HW_SYND_VF_PF_MB_LO = 12;
localparam ALARM_HW_SYND_VF_PF_MB_HI = 12;
localparam ALARM_HW_SYND_VF_PF_MB_RESET = 1'h0;
localparam ALARM_HW_SYND_CWD_LO = 11;
localparam ALARM_HW_SYND_CWD_HI = 11;
localparam ALARM_HW_SYND_CWD_RESET = 1'h0;
localparam ALARM_HW_SYND_ALARM_LO = 10;
localparam ALARM_HW_SYND_ALARM_HI = 10;
localparam ALARM_HW_SYND_ALARM_RESET = 1'h0;
localparam ALARM_HW_SYND_RTYPE_LO = 8;
localparam ALARM_HW_SYND_RTYPE_HI = 9;
localparam ALARM_HW_SYND_RTYPE_RESET = 2'h0;
localparam ALARM_HW_SYND_SYNDROME_LO = 0;
localparam ALARM_HW_SYND_SYNDROME_HI = 7;
localparam ALARM_HW_SYND_SYNDROME_RESET = 8'h0;
localparam ALARM_HW_SYND_USEMASK = 32'hFFFFFFFF;
localparam ALARM_HW_SYND_RO_MASK = 32'h3FFFFFFF;
localparam ALARM_HW_SYND_WO_MASK = 32'h0;
localparam ALARM_HW_SYND_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VPP_V;  // RW
} VF_LDB_VPP_V_t;

localparam VF_LDB_VPP_V_REG_STRIDE = 48'h4;
localparam VF_LDB_VPP_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_LDB_PRODPORT_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_LDB_PRODPORT_VALID_REGFILE_ENTRIES = 1024;
localparam VF_LDB_VPP_V_CR_ADDR = 48'hF00;
localparam VF_LDB_VPP_V_SIZE = 32;
localparam VF_LDB_VPP_V_VPP_V_LO = 0;
localparam VF_LDB_VPP_V_VPP_V_HI = 0;
localparam VF_LDB_VPP_V_VPP_V_RESET = 1'h0;
localparam VF_LDB_VPP_V_USEMASK = 32'h1;
localparam VF_LDB_VPP_V_RO_MASK = 32'h0;
localparam VF_LDB_VPP_V_WO_MASK = 32'h0;
localparam VF_LDB_VPP_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [5:0] PP;  // RW
} VF_LDB_VPP2PP_t;

localparam VF_LDB_VPP2PP_REG_STRIDE = 48'h4;
localparam VF_LDB_VPP2PP_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_LDB_PRODPORT_XLATIONS_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_LDB_PRODPORT_XLATIONS_REGFILE_ENTRIES = 1024;
localparam VF_LDB_VPP2PP_CR_ADDR = 48'hF04;
localparam VF_LDB_VPP2PP_SIZE = 32;
localparam VF_LDB_VPP2PP_PP_LO = 0;
localparam VF_LDB_VPP2PP_PP_HI = 5;
localparam VF_LDB_VPP2PP_PP_RESET = 6'h0;
localparam VF_LDB_VPP2PP_USEMASK = 32'h3F;
localparam VF_LDB_VPP2PP_RO_MASK = 32'h0;
localparam VF_LDB_VPP2PP_WO_MASK = 32'h0;
localparam VF_LDB_VPP2PP_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VPP_V;  // RW
} VF_DIR_VPP_V_t;

localparam VF_DIR_VPP_V_REG_STRIDE = 48'h4;
localparam VF_DIR_VPP_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_DIR_PRODPORT_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_DIR_PRODPORT_VALID_REGFILE_ENTRIES = 1024;
localparam VF_DIR_VPP_V_CR_ADDR = 48'hF08;
localparam VF_DIR_VPP_V_SIZE = 32;
localparam VF_DIR_VPP_V_VPP_V_LO = 0;
localparam VF_DIR_VPP_V_VPP_V_HI = 0;
localparam VF_DIR_VPP_V_VPP_V_RESET = 1'h0;
localparam VF_DIR_VPP_V_USEMASK = 32'h1;
localparam VF_DIR_VPP_V_RO_MASK = 32'h0;
localparam VF_DIR_VPP_V_WO_MASK = 32'h0;
localparam VF_DIR_VPP_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [5:0] PP;  // RW
} VF_DIR_VPP2PP_t;

localparam VF_DIR_VPP2PP_REG_STRIDE = 48'h4;
localparam VF_DIR_VPP2PP_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_DIR_PRODPORT_XLATIONS_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_DIR_PRODPORT_XLATIONS_REGFILE_ENTRIES = 1024;
localparam VF_DIR_VPP2PP_CR_ADDR = 48'hF0C;
localparam VF_DIR_VPP2PP_SIZE = 32;
localparam VF_DIR_VPP2PP_PP_LO = 0;
localparam VF_DIR_VPP2PP_PP_HI = 5;
localparam VF_DIR_VPP2PP_PP_RESET = 6'h0;
localparam VF_DIR_VPP2PP_USEMASK = 32'h3F;
localparam VF_DIR_VPP2PP_RO_MASK = 32'h0;
localparam VF_DIR_VPP2PP_WO_MASK = 32'h0;
localparam VF_DIR_VPP2PP_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VQID_V;  // RW
} VF_LDB_VQID_V_t;

localparam VF_LDB_VQID_V_REG_STRIDE = 48'h4;
localparam VF_LDB_VQID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_LDB_VQID_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_LDB_VQID_VALID_REGFILE_ENTRIES = 512;
localparam VF_LDB_VQID_V_CR_ADDR = 48'hF10;
localparam VF_LDB_VQID_V_SIZE = 32;
localparam VF_LDB_VQID_V_VQID_V_LO = 0;
localparam VF_LDB_VQID_V_VQID_V_HI = 0;
localparam VF_LDB_VQID_V_VQID_V_RESET = 1'h0;
localparam VF_LDB_VQID_V_USEMASK = 32'h1;
localparam VF_LDB_VQID_V_RO_MASK = 32'h0;
localparam VF_LDB_VQID_V_WO_MASK = 32'h0;
localparam VF_LDB_VQID_V_RESET = 32'h0;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [4:0] QID;  // RW
} VF_LDB_VQID2QID_t;

localparam VF_LDB_VQID2QID_REG_STRIDE = 48'h4;
localparam VF_LDB_VQID2QID_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_LDB_QID_XLATIONS_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_LDB_QID_XLATIONS_REGFILE_ENTRIES = 512;
localparam VF_LDB_VQID2QID_CR_ADDR = 48'hF14;
localparam VF_LDB_VQID2QID_SIZE = 32;
localparam VF_LDB_VQID2QID_QID_LO = 0;
localparam VF_LDB_VQID2QID_QID_HI = 4;
localparam VF_LDB_VQID2QID_QID_RESET = 5'h0;
localparam VF_LDB_VQID2QID_USEMASK = 32'h1F;
localparam VF_LDB_VQID2QID_RO_MASK = 32'h0;
localparam VF_LDB_VQID2QID_WO_MASK = 32'h0;
localparam VF_LDB_VQID2QID_RESET = 32'h0;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [4:0] VQID;  // RW
} LDB_QID2VQID_t;

localparam LDB_QID2VQID_REG_STRIDE = 48'h4;
localparam LDB_QID2VQID_REG_ENTRIES = 1;
localparam HQM_SYSTEM_LDB_QID2VQID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_LDB_QID2VQID_REGFILE_ENTRIES = 32;
localparam LDB_QID2VQID_CR_ADDR = 48'hF18;
localparam LDB_QID2VQID_SIZE = 32;
localparam LDB_QID2VQID_VQID_LO = 0;
localparam LDB_QID2VQID_VQID_HI = 4;
localparam LDB_QID2VQID_VQID_RESET = 5'h0;
localparam LDB_QID2VQID_USEMASK = 32'h1F;
localparam LDB_QID2VQID_RO_MASK = 32'h0;
localparam LDB_QID2VQID_WO_MASK = 32'h0;
localparam LDB_QID2VQID_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VQID_V;  // RW
} VF_DIR_VQID_V_t;

localparam VF_DIR_VQID_V_REG_STRIDE = 48'h4;
localparam VF_DIR_VQID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_DIR_VQID_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_DIR_VQID_VALID_REGFILE_ENTRIES = 1024;
localparam VF_DIR_VQID_V_CR_ADDR = 48'hF1C;
localparam VF_DIR_VQID_V_SIZE = 32;
localparam VF_DIR_VQID_V_VQID_V_LO = 0;
localparam VF_DIR_VQID_V_VQID_V_HI = 0;
localparam VF_DIR_VQID_V_VQID_V_RESET = 1'h0;
localparam VF_DIR_VQID_V_USEMASK = 32'h1;
localparam VF_DIR_VQID_V_RO_MASK = 32'h0;
localparam VF_DIR_VQID_V_WO_MASK = 32'h0;
localparam VF_DIR_VQID_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [5:0] QID;  // RW
} VF_DIR_VQID2QID_t;

localparam VF_DIR_VQID2QID_REG_STRIDE = 48'h4;
localparam VF_DIR_VQID2QID_REG_ENTRIES = 1;
localparam HQM_SYSTEM_VF_DIR_QID_XLATIONS_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_VF_DIR_QID_XLATIONS_REGFILE_ENTRIES = 1024;
localparam VF_DIR_VQID2QID_CR_ADDR = 48'hF20;
localparam VF_DIR_VQID2QID_SIZE = 32;
localparam VF_DIR_VQID2QID_QID_LO = 0;
localparam VF_DIR_VQID2QID_QID_HI = 5;
localparam VF_DIR_VQID2QID_QID_RESET = 6'h0;
localparam VF_DIR_VQID2QID_USEMASK = 32'h3F;
localparam VF_DIR_VQID2QID_RO_MASK = 32'h0;
localparam VF_DIR_VQID2QID_WO_MASK = 32'h0;
localparam VF_DIR_VQID2QID_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VASQID_V;  // RW
} LDB_VASQID_V_t;

localparam LDB_VASQID_V_REG_STRIDE = 48'h4;
localparam LDB_VASQID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_LDB_VAS_QID_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_LDB_VAS_QID_VALID_REGFILE_ENTRIES = 1024;
localparam LDB_VASQID_V_CR_ADDR = 48'hF24;
localparam LDB_VASQID_V_SIZE = 32;
localparam LDB_VASQID_V_VASQID_V_LO = 0;
localparam LDB_VASQID_V_VASQID_V_HI = 0;
localparam LDB_VASQID_V_VASQID_V_RESET = 1'h0;
localparam LDB_VASQID_V_USEMASK = 32'h1;
localparam LDB_VASQID_V_RO_MASK = 32'h0;
localparam LDB_VASQID_V_WO_MASK = 32'h0;
localparam LDB_VASQID_V_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] VASQID_V;  // RW
} DIR_VASQID_V_t;

localparam DIR_VASQID_V_REG_STRIDE = 48'h4;
localparam DIR_VASQID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_DIR_VAS_QID_VALID_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_DIR_VAS_QID_VALID_REGFILE_ENTRIES = 2048;
localparam DIR_VASQID_V_CR_ADDR = 48'hF28;
localparam DIR_VASQID_V_SIZE = 32;
localparam DIR_VASQID_V_VASQID_V_LO = 0;
localparam DIR_VASQID_V_VASQID_V_HI = 0;
localparam DIR_VASQID_V_VASQID_V_RESET = 1'h0;
localparam DIR_VASQID_V_USEMASK = 32'h1;
localparam DIR_VASQID_V_RO_MASK = 32'h0;
localparam DIR_VASQID_V_WO_MASK = 32'h0;
localparam DIR_VASQID_V_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] VALID;  // RW/1C/V
    logic  [0:0] MORE;  // RW/1C/V
    logic  [3:0] SOURCE;  // RO/V
    logic  [3:0] UNIT;  // RO/V
    logic  [5:0] AID;  // RO/V
    logic  [1:0] CLS;  // RO/V
    logic  [0:0] IS_LDB;  // RO/V
    logic  [0:0] VF_SYND2_PARITY;  // RO/V
    logic  [0:0] VF_SYND1_PARITY;  // RO/V
    logic  [0:0] VF_SYND0_PARITY;  // RO/V
    logic  [1:0] RTYPE;  // RO/V
    logic  [7:0] SYNDROME;  // RO/V
} ALARM_VF_SYND0_t;

localparam ALARM_VF_SYND0_REG_STRIDE = 48'h4;
localparam ALARM_VF_SYND0_REG_ENTRIES = 1;
localparam ALARM_VF_SYND_REGFILE_STRIDE = 48'h1000;
localparam ALARM_VF_SYND_REGFILE_ENTRIES = 16;
localparam ALARM_VF_SYND0_CR_ADDR = 48'hF40;
localparam ALARM_VF_SYND0_SIZE = 32;
localparam ALARM_VF_SYND0_VALID_LO = 31;
localparam ALARM_VF_SYND0_VALID_HI = 31;
localparam ALARM_VF_SYND0_VALID_RESET = 1'h0;
localparam ALARM_VF_SYND0_MORE_LO = 30;
localparam ALARM_VF_SYND0_MORE_HI = 30;
localparam ALARM_VF_SYND0_MORE_RESET = 1'h0;
localparam ALARM_VF_SYND0_SOURCE_LO = 26;
localparam ALARM_VF_SYND0_SOURCE_HI = 29;
localparam ALARM_VF_SYND0_SOURCE_RESET = 4'h0;
localparam ALARM_VF_SYND0_UNIT_LO = 22;
localparam ALARM_VF_SYND0_UNIT_HI = 25;
localparam ALARM_VF_SYND0_UNIT_RESET = 4'h0;
localparam ALARM_VF_SYND0_AID_LO = 16;
localparam ALARM_VF_SYND0_AID_HI = 21;
localparam ALARM_VF_SYND0_AID_RESET = 6'h0;
localparam ALARM_VF_SYND0_CLS_LO = 14;
localparam ALARM_VF_SYND0_CLS_HI = 15;
localparam ALARM_VF_SYND0_CLS_RESET = 2'h0;
localparam ALARM_VF_SYND0_IS_LDB_LO = 13;
localparam ALARM_VF_SYND0_IS_LDB_HI = 13;
localparam ALARM_VF_SYND0_IS_LDB_RESET = 1'h0;
localparam ALARM_VF_SYND0_VF_SYND2_PARITY_LO = 12;
localparam ALARM_VF_SYND0_VF_SYND2_PARITY_HI = 12;
localparam ALARM_VF_SYND0_VF_SYND2_PARITY_RESET = 1'h0;
localparam ALARM_VF_SYND0_VF_SYND1_PARITY_LO = 11;
localparam ALARM_VF_SYND0_VF_SYND1_PARITY_HI = 11;
localparam ALARM_VF_SYND0_VF_SYND1_PARITY_RESET = 1'h0;
localparam ALARM_VF_SYND0_VF_SYND0_PARITY_LO = 10;
localparam ALARM_VF_SYND0_VF_SYND0_PARITY_HI = 10;
localparam ALARM_VF_SYND0_VF_SYND0_PARITY_RESET = 1'h0;
localparam ALARM_VF_SYND0_RTYPE_LO = 8;
localparam ALARM_VF_SYND0_RTYPE_HI = 9;
localparam ALARM_VF_SYND0_RTYPE_RESET = 2'h0;
localparam ALARM_VF_SYND0_SYNDROME_LO = 0;
localparam ALARM_VF_SYND0_SYNDROME_HI = 7;
localparam ALARM_VF_SYND0_SYNDROME_RESET = 8'h0;
localparam ALARM_VF_SYND0_USEMASK = 32'hFFFFFFFF;
localparam ALARM_VF_SYND0_RO_MASK = 32'h3FFFFFFF;
localparam ALARM_VF_SYND0_WO_MASK = 32'h0;
localparam ALARM_VF_SYND0_RESET = 32'h0;

typedef struct packed {
    logic  [2:0] MSG_TYPE;  // RO/V
    logic  [2:0] QPRI;  // RO/V
    logic  [1:0] QTYPE;  // RO/V
    logic  [7:0] QID;  // RO/V
    logic [15:0] DSI;  // RO/V
} ALARM_VF_SYND1_t;

localparam ALARM_VF_SYND1_REG_STRIDE = 48'h4;
localparam ALARM_VF_SYND1_REG_ENTRIES = 1;
localparam ALARM_VF_SYND1_CR_ADDR = 48'hF44;
localparam ALARM_VF_SYND1_SIZE = 32;
localparam ALARM_VF_SYND1_MSG_TYPE_LO = 29;
localparam ALARM_VF_SYND1_MSG_TYPE_HI = 31;
localparam ALARM_VF_SYND1_MSG_TYPE_RESET = 3'h0;
localparam ALARM_VF_SYND1_QPRI_LO = 26;
localparam ALARM_VF_SYND1_QPRI_HI = 28;
localparam ALARM_VF_SYND1_QPRI_RESET = 3'h0;
localparam ALARM_VF_SYND1_QTYPE_LO = 24;
localparam ALARM_VF_SYND1_QTYPE_HI = 25;
localparam ALARM_VF_SYND1_QTYPE_RESET = 2'h0;
localparam ALARM_VF_SYND1_QID_LO = 16;
localparam ALARM_VF_SYND1_QID_HI = 23;
localparam ALARM_VF_SYND1_QID_RESET = 8'h0;
localparam ALARM_VF_SYND1_DSI_LO = 0;
localparam ALARM_VF_SYND1_DSI_HI = 15;
localparam ALARM_VF_SYND1_DSI_RESET = 16'h0;
localparam ALARM_VF_SYND1_USEMASK = 32'hFFFFFFFF;
localparam ALARM_VF_SYND1_RO_MASK = 32'hFFFFFFFF;
localparam ALARM_VF_SYND1_WO_MASK = 32'h0;
localparam ALARM_VF_SYND1_RESET = 32'h0;

typedef struct packed {
    logic  [1:0] HQMRSVD;  // RO/V
    logic  [0:0] DSI_ERROR;  // RO/V
    logic  [0:0] ISZ;  // RO/V
    logic  [0:0] QE_VALID;  // RO/V
    logic  [0:0] QE_ORSP;  // RO/V
    logic  [0:0] QE_UHL;  // RO/V
    logic  [0:0] CQ_POP;  // RO/V
    logic  [7:0] DEBUG;  // RO/V
    logic [15:0] LOCK_ID;  // RO/V
} ALARM_VF_SYND2_t;

localparam ALARM_VF_SYND2_REG_STRIDE = 48'h4;
localparam ALARM_VF_SYND2_REG_ENTRIES = 1;
localparam ALARM_VF_SYND2_CR_ADDR = 48'hF48;
localparam ALARM_VF_SYND2_SIZE = 32;
localparam ALARM_VF_SYND2_HQMRSVD_LO = 30;
localparam ALARM_VF_SYND2_HQMRSVD_HI = 31;
localparam ALARM_VF_SYND2_HQMRSVD_RESET = 2'h0;
localparam ALARM_VF_SYND2_DSI_ERROR_LO = 29;
localparam ALARM_VF_SYND2_DSI_ERROR_HI = 29;
localparam ALARM_VF_SYND2_DSI_ERROR_RESET = 1'h0;
localparam ALARM_VF_SYND2_ISZ_LO = 28;
localparam ALARM_VF_SYND2_ISZ_HI = 28;
localparam ALARM_VF_SYND2_ISZ_RESET = 1'h0;
localparam ALARM_VF_SYND2_QE_VALID_LO = 27;
localparam ALARM_VF_SYND2_QE_VALID_HI = 27;
localparam ALARM_VF_SYND2_QE_VALID_RESET = 1'h0;
localparam ALARM_VF_SYND2_QE_ORSP_LO = 26;
localparam ALARM_VF_SYND2_QE_ORSP_HI = 26;
localparam ALARM_VF_SYND2_QE_ORSP_RESET = 1'h0;
localparam ALARM_VF_SYND2_QE_UHL_LO = 25;
localparam ALARM_VF_SYND2_QE_UHL_HI = 25;
localparam ALARM_VF_SYND2_QE_UHL_RESET = 1'h0;
localparam ALARM_VF_SYND2_CQ_POP_LO = 24;
localparam ALARM_VF_SYND2_CQ_POP_HI = 24;
localparam ALARM_VF_SYND2_CQ_POP_RESET = 1'h0;
localparam ALARM_VF_SYND2_DEBUG_LO = 16;
localparam ALARM_VF_SYND2_DEBUG_HI = 23;
localparam ALARM_VF_SYND2_DEBUG_RESET = 8'h0;
localparam ALARM_VF_SYND2_LOCK_ID_LO = 0;
localparam ALARM_VF_SYND2_LOCK_ID_HI = 15;
localparam ALARM_VF_SYND2_LOCK_ID_RESET = 16'h0;
localparam ALARM_VF_SYND2_USEMASK = 32'hFFFFFFFF;
localparam ALARM_VF_SYND2_RO_MASK = 32'hFFFFFFFF;
localparam ALARM_VF_SYND2_WO_MASK = 32'h0;
localparam ALARM_VF_SYND2_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] QID_V;  // RW
} LDB_QID_V_t;

localparam LDB_QID_V_REG_STRIDE = 48'h4;
localparam LDB_QID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_LDB_QID_CFG_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_LDB_QID_CFG_REGFILE_ENTRIES = 32;
localparam LDB_QID_V_CR_ADDR = 48'hF50;
localparam LDB_QID_V_SIZE = 32;
localparam LDB_QID_V_QID_V_LO = 0;
localparam LDB_QID_V_QID_V_HI = 0;
localparam LDB_QID_V_QID_V_RESET = 1'h0;
localparam LDB_QID_V_USEMASK = 32'h1;
localparam LDB_QID_V_RO_MASK = 32'h0;
localparam LDB_QID_V_WO_MASK = 32'h0;
localparam LDB_QID_V_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] QID_ITS;  // RW
} LDB_QID_ITS_t;

localparam LDB_QID_ITS_REG_STRIDE = 48'h4;
localparam LDB_QID_ITS_REG_ENTRIES = 1;
localparam LDB_QID_ITS_CR_ADDR = 48'hF54;
localparam LDB_QID_ITS_SIZE = 32;
localparam LDB_QID_ITS_QID_ITS_LO = 0;
localparam LDB_QID_ITS_QID_ITS_HI = 0;
localparam LDB_QID_ITS_QID_ITS_RESET = 1'h0;
localparam LDB_QID_ITS_USEMASK = 32'h1;
localparam LDB_QID_ITS_RO_MASK = 32'h0;
localparam LDB_QID_ITS_WO_MASK = 32'h0;
localparam LDB_QID_ITS_RESET = 32'h0;

typedef struct packed {
    logic [28:0] reserved0;  // RSVD
    logic  [0:0] AO_CFG_V;  // RW
    logic  [0:0] FID_CFG_V;  // RW
    logic  [0:0] SN_CFG_V;  // RW
} LDB_QID_CFG_V_t;

localparam LDB_QID_CFG_V_REG_STRIDE = 48'h4;
localparam LDB_QID_CFG_V_REG_ENTRIES = 1;
localparam LDB_QID_CFG_V_CR_ADDR = 48'hF58;
localparam LDB_QID_CFG_V_SIZE = 32;
localparam LDB_QID_CFG_V_AO_CFG_V_LO = 2;
localparam LDB_QID_CFG_V_AO_CFG_V_HI = 2;
localparam LDB_QID_CFG_V_AO_CFG_V_RESET = 1'h0;
localparam LDB_QID_CFG_V_FID_CFG_V_LO = 1;
localparam LDB_QID_CFG_V_FID_CFG_V_HI = 1;
localparam LDB_QID_CFG_V_FID_CFG_V_RESET = 1'h0;
localparam LDB_QID_CFG_V_SN_CFG_V_LO = 0;
localparam LDB_QID_CFG_V_SN_CFG_V_HI = 0;
localparam LDB_QID_CFG_V_SN_CFG_V_RESET = 1'h0;
localparam LDB_QID_CFG_V_USEMASK = 32'h7;
localparam LDB_QID_CFG_V_RO_MASK = 32'h0;
localparam LDB_QID_CFG_V_WO_MASK = 32'h0;
localparam LDB_QID_CFG_V_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] QID_V;  // RW
} DIR_QID_V_t;

localparam DIR_QID_V_REG_STRIDE = 48'h4;
localparam DIR_QID_V_REG_ENTRIES = 1;
localparam HQM_SYSTEM_DIR_QID_CFG_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_DIR_QID_CFG_REGFILE_ENTRIES = 64;
localparam DIR_QID_V_CR_ADDR = 48'hF60;
localparam DIR_QID_V_SIZE = 32;
localparam DIR_QID_V_QID_V_LO = 0;
localparam DIR_QID_V_QID_V_HI = 0;
localparam DIR_QID_V_QID_V_RESET = 1'h0;
localparam DIR_QID_V_USEMASK = 32'h1;
localparam DIR_QID_V_RO_MASK = 32'h0;
localparam DIR_QID_V_WO_MASK = 32'h0;
localparam DIR_QID_V_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] QID_ITS;  // RW
} DIR_QID_ITS_t;

localparam DIR_QID_ITS_REG_STRIDE = 48'h4;
localparam DIR_QID_ITS_REG_ENTRIES = 1;
localparam DIR_QID_ITS_CR_ADDR = 48'hF64;
localparam DIR_QID_ITS_SIZE = 32;
localparam DIR_QID_ITS_QID_ITS_LO = 0;
localparam DIR_QID_ITS_QID_ITS_HI = 0;
localparam DIR_QID_ITS_QID_ITS_RESET = 1'h0;
localparam DIR_QID_ITS_USEMASK = 32'h1;
localparam DIR_QID_ITS_RO_MASK = 32'h0;
localparam DIR_QID_ITS_WO_MASK = 32'h0;
localparam DIR_QID_ITS_RESET = 32'h0;

typedef struct packed {
    logic [25:0] ADDR_L;  // RW
    logic  [5:0] reserved0;  // RSVD
} LDB_CQ_ADDR_L_t;

localparam LDB_CQ_ADDR_L_REG_STRIDE = 48'h4;
localparam LDB_CQ_ADDR_L_REG_ENTRIES = 1;
localparam HQM_SYSTEM_LDB_PORT_PROVISIONING_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_LDB_PORT_PROVISIONING_REGFILE_ENTRIES = 64;
localparam LDB_CQ_ADDR_L_CR_ADDR = 48'hF80;
localparam LDB_CQ_ADDR_L_SIZE = 32;
localparam LDB_CQ_ADDR_L_ADDR_L_LO = 6;
localparam LDB_CQ_ADDR_L_ADDR_L_HI = 31;
localparam LDB_CQ_ADDR_L_ADDR_L_RESET = 26'h0;
localparam LDB_CQ_ADDR_L_USEMASK = 32'hFFFFFFC0;
localparam LDB_CQ_ADDR_L_RO_MASK = 32'h0;
localparam LDB_CQ_ADDR_L_WO_MASK = 32'h0;
localparam LDB_CQ_ADDR_L_RESET = 32'h0;

typedef struct packed {
    logic [31:0] ADDR_U;  // RW
} LDB_CQ_ADDR_U_t;

localparam LDB_CQ_ADDR_U_REG_STRIDE = 48'h4;
localparam LDB_CQ_ADDR_U_REG_ENTRIES = 1;
localparam LDB_CQ_ADDR_U_CR_ADDR = 48'hF84;
localparam LDB_CQ_ADDR_U_SIZE = 32;
localparam LDB_CQ_ADDR_U_ADDR_U_LO = 0;
localparam LDB_CQ_ADDR_U_ADDR_U_HI = 31;
localparam LDB_CQ_ADDR_U_ADDR_U_RESET = 32'h0;
localparam LDB_CQ_ADDR_U_USEMASK = 32'hFFFFFFFF;
localparam LDB_CQ_ADDR_U_RO_MASK = 32'h0;
localparam LDB_CQ_ADDR_U_WO_MASK = 32'h0;
localparam LDB_CQ_ADDR_U_RESET = 32'h0;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [4:0] VAS;  // RW
} LDB_PP2VAS_t;

localparam LDB_PP2VAS_REG_STRIDE = 48'h4;
localparam LDB_PP2VAS_REG_ENTRIES = 1;
localparam LDB_PP2VAS_CR_ADDR = 48'hF88;
localparam LDB_PP2VAS_SIZE = 32;
localparam LDB_PP2VAS_VAS_LO = 0;
localparam LDB_PP2VAS_VAS_HI = 4;
localparam LDB_PP2VAS_VAS_RESET = 5'h0;
localparam LDB_PP2VAS_USEMASK = 32'h1F;
localparam LDB_PP2VAS_RO_MASK = 32'h0;
localparam LDB_PP2VAS_WO_MASK = 32'h0;
localparam LDB_PP2VAS_RESET = 32'h0;

typedef struct packed {
    logic [27:0] reserved0;  // RSVD
    logic  [3:0] VDEV;  // RW
} HQM_LDB_PP2VDEV_t;

localparam HQM_LDB_PP2VDEV_REG_STRIDE = 48'h4;
localparam HQM_LDB_PP2VDEV_REG_ENTRIES = 1;
localparam [63:0][47:0] HQM_LDB_PP2VDEV_CR_ADDR = {48'h3FF8C, 48'h3EF8C, 48'h3DF8C, 48'h3CF8C, 48'h3BF8C, 48'h3AF8C, 48'h39F8C, 48'h38F8C, 48'h37F8C, 48'h36F8C, 48'h35F8C, 48'h34F8C, 48'h33F8C, 48'h32F8C, 48'h31F8C, 48'h30F8C, 48'h2FF8C, 48'h2EF8C, 48'h2DF8C, 48'h2CF8C, 48'h2BF8C, 48'h2AF8C, 48'h29F8C, 48'h28F8C, 48'h27F8C, 48'h26F8C, 48'h25F8C, 48'h24F8C, 48'h23F8C, 48'h22F8C, 48'h21F8C, 48'h20F8C, 48'h1FF8C, 48'h1EF8C, 48'h1DF8C, 48'h1CF8C, 48'h1BF8C, 48'h1AF8C, 48'h19F8C, 48'h18F8C, 48'h17F8C, 48'h16F8C, 48'h15F8C, 48'h14F8C, 48'h13F8C, 48'h12F8C, 48'h11F8C, 48'h10F8C, 48'hFF8C, 48'hEF8C, 48'hDF8C, 48'hCF8C, 48'hBF8C, 48'hAF8C, 48'h9F8C, 48'h8F8C, 48'h7F8C, 48'h6F8C, 48'h5F8C, 48'h4F8C, 48'h3F8C, 48'h2F8C, 48'h1F8C, 48'hF8C};
localparam HQM_LDB_PP2VDEV_SIZE = 32;
localparam HQM_LDB_PP2VDEV_VDEV_LO = 0;
localparam HQM_LDB_PP2VDEV_VDEV_HI = 3;
localparam HQM_LDB_PP2VDEV_VDEV_RESET = 4'h0;
localparam HQM_LDB_PP2VDEV_USEMASK = 32'hF;
localparam HQM_LDB_PP2VDEV_RO_MASK = 32'h0;
localparam HQM_LDB_PP2VDEV_WO_MASK = 32'h0;
localparam HQM_LDB_PP2VDEV_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] PP_V;  // RW
} LDB_PP_V_t;

localparam LDB_PP_V_REG_STRIDE = 48'h4;
localparam LDB_PP_V_REG_ENTRIES = 1;
localparam LDB_PP_V_CR_ADDR = 48'hF90;
localparam LDB_PP_V_SIZE = 32;
localparam LDB_PP_V_PP_V_LO = 0;
localparam LDB_PP_V_PP_V_HI = 0;
localparam LDB_PP_V_PP_V_RESET = 1'h0;
localparam LDB_PP_V_USEMASK = 32'h1;
localparam LDB_PP_V_RO_MASK = 32'h0;
localparam LDB_PP_V_WO_MASK = 32'h0;
localparam LDB_PP_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [0:0] RO;  // RW
    logic  [0:0] IS_PF;  // RW
    logic  [3:0] VF;  // RW
} LDB_CQ2VF_PF_RO_t;

localparam LDB_CQ2VF_PF_RO_REG_STRIDE = 48'h4;
localparam LDB_CQ2VF_PF_RO_REG_ENTRIES = 1;
localparam LDB_CQ2VF_PF_RO_CR_ADDR = 48'hF94;
localparam LDB_CQ2VF_PF_RO_SIZE = 32;
localparam LDB_CQ2VF_PF_RO_RO_LO = 5;
localparam LDB_CQ2VF_PF_RO_RO_HI = 5;
localparam LDB_CQ2VF_PF_RO_RO_RESET = 1'h0;
localparam LDB_CQ2VF_PF_RO_IS_PF_LO = 4;
localparam LDB_CQ2VF_PF_RO_IS_PF_HI = 4;
localparam LDB_CQ2VF_PF_RO_IS_PF_RESET = 1'h0;
localparam LDB_CQ2VF_PF_RO_VF_LO = 0;
localparam LDB_CQ2VF_PF_RO_VF_HI = 3;
localparam LDB_CQ2VF_PF_RO_VF_RESET = 4'h0;
localparam LDB_CQ2VF_PF_RO_USEMASK = 32'h3F;
localparam LDB_CQ2VF_PF_RO_RO_MASK = 32'h0;
localparam LDB_CQ2VF_PF_RO_WO_MASK = 32'h0;
localparam LDB_CQ2VF_PF_RO_RESET = 32'h0;

typedef struct packed {
    logic [19:0] reserved0;  // RSVD
    logic  [1:0] EN_CODE;  // RW
    logic  [3:0] VF;  // RW
    logic  [5:0] VECTOR;  // RW
} LDB_CQ_ISR_t;

localparam LDB_CQ_ISR_REG_STRIDE = 48'h4;
localparam LDB_CQ_ISR_REG_ENTRIES = 1;
localparam LDB_CQ_ISR_CR_ADDR = 48'hF98;
localparam LDB_CQ_ISR_SIZE = 32;
localparam LDB_CQ_ISR_EN_CODE_LO = 10;
localparam LDB_CQ_ISR_EN_CODE_HI = 11;
localparam LDB_CQ_ISR_EN_CODE_RESET = 2'h0;
localparam LDB_CQ_ISR_VF_LO = 6;
localparam LDB_CQ_ISR_VF_HI = 9;
localparam LDB_CQ_ISR_VF_RESET = 4'h0;
localparam LDB_CQ_ISR_VECTOR_LO = 0;
localparam LDB_CQ_ISR_VECTOR_HI = 5;
localparam LDB_CQ_ISR_VECTOR_RESET = 6'h0;
localparam LDB_CQ_ISR_USEMASK = 32'hFFF;
localparam LDB_CQ_ISR_RO_MASK = 32'h0;
localparam LDB_CQ_ISR_WO_MASK = 32'h0;
localparam LDB_CQ_ISR_RESET = 32'h0;

typedef struct packed {
    logic  [8:0] reserved0;  // RSVD
    logic  [0:0] FMT2;  // RW
    logic  [0:0] PRIV_REQ;  // RO
    logic  [0:0] EXE_REQ;  // RO
    logic [19:0] PASID;  // RW
} LDB_CQ_PASID_t;

localparam LDB_CQ_PASID_REG_STRIDE = 48'h4;
localparam LDB_CQ_PASID_REG_ENTRIES = 1;
localparam LDB_CQ_PASID_CR_ADDR = 48'hF9C;
localparam LDB_CQ_PASID_SIZE = 32;
localparam LDB_CQ_PASID_FMT2_LO = 22;
localparam LDB_CQ_PASID_FMT2_HI = 22;
localparam LDB_CQ_PASID_FMT2_RESET = 1'h0;
localparam LDB_CQ_PASID_PRIV_REQ_LO = 21;
localparam LDB_CQ_PASID_PRIV_REQ_HI = 21;
localparam LDB_CQ_PASID_PRIV_REQ_RESET = 1'h0;
localparam LDB_CQ_PASID_EXE_REQ_LO = 20;
localparam LDB_CQ_PASID_EXE_REQ_HI = 20;
localparam LDB_CQ_PASID_EXE_REQ_RESET = 1'h0;
localparam LDB_CQ_PASID_PASID_LO = 0;
localparam LDB_CQ_PASID_PASID_HI = 19;
localparam LDB_CQ_PASID_PASID_RESET = 20'h0;
localparam LDB_CQ_PASID_USEMASK = 32'h7FFFFF;
localparam LDB_CQ_PASID_RO_MASK = 32'h300000;
localparam LDB_CQ_PASID_WO_MASK = 32'h0;
localparam LDB_CQ_PASID_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] ROB_V;  // RW
} LDB_PP_ROB_V_t;

localparam LDB_PP_ROB_V_REG_STRIDE = 48'h4;
localparam LDB_PP_ROB_V_REG_ENTRIES = 1;
localparam [63:0][47:0] LDB_PP_ROB_V_CR_ADDR = {48'h3FFA0, 48'h3EFA0, 48'h3DFA0, 48'h3CFA0, 48'h3BFA0, 48'h3AFA0, 48'h39FA0, 48'h38FA0, 48'h37FA0, 48'h36FA0, 48'h35FA0, 48'h34FA0, 48'h33FA0, 48'h32FA0, 48'h31FA0, 48'h30FA0, 48'h2FFA0, 48'h2EFA0, 48'h2DFA0, 48'h2CFA0, 48'h2BFA0, 48'h2AFA0, 48'h29FA0, 48'h28FA0, 48'h27FA0, 48'h26FA0, 48'h25FA0, 48'h24FA0, 48'h23FA0, 48'h22FA0, 48'h21FA0, 48'h20FA0, 48'h1FFA0, 48'h1EFA0, 48'h1DFA0, 48'h1CFA0, 48'h1BFA0, 48'h1AFA0, 48'h19FA0, 48'h18FA0, 48'h17FA0, 48'h16FA0, 48'h15FA0, 48'h14FA0, 48'h13FA0, 48'h12FA0, 48'h11FA0, 48'h10FA0, 48'hFFA0, 48'hEFA0, 48'hDFA0, 48'hCFA0, 48'hBFA0, 48'hAFA0, 48'h9FA0, 48'h8FA0, 48'h7FA0, 48'h6FA0, 48'h5FA0, 48'h4FA0, 48'h3FA0, 48'h2FA0, 48'h1FA0, 48'hFA0};
localparam LDB_PP_ROB_V_SIZE = 32;
localparam LDB_PP_ROB_V_ROB_V_LO = 0;
localparam LDB_PP_ROB_V_ROB_V_HI = 0;
localparam LDB_PP_ROB_V_ROB_V_RESET = 1'h0;
localparam LDB_PP_ROB_V_USEMASK = 32'h1;
localparam LDB_PP_ROB_V_RO_MASK = 32'h0;
localparam LDB_PP_ROB_V_WO_MASK = 32'h0;
localparam LDB_PP_ROB_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] ADDR_L;  // RW
    logic  [5:0] reserved0;  // RSVD
} DIR_CQ_ADDR_L_t;

localparam DIR_CQ_ADDR_L_REG_STRIDE = 48'h4;
localparam DIR_CQ_ADDR_L_REG_ENTRIES = 1;
localparam HQM_SYSTEM_DIR_PORT_PROVISIONING_REGFILE_STRIDE = 48'h1000;
localparam HQM_SYSTEM_DIR_PORT_PROVISIONING_REGFILE_ENTRIES = 64;
localparam DIR_CQ_ADDR_L_CR_ADDR = 48'hFC0;
localparam DIR_CQ_ADDR_L_SIZE = 32;
localparam DIR_CQ_ADDR_L_ADDR_L_LO = 6;
localparam DIR_CQ_ADDR_L_ADDR_L_HI = 31;
localparam DIR_CQ_ADDR_L_ADDR_L_RESET = 26'h0;
localparam DIR_CQ_ADDR_L_USEMASK = 32'hFFFFFFC0;
localparam DIR_CQ_ADDR_L_RO_MASK = 32'h0;
localparam DIR_CQ_ADDR_L_WO_MASK = 32'h0;
localparam DIR_CQ_ADDR_L_RESET = 32'h0;

typedef struct packed {
    logic [31:0] ADDR_U;  // RW
} DIR_CQ_ADDR_U_t;

localparam DIR_CQ_ADDR_U_REG_STRIDE = 48'h4;
localparam DIR_CQ_ADDR_U_REG_ENTRIES = 1;
localparam DIR_CQ_ADDR_U_CR_ADDR = 48'hFC4;
localparam DIR_CQ_ADDR_U_SIZE = 32;
localparam DIR_CQ_ADDR_U_ADDR_U_LO = 0;
localparam DIR_CQ_ADDR_U_ADDR_U_HI = 31;
localparam DIR_CQ_ADDR_U_ADDR_U_RESET = 32'h0;
localparam DIR_CQ_ADDR_U_USEMASK = 32'hFFFFFFFF;
localparam DIR_CQ_ADDR_U_RO_MASK = 32'h0;
localparam DIR_CQ_ADDR_U_WO_MASK = 32'h0;
localparam DIR_CQ_ADDR_U_RESET = 32'h0;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [4:0] VAS;  // RW
} DIR_PP2VAS_t;

localparam DIR_PP2VAS_REG_STRIDE = 48'h4;
localparam DIR_PP2VAS_REG_ENTRIES = 1;
localparam DIR_PP2VAS_CR_ADDR = 48'hFC8;
localparam DIR_PP2VAS_SIZE = 32;
localparam DIR_PP2VAS_VAS_LO = 0;
localparam DIR_PP2VAS_VAS_HI = 4;
localparam DIR_PP2VAS_VAS_RESET = 5'h0;
localparam DIR_PP2VAS_USEMASK = 32'h1F;
localparam DIR_PP2VAS_RO_MASK = 32'h0;
localparam DIR_PP2VAS_WO_MASK = 32'h0;
localparam DIR_PP2VAS_RESET = 32'h0;

typedef struct packed {
    logic [27:0] reserved0;  // RSVD
    logic  [3:0] VDEV;  // RW
} HQM_DIR_PP2VDEV_t;

localparam HQM_DIR_PP2VDEV_REG_STRIDE = 48'h4;
localparam HQM_DIR_PP2VDEV_REG_ENTRIES = 1;
localparam [63:0][47:0] HQM_DIR_PP2VDEV_CR_ADDR = {48'h3FFCC, 48'h3EFCC, 48'h3DFCC, 48'h3CFCC, 48'h3BFCC, 48'h3AFCC, 48'h39FCC, 48'h38FCC, 48'h37FCC, 48'h36FCC, 48'h35FCC, 48'h34FCC, 48'h33FCC, 48'h32FCC, 48'h31FCC, 48'h30FCC, 48'h2FFCC, 48'h2EFCC, 48'h2DFCC, 48'h2CFCC, 48'h2BFCC, 48'h2AFCC, 48'h29FCC, 48'h28FCC, 48'h27FCC, 48'h26FCC, 48'h25FCC, 48'h24FCC, 48'h23FCC, 48'h22FCC, 48'h21FCC, 48'h20FCC, 48'h1FFCC, 48'h1EFCC, 48'h1DFCC, 48'h1CFCC, 48'h1BFCC, 48'h1AFCC, 48'h19FCC, 48'h18FCC, 48'h17FCC, 48'h16FCC, 48'h15FCC, 48'h14FCC, 48'h13FCC, 48'h12FCC, 48'h11FCC, 48'h10FCC, 48'hFFCC, 48'hEFCC, 48'hDFCC, 48'hCFCC, 48'hBFCC, 48'hAFCC, 48'h9FCC, 48'h8FCC, 48'h7FCC, 48'h6FCC, 48'h5FCC, 48'h4FCC, 48'h3FCC, 48'h2FCC, 48'h1FCC, 48'hFCC};
localparam HQM_DIR_PP2VDEV_SIZE = 32;
localparam HQM_DIR_PP2VDEV_VDEV_LO = 0;
localparam HQM_DIR_PP2VDEV_VDEV_HI = 3;
localparam HQM_DIR_PP2VDEV_VDEV_RESET = 4'h0;
localparam HQM_DIR_PP2VDEV_USEMASK = 32'hF;
localparam HQM_DIR_PP2VDEV_RO_MASK = 32'h0;
localparam HQM_DIR_PP2VDEV_WO_MASK = 32'h0;
localparam HQM_DIR_PP2VDEV_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] PP_V;  // RW
} DIR_PP_V_t;

localparam DIR_PP_V_REG_STRIDE = 48'h4;
localparam DIR_PP_V_REG_ENTRIES = 1;
localparam DIR_PP_V_CR_ADDR = 48'hFD0;
localparam DIR_PP_V_SIZE = 32;
localparam DIR_PP_V_PP_V_LO = 0;
localparam DIR_PP_V_PP_V_HI = 0;
localparam DIR_PP_V_PP_V_RESET = 1'h0;
localparam DIR_PP_V_USEMASK = 32'h1;
localparam DIR_PP_V_RO_MASK = 32'h0;
localparam DIR_PP_V_WO_MASK = 32'h0;
localparam DIR_PP_V_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [0:0] RO;  // RW
    logic  [0:0] IS_PF;  // RW
    logic  [3:0] VF;  // RW
} DIR_CQ2VF_PF_RO_t;

localparam DIR_CQ2VF_PF_RO_REG_STRIDE = 48'h4;
localparam DIR_CQ2VF_PF_RO_REG_ENTRIES = 1;
localparam DIR_CQ2VF_PF_RO_CR_ADDR = 48'hFD4;
localparam DIR_CQ2VF_PF_RO_SIZE = 32;
localparam DIR_CQ2VF_PF_RO_RO_LO = 5;
localparam DIR_CQ2VF_PF_RO_RO_HI = 5;
localparam DIR_CQ2VF_PF_RO_RO_RESET = 1'h0;
localparam DIR_CQ2VF_PF_RO_IS_PF_LO = 4;
localparam DIR_CQ2VF_PF_RO_IS_PF_HI = 4;
localparam DIR_CQ2VF_PF_RO_IS_PF_RESET = 1'h0;
localparam DIR_CQ2VF_PF_RO_VF_LO = 0;
localparam DIR_CQ2VF_PF_RO_VF_HI = 3;
localparam DIR_CQ2VF_PF_RO_VF_RESET = 4'h0;
localparam DIR_CQ2VF_PF_RO_USEMASK = 32'h3F;
localparam DIR_CQ2VF_PF_RO_RO_MASK = 32'h0;
localparam DIR_CQ2VF_PF_RO_WO_MASK = 32'h0;
localparam DIR_CQ2VF_PF_RO_RESET = 32'h0;

typedef struct packed {
    logic [19:0] reserved0;  // RSVD
    logic  [1:0] EN_CODE;  // RW
    logic  [3:0] VF;  // RW
    logic  [5:0] VECTOR;  // RW
} DIR_CQ_ISR_t;

localparam DIR_CQ_ISR_REG_STRIDE = 48'h4;
localparam DIR_CQ_ISR_REG_ENTRIES = 1;
localparam DIR_CQ_ISR_CR_ADDR = 48'hFD8;
localparam DIR_CQ_ISR_SIZE = 32;
localparam DIR_CQ_ISR_EN_CODE_LO = 10;
localparam DIR_CQ_ISR_EN_CODE_HI = 11;
localparam DIR_CQ_ISR_EN_CODE_RESET = 2'h0;
localparam DIR_CQ_ISR_VF_LO = 6;
localparam DIR_CQ_ISR_VF_HI = 9;
localparam DIR_CQ_ISR_VF_RESET = 4'h0;
localparam DIR_CQ_ISR_VECTOR_LO = 0;
localparam DIR_CQ_ISR_VECTOR_HI = 5;
localparam DIR_CQ_ISR_VECTOR_RESET = 6'h0;
localparam DIR_CQ_ISR_USEMASK = 32'hFFF;
localparam DIR_CQ_ISR_RO_MASK = 32'h0;
localparam DIR_CQ_ISR_WO_MASK = 32'h0;
localparam DIR_CQ_ISR_RESET = 32'h0;

typedef struct packed {
    logic  [8:0] reserved0;  // RSVD
    logic  [0:0] FMT2;  // RW
    logic  [0:0] PRIV_REQ;  // RO
    logic  [0:0] EXE_REQ;  // RO
    logic [19:0] PASID;  // RW
} DIR_CQ_PASID_t;

localparam DIR_CQ_PASID_REG_STRIDE = 48'h4;
localparam DIR_CQ_PASID_REG_ENTRIES = 1;
localparam DIR_CQ_PASID_CR_ADDR = 48'hFDC;
localparam DIR_CQ_PASID_SIZE = 32;
localparam DIR_CQ_PASID_FMT2_LO = 22;
localparam DIR_CQ_PASID_FMT2_HI = 22;
localparam DIR_CQ_PASID_FMT2_RESET = 1'h0;
localparam DIR_CQ_PASID_PRIV_REQ_LO = 21;
localparam DIR_CQ_PASID_PRIV_REQ_HI = 21;
localparam DIR_CQ_PASID_PRIV_REQ_RESET = 1'h0;
localparam DIR_CQ_PASID_EXE_REQ_LO = 20;
localparam DIR_CQ_PASID_EXE_REQ_HI = 20;
localparam DIR_CQ_PASID_EXE_REQ_RESET = 1'h0;
localparam DIR_CQ_PASID_PASID_LO = 0;
localparam DIR_CQ_PASID_PASID_HI = 19;
localparam DIR_CQ_PASID_PASID_RESET = 20'h0;
localparam DIR_CQ_PASID_USEMASK = 32'h7FFFFF;
localparam DIR_CQ_PASID_RO_MASK = 32'h300000;
localparam DIR_CQ_PASID_WO_MASK = 32'h0;
localparam DIR_CQ_PASID_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] KEEP_PF_PPID;  // RW
} DIR_CQ_FMT_t;

localparam DIR_CQ_FMT_REG_STRIDE = 48'h4;
localparam DIR_CQ_FMT_REG_ENTRIES = 1;
localparam DIR_CQ_FMT_CR_ADDR = 48'hFE0;
localparam DIR_CQ_FMT_SIZE = 32;
localparam DIR_CQ_FMT_KEEP_PF_PPID_LO = 0;
localparam DIR_CQ_FMT_KEEP_PF_PPID_HI = 0;
localparam DIR_CQ_FMT_KEEP_PF_PPID_RESET = 1'h0;
localparam DIR_CQ_FMT_USEMASK = 32'h1;
localparam DIR_CQ_FMT_RO_MASK = 32'h0;
localparam DIR_CQ_FMT_WO_MASK = 32'h0;
localparam DIR_CQ_FMT_RESET = 32'h0;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] ROB_V;  // RW
} DIR_PP_ROB_V_t;

localparam DIR_PP_ROB_V_REG_STRIDE = 48'h4;
localparam DIR_PP_ROB_V_REG_ENTRIES = 1;
localparam [63:0][47:0] DIR_PP_ROB_V_CR_ADDR = {48'h3FFE4, 48'h3EFE4, 48'h3DFE4, 48'h3CFE4, 48'h3BFE4, 48'h3AFE4, 48'h39FE4, 48'h38FE4, 48'h37FE4, 48'h36FE4, 48'h35FE4, 48'h34FE4, 48'h33FE4, 48'h32FE4, 48'h31FE4, 48'h30FE4, 48'h2FFE4, 48'h2EFE4, 48'h2DFE4, 48'h2CFE4, 48'h2BFE4, 48'h2AFE4, 48'h29FE4, 48'h28FE4, 48'h27FE4, 48'h26FE4, 48'h25FE4, 48'h24FE4, 48'h23FE4, 48'h22FE4, 48'h21FE4, 48'h20FE4, 48'h1FFE4, 48'h1EFE4, 48'h1DFE4, 48'h1CFE4, 48'h1BFE4, 48'h1AFE4, 48'h19FE4, 48'h18FE4, 48'h17FE4, 48'h16FE4, 48'h15FE4, 48'h14FE4, 48'h13FE4, 48'h12FE4, 48'h11FE4, 48'h10FE4, 48'hFFE4, 48'hEFE4, 48'hDFE4, 48'hCFE4, 48'hBFE4, 48'hAFE4, 48'h9FE4, 48'h8FE4, 48'h7FE4, 48'h6FE4, 48'h5FE4, 48'h4FE4, 48'h3FE4, 48'h2FE4, 48'h1FE4, 48'hFE4};
localparam DIR_PP_ROB_V_SIZE = 32;
localparam DIR_PP_ROB_V_ROB_V_LO = 0;
localparam DIR_PP_ROB_V_ROB_V_HI = 0;
localparam DIR_PP_ROB_V_ROB_V_RESET = 1'h0;
localparam DIR_PP_ROB_V_USEMASK = 32'h1;
localparam DIR_PP_ROB_V_RO_MASK = 32'h0;
localparam DIR_PP_ROB_V_WO_MASK = 32'h0;
localparam DIR_PP_ROB_V_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_0_t;

localparam HQM_SYSTEM_CNT_0_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_0_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_0_CR_ADDR = 48'h1000;
localparam HQM_SYSTEM_CNT_0_SIZE = 32;
localparam HQM_SYSTEM_CNT_0_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_0_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_0_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_0_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_0_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_0_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_1_t;

localparam HQM_SYSTEM_CNT_1_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_1_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_1_CR_ADDR = 48'h1004;
localparam HQM_SYSTEM_CNT_1_SIZE = 32;
localparam HQM_SYSTEM_CNT_1_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_1_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_1_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_1_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_1_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_1_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_2_t;

localparam HQM_SYSTEM_CNT_2_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_2_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_2_CR_ADDR = 48'h1008;
localparam HQM_SYSTEM_CNT_2_SIZE = 32;
localparam HQM_SYSTEM_CNT_2_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_2_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_2_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_2_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_2_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_2_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_2_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_3_t;

localparam HQM_SYSTEM_CNT_3_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_3_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_3_CR_ADDR = 48'h100C;
localparam HQM_SYSTEM_CNT_3_SIZE = 32;
localparam HQM_SYSTEM_CNT_3_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_3_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_3_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_3_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_3_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_3_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_3_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_4_t;

localparam HQM_SYSTEM_CNT_4_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_4_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_4_CR_ADDR = 48'h1010;
localparam HQM_SYSTEM_CNT_4_SIZE = 32;
localparam HQM_SYSTEM_CNT_4_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_4_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_4_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_4_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_4_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_4_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_4_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_5_t;

localparam HQM_SYSTEM_CNT_5_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_5_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_5_CR_ADDR = 48'h1014;
localparam HQM_SYSTEM_CNT_5_SIZE = 32;
localparam HQM_SYSTEM_CNT_5_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_5_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_5_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_5_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_5_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_5_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_5_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_6_t;

localparam HQM_SYSTEM_CNT_6_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_6_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_6_CR_ADDR = 48'h1018;
localparam HQM_SYSTEM_CNT_6_SIZE = 32;
localparam HQM_SYSTEM_CNT_6_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_6_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_6_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_6_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_6_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_6_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_6_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_7_t;

localparam HQM_SYSTEM_CNT_7_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_7_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_7_CR_ADDR = 48'h101C;
localparam HQM_SYSTEM_CNT_7_SIZE = 32;
localparam HQM_SYSTEM_CNT_7_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_7_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_7_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_7_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_7_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_7_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_7_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_8_t;

localparam HQM_SYSTEM_CNT_8_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_8_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_8_CR_ADDR = 48'h1020;
localparam HQM_SYSTEM_CNT_8_SIZE = 32;
localparam HQM_SYSTEM_CNT_8_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_8_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_8_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_8_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_8_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_8_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_8_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_9_t;

localparam HQM_SYSTEM_CNT_9_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_9_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_9_CR_ADDR = 48'h1024;
localparam HQM_SYSTEM_CNT_9_SIZE = 32;
localparam HQM_SYSTEM_CNT_9_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_9_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_9_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_9_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_9_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_9_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_9_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_10_t;

localparam HQM_SYSTEM_CNT_10_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_10_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_10_CR_ADDR = 48'h1028;
localparam HQM_SYSTEM_CNT_10_SIZE = 32;
localparam HQM_SYSTEM_CNT_10_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_10_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_10_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_10_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_10_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_10_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_10_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_11_t;

localparam HQM_SYSTEM_CNT_11_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_11_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_11_CR_ADDR = 48'h102C;
localparam HQM_SYSTEM_CNT_11_SIZE = 32;
localparam HQM_SYSTEM_CNT_11_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_11_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_11_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_11_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_11_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_11_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_11_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_12_t;

localparam HQM_SYSTEM_CNT_12_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_12_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_12_CR_ADDR = 48'h1030;
localparam HQM_SYSTEM_CNT_12_SIZE = 32;
localparam HQM_SYSTEM_CNT_12_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_12_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_12_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_12_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_12_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_12_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_12_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_13_t;

localparam HQM_SYSTEM_CNT_13_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_13_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_13_CR_ADDR = 48'h1034;
localparam HQM_SYSTEM_CNT_13_SIZE = 32;
localparam HQM_SYSTEM_CNT_13_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_13_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_13_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_13_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_13_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_13_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_13_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_14_t;

localparam HQM_SYSTEM_CNT_14_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_14_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_14_CR_ADDR = 48'h1038;
localparam HQM_SYSTEM_CNT_14_SIZE = 32;
localparam HQM_SYSTEM_CNT_14_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_14_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_14_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_14_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_14_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_14_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_14_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_15_t;

localparam HQM_SYSTEM_CNT_15_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_15_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_15_CR_ADDR = 48'h103C;
localparam HQM_SYSTEM_CNT_15_SIZE = 32;
localparam HQM_SYSTEM_CNT_15_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_15_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_15_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_15_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_15_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_15_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_15_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_16_t;

localparam HQM_SYSTEM_CNT_16_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_16_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_16_CR_ADDR = 48'h1040;
localparam HQM_SYSTEM_CNT_16_SIZE = 32;
localparam HQM_SYSTEM_CNT_16_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_16_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_16_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_16_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_16_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_16_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_16_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_17_t;

localparam HQM_SYSTEM_CNT_17_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_17_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_17_CR_ADDR = 48'h1044;
localparam HQM_SYSTEM_CNT_17_SIZE = 32;
localparam HQM_SYSTEM_CNT_17_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_17_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_17_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_17_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_17_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_17_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_17_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_18_t;

localparam HQM_SYSTEM_CNT_18_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_18_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_18_CR_ADDR = 48'h1048;
localparam HQM_SYSTEM_CNT_18_SIZE = 32;
localparam HQM_SYSTEM_CNT_18_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_18_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_18_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_18_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_18_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_18_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_18_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_19_t;

localparam HQM_SYSTEM_CNT_19_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_19_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_19_CR_ADDR = 48'h104C;
localparam HQM_SYSTEM_CNT_19_SIZE = 32;
localparam HQM_SYSTEM_CNT_19_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_19_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_19_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_19_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_19_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_19_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_19_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_20_t;

localparam HQM_SYSTEM_CNT_20_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_20_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_20_CR_ADDR = 48'h1050;
localparam HQM_SYSTEM_CNT_20_SIZE = 32;
localparam HQM_SYSTEM_CNT_20_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_20_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_20_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_20_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_20_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_20_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_20_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} HQM_SYSTEM_CNT_21_t;

localparam HQM_SYSTEM_CNT_21_REG_STRIDE = 48'h4;
localparam HQM_SYSTEM_CNT_21_REG_ENTRIES = 1;
localparam [47:0] HQM_SYSTEM_CNT_21_CR_ADDR = 48'h1054;
localparam HQM_SYSTEM_CNT_21_SIZE = 32;
localparam HQM_SYSTEM_CNT_21_CNT_LO = 0;
localparam HQM_SYSTEM_CNT_21_CNT_HI = 31;
localparam HQM_SYSTEM_CNT_21_CNT_RESET = 32'h0;
localparam HQM_SYSTEM_CNT_21_USEMASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_21_RO_MASK = 32'hFFFFFFFF;
localparam HQM_SYSTEM_CNT_21_WO_MASK = 32'h0;
localparam HQM_SYSTEM_CNT_21_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RW/V
} SBE_CNT_0_t;

localparam SBE_CNT_0_REG_STRIDE = 48'h4;
localparam SBE_CNT_0_REG_ENTRIES = 1;
localparam SBE_CNT_0_CR_ADDR = 48'h2000;
localparam SBE_CNT_0_SIZE = 32;
localparam SBE_CNT_0_CNT_LO = 0;
localparam SBE_CNT_0_CNT_HI = 31;
localparam SBE_CNT_0_CNT_RESET = 32'h0;
localparam SBE_CNT_0_USEMASK = 32'hFFFFFFFF;
localparam SBE_CNT_0_RO_MASK = 32'h0;
localparam SBE_CNT_0_WO_MASK = 32'h0;
localparam SBE_CNT_0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] CNT;  // RW/V
} SBE_CNT_1_t;

localparam SBE_CNT_1_REG_STRIDE = 48'h4;
localparam SBE_CNT_1_REG_ENTRIES = 1;
localparam SBE_CNT_1_CR_ADDR = 48'h2004;
localparam SBE_CNT_1_SIZE = 32;
localparam SBE_CNT_1_CNT_LO = 0;
localparam SBE_CNT_1_CNT_HI = 31;
localparam SBE_CNT_1_CNT_RESET = 32'h0;
localparam SBE_CNT_1_USEMASK = 32'hFFFFFFFF;
localparam SBE_CNT_1_RO_MASK = 32'h0;
localparam SBE_CNT_1_WO_MASK = 32'h0;
localparam SBE_CNT_1_RESET = 32'h0;

typedef struct packed {
    logic  [1:0] VERSION;  // RO
    logic  [0:0] reserved0;  // RSVD
    logic  [4:0] TIMER_PRESCALE;  // RW
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] STATTIMEROVFL;  // RW
    logic  [0:0] INTTIMEROVFL;  // RW
    logic  [0:0] STOPTIMEROVFL;  // RW
    logic  [0:0] STATCOUNTER1OVFL;  // RW
    logic  [0:0] STATCOUNTER0OVFL;  // RW
    logic  [0:0] INTCOUNTEROVFL;  // RW
    logic  [0:0] STOPCOUNTEROVFL;  // RW
    logic  [3:0] SMON_MODE;  // RW
    logic  [0:0] SMON1_FUNCTION_COMPARE;  // RW
    logic  [2:0] SMON1_FUNCTION;  // RW
    logic  [0:0] SMON0_FUNCTION_COMPARE;  // RW
    logic  [2:0] SMON0_FUNCTION;  // RW
    logic  [2:0] reserved2;  // RSVD
    logic  [0:0] SMON_ENABLE;  // RW
} PERF_SMON_CONFIGURATION0_t;

localparam PERF_SMON_CONFIGURATION0_REG_STRIDE = 48'h4;
localparam PERF_SMON_CONFIGURATION0_REG_ENTRIES = 1;
localparam CFG_SYS_PERF_SMON_REGFILE_STRIDE = 48'h40;
localparam CFG_SYS_PERF_SMON_REGFILE_ENTRIES = 1;
localparam PERF_SMON_CONFIGURATION0_CR_ADDR = 48'h3000;
localparam PERF_SMON_CONFIGURATION0_SIZE = 32;
localparam PERF_SMON_CONFIGURATION0_VERSION_LO = 30;
localparam PERF_SMON_CONFIGURATION0_VERSION_HI = 31;
localparam PERF_SMON_CONFIGURATION0_VERSION_RESET = 2'h1;
localparam PERF_SMON_CONFIGURATION0_TIMER_PRESCALE_LO = 24;
localparam PERF_SMON_CONFIGURATION0_TIMER_PRESCALE_HI = 28;
localparam PERF_SMON_CONFIGURATION0_TIMER_PRESCALE_RESET = 5'h0;
localparam PERF_SMON_CONFIGURATION0_STATTIMEROVFL_LO = 22;
localparam PERF_SMON_CONFIGURATION0_STATTIMEROVFL_HI = 22;
localparam PERF_SMON_CONFIGURATION0_STATTIMEROVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_INTTIMEROVFL_LO = 21;
localparam PERF_SMON_CONFIGURATION0_INTTIMEROVFL_HI = 21;
localparam PERF_SMON_CONFIGURATION0_INTTIMEROVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_STOPTIMEROVFL_LO = 20;
localparam PERF_SMON_CONFIGURATION0_STOPTIMEROVFL_HI = 20;
localparam PERF_SMON_CONFIGURATION0_STOPTIMEROVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER1OVFL_LO = 19;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER1OVFL_HI = 19;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER1OVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER0OVFL_LO = 18;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER0OVFL_HI = 18;
localparam PERF_SMON_CONFIGURATION0_STATCOUNTER0OVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_INTCOUNTEROVFL_LO = 17;
localparam PERF_SMON_CONFIGURATION0_INTCOUNTEROVFL_HI = 17;
localparam PERF_SMON_CONFIGURATION0_INTCOUNTEROVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_STOPCOUNTEROVFL_LO = 16;
localparam PERF_SMON_CONFIGURATION0_STOPCOUNTEROVFL_HI = 16;
localparam PERF_SMON_CONFIGURATION0_STOPCOUNTEROVFL_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_SMON_MODE_LO = 12;
localparam PERF_SMON_CONFIGURATION0_SMON_MODE_HI = 15;
localparam PERF_SMON_CONFIGURATION0_SMON_MODE_RESET = 4'h0;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_LO = 11;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_HI = 11;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_LO = 8;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_HI = 10;
localparam PERF_SMON_CONFIGURATION0_SMON1_FUNCTION_RESET = 3'h0;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_LO = 7;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_HI = 7;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_LO = 4;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_HI = 6;
localparam PERF_SMON_CONFIGURATION0_SMON0_FUNCTION_RESET = 3'h0;
localparam PERF_SMON_CONFIGURATION0_SMON_ENABLE_LO = 0;
localparam PERF_SMON_CONFIGURATION0_SMON_ENABLE_HI = 0;
localparam PERF_SMON_CONFIGURATION0_SMON_ENABLE_RESET = 1'h0;
localparam PERF_SMON_CONFIGURATION0_USEMASK = 32'hDF7FFFF1;
localparam PERF_SMON_CONFIGURATION0_RO_MASK = 32'hC0000000;
localparam PERF_SMON_CONFIGURATION0_WO_MASK = 32'h0;
localparam PERF_SMON_CONFIGURATION0_RESET = 32'h40000000;

typedef struct packed {
    logic [15:0] RSVD;  // RW
    logic  [7:0] MODE1;  // RW
    logic  [7:0] MODE0;  // RW
} PERF_SMON_CONFIGURATION1_t;

localparam PERF_SMON_CONFIGURATION1_REG_STRIDE = 48'h4;
localparam PERF_SMON_CONFIGURATION1_REG_ENTRIES = 1;
localparam PERF_SMON_CONFIGURATION1_CR_ADDR = 48'h3004;
localparam PERF_SMON_CONFIGURATION1_SIZE = 32;
localparam PERF_SMON_CONFIGURATION1_RSVD_LO = 16;
localparam PERF_SMON_CONFIGURATION1_RSVD_HI = 31;
localparam PERF_SMON_CONFIGURATION1_RSVD_RESET = 16'h0;
localparam PERF_SMON_CONFIGURATION1_MODE1_LO = 8;
localparam PERF_SMON_CONFIGURATION1_MODE1_HI = 15;
localparam PERF_SMON_CONFIGURATION1_MODE1_RESET = 8'h0;
localparam PERF_SMON_CONFIGURATION1_MODE0_LO = 0;
localparam PERF_SMON_CONFIGURATION1_MODE0_HI = 7;
localparam PERF_SMON_CONFIGURATION1_MODE0_RESET = 8'h0;
localparam PERF_SMON_CONFIGURATION1_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_CONFIGURATION1_RO_MASK = 32'h0;
localparam PERF_SMON_CONFIGURATION1_WO_MASK = 32'h0;
localparam PERF_SMON_CONFIGURATION1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMPARE0;  // RW
} PERF_SMON_COMPARE0_t;

localparam PERF_SMON_COMPARE0_REG_STRIDE = 48'h4;
localparam PERF_SMON_COMPARE0_REG_ENTRIES = 1;
localparam PERF_SMON_COMPARE0_CR_ADDR = 48'h3008;
localparam PERF_SMON_COMPARE0_SIZE = 32;
localparam PERF_SMON_COMPARE0_COMPARE0_LO = 0;
localparam PERF_SMON_COMPARE0_COMPARE0_HI = 31;
localparam PERF_SMON_COMPARE0_COMPARE0_RESET = 32'h0;
localparam PERF_SMON_COMPARE0_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_COMPARE0_RO_MASK = 32'h0;
localparam PERF_SMON_COMPARE0_WO_MASK = 32'h0;
localparam PERF_SMON_COMPARE0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMPARE1;  // RW
} PERF_SMON_COMPARE1_t;

localparam PERF_SMON_COMPARE1_REG_STRIDE = 48'h4;
localparam PERF_SMON_COMPARE1_REG_ENTRIES = 1;
localparam PERF_SMON_COMPARE1_CR_ADDR = 48'h300C;
localparam PERF_SMON_COMPARE1_SIZE = 32;
localparam PERF_SMON_COMPARE1_COMPARE1_LO = 0;
localparam PERF_SMON_COMPARE1_COMPARE1_HI = 31;
localparam PERF_SMON_COMPARE1_COMPARE1_RESET = 32'h0;
localparam PERF_SMON_COMPARE1_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_COMPARE1_RO_MASK = 32'h0;
localparam PERF_SMON_COMPARE1_WO_MASK = 32'h0;
localparam PERF_SMON_COMPARE1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COUNTER0;  // RW
} PERF_SMON_ACTIVITYCOUNTER0_t;

localparam PERF_SMON_ACTIVITYCOUNTER0_REG_STRIDE = 48'h4;
localparam PERF_SMON_ACTIVITYCOUNTER0_REG_ENTRIES = 1;
localparam PERF_SMON_ACTIVITYCOUNTER0_CR_ADDR = 48'h3010;
localparam PERF_SMON_ACTIVITYCOUNTER0_SIZE = 32;
localparam PERF_SMON_ACTIVITYCOUNTER0_COUNTER0_LO = 0;
localparam PERF_SMON_ACTIVITYCOUNTER0_COUNTER0_HI = 31;
localparam PERF_SMON_ACTIVITYCOUNTER0_COUNTER0_RESET = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER0_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_ACTIVITYCOUNTER0_RO_MASK = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER0_WO_MASK = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COUNTER1;  // RW
} PERF_SMON_ACTIVITYCOUNTER1_t;

localparam PERF_SMON_ACTIVITYCOUNTER1_REG_STRIDE = 48'h4;
localparam PERF_SMON_ACTIVITYCOUNTER1_REG_ENTRIES = 1;
localparam PERF_SMON_ACTIVITYCOUNTER1_CR_ADDR = 48'h3014;
localparam PERF_SMON_ACTIVITYCOUNTER1_SIZE = 32;
localparam PERF_SMON_ACTIVITYCOUNTER1_COUNTER1_LO = 0;
localparam PERF_SMON_ACTIVITYCOUNTER1_COUNTER1_HI = 31;
localparam PERF_SMON_ACTIVITYCOUNTER1_COUNTER1_RESET = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER1_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_ACTIVITYCOUNTER1_RO_MASK = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER1_WO_MASK = 32'h0;
localparam PERF_SMON_ACTIVITYCOUNTER1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] TIMER_VAL;  // RW
} PERF_SMON_TIMER_t;

localparam PERF_SMON_TIMER_REG_STRIDE = 48'h4;
localparam PERF_SMON_TIMER_REG_ENTRIES = 1;
localparam PERF_SMON_TIMER_CR_ADDR = 48'h3018;
localparam PERF_SMON_TIMER_SIZE = 32;
localparam PERF_SMON_TIMER_TIMER_VAL_LO = 0;
localparam PERF_SMON_TIMER_TIMER_VAL_HI = 31;
localparam PERF_SMON_TIMER_TIMER_VAL_RESET = 32'h0;
localparam PERF_SMON_TIMER_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_TIMER_RO_MASK = 32'h0;
localparam PERF_SMON_TIMER_WO_MASK = 32'h0;
localparam PERF_SMON_TIMER_RESET = 32'h0;

typedef struct packed {
    logic [31:0] MAXVALUE;  // RW
} PERF_SMON_MAXIMUM_TIMER_t;

localparam PERF_SMON_MAXIMUM_TIMER_REG_STRIDE = 48'h4;
localparam PERF_SMON_MAXIMUM_TIMER_REG_ENTRIES = 1;
localparam PERF_SMON_MAXIMUM_TIMER_CR_ADDR = 48'h301C;
localparam PERF_SMON_MAXIMUM_TIMER_SIZE = 32;
localparam PERF_SMON_MAXIMUM_TIMER_MAXVALUE_LO = 0;
localparam PERF_SMON_MAXIMUM_TIMER_MAXVALUE_HI = 31;
localparam PERF_SMON_MAXIMUM_TIMER_MAXVALUE_RESET = 32'h0;
localparam PERF_SMON_MAXIMUM_TIMER_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_MAXIMUM_TIMER_RO_MASK = 32'h0;
localparam PERF_SMON_MAXIMUM_TIMER_WO_MASK = 32'h0;
localparam PERF_SMON_MAXIMUM_TIMER_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMP_MASK0;  // RW
} PERF_SMON_COMP_MASK0_t;

localparam PERF_SMON_COMP_MASK0_REG_STRIDE = 48'h4;
localparam PERF_SMON_COMP_MASK0_REG_ENTRIES = 1;
localparam PERF_SMON_COMP_MASK0_CR_ADDR = 48'h3020;
localparam PERF_SMON_COMP_MASK0_SIZE = 32;
localparam PERF_SMON_COMP_MASK0_COMP_MASK0_LO = 0;
localparam PERF_SMON_COMP_MASK0_COMP_MASK0_HI = 31;
localparam PERF_SMON_COMP_MASK0_COMP_MASK0_RESET = 32'hffffffff;
localparam PERF_SMON_COMP_MASK0_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_COMP_MASK0_RO_MASK = 32'h0;
localparam PERF_SMON_COMP_MASK0_WO_MASK = 32'h0;
localparam PERF_SMON_COMP_MASK0_RESET = 32'hFFFFFFFF;

typedef struct packed {
    logic [31:0] COMP_MASK1;  // RW
} PERF_SMON_COMP_MASK1_t;

localparam PERF_SMON_COMP_MASK1_REG_STRIDE = 48'h4;
localparam PERF_SMON_COMP_MASK1_REG_ENTRIES = 1;
localparam PERF_SMON_COMP_MASK1_CR_ADDR = 48'h3024;
localparam PERF_SMON_COMP_MASK1_SIZE = 32;
localparam PERF_SMON_COMP_MASK1_COMP_MASK1_LO = 0;
localparam PERF_SMON_COMP_MASK1_COMP_MASK1_HI = 31;
localparam PERF_SMON_COMP_MASK1_COMP_MASK1_RESET = 32'hffffffff;
localparam PERF_SMON_COMP_MASK1_USEMASK = 32'hFFFFFFFF;
localparam PERF_SMON_COMP_MASK1_RO_MASK = 32'h0;
localparam PERF_SMON_COMP_MASK1_WO_MASK = 32'h0;
localparam PERF_SMON_COMP_MASK1_RESET = 32'hFFFFFFFF;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [0:0] CQ_OPT_CLR;  // WO
    logic  [0:0] DIR_OPT;  // RO/V
    logic  [0:0] WB2_V;  // RO/V
    logic  [0:0] WB1_V;  // RO/V
    logic  [0:0] WB0_V;  // RO/V
} WB_DIR_CQ_STATE_t;

localparam WB_DIR_CQ_STATE_REG_STRIDE = 48'h4;
localparam WB_DIR_CQ_STATE_REG_ENTRIES = 1;
localparam WB_DIR_CQ_STATE_REGFILE_STRIDE = 48'h1000;
localparam WB_DIR_CQ_STATE_REGFILE_ENTRIES = 64;
localparam WB_DIR_CQ_STATE_CR_ADDR = 48'h1C00000;
localparam WB_DIR_CQ_STATE_SIZE = 32;
localparam WB_DIR_CQ_STATE_CQ_OPT_CLR_LO = 4;
localparam WB_DIR_CQ_STATE_CQ_OPT_CLR_HI = 4;
localparam WB_DIR_CQ_STATE_CQ_OPT_CLR_RESET = 1'h0;
localparam WB_DIR_CQ_STATE_DIR_OPT_LO = 3;
localparam WB_DIR_CQ_STATE_DIR_OPT_HI = 3;
localparam WB_DIR_CQ_STATE_DIR_OPT_RESET = 1'h0;
localparam WB_DIR_CQ_STATE_WB2_V_LO = 2;
localparam WB_DIR_CQ_STATE_WB2_V_HI = 2;
localparam WB_DIR_CQ_STATE_WB2_V_RESET = 1'h0;
localparam WB_DIR_CQ_STATE_WB1_V_LO = 1;
localparam WB_DIR_CQ_STATE_WB1_V_HI = 1;
localparam WB_DIR_CQ_STATE_WB1_V_RESET = 1'h0;
localparam WB_DIR_CQ_STATE_WB0_V_LO = 0;
localparam WB_DIR_CQ_STATE_WB0_V_HI = 0;
localparam WB_DIR_CQ_STATE_WB0_V_RESET = 1'h0;
localparam WB_DIR_CQ_STATE_USEMASK = 32'h1F;
localparam WB_DIR_CQ_STATE_RO_MASK = 32'hF;
localparam WB_DIR_CQ_STATE_WO_MASK = 32'h10;
localparam WB_DIR_CQ_STATE_RESET = 32'h0;

typedef struct packed {
    logic [26:0] reserved0;  // RSVD
    logic  [0:0] CQ_OPT_CLR;  // WO
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] WB2_V;  // RO/V
    logic  [0:0] WB1_V;  // RO/V
    logic  [0:0] WB0_V;  // RO/V
} WB_LDB_CQ_STATE_t;

localparam WB_LDB_CQ_STATE_REG_STRIDE = 48'h4;
localparam WB_LDB_CQ_STATE_REG_ENTRIES = 1;
localparam WB_LDB_CQ_STATE_REGFILE_STRIDE = 48'h1000;
localparam WB_LDB_CQ_STATE_REGFILE_ENTRIES = 64;
localparam WB_LDB_CQ_STATE_CR_ADDR = 48'h1D00000;
localparam WB_LDB_CQ_STATE_SIZE = 32;
localparam WB_LDB_CQ_STATE_CQ_OPT_CLR_LO = 4;
localparam WB_LDB_CQ_STATE_CQ_OPT_CLR_HI = 4;
localparam WB_LDB_CQ_STATE_CQ_OPT_CLR_RESET = 1'h0;
localparam WB_LDB_CQ_STATE_WB2_V_LO = 2;
localparam WB_LDB_CQ_STATE_WB2_V_HI = 2;
localparam WB_LDB_CQ_STATE_WB2_V_RESET = 1'h0;
localparam WB_LDB_CQ_STATE_WB1_V_LO = 1;
localparam WB_LDB_CQ_STATE_WB1_V_HI = 1;
localparam WB_LDB_CQ_STATE_WB1_V_RESET = 1'h0;
localparam WB_LDB_CQ_STATE_WB0_V_LO = 0;
localparam WB_LDB_CQ_STATE_WB0_V_HI = 0;
localparam WB_LDB_CQ_STATE_WB0_V_RESET = 1'h0;
localparam WB_LDB_CQ_STATE_USEMASK = 32'h17;
localparam WB_LDB_CQ_STATE_RO_MASK = 32'h7;
localparam WB_LDB_CQ_STATE_WO_MASK = 32'h10;
localparam WB_LDB_CQ_STATE_RESET = 32'h0;

typedef struct packed {
    logic [29:0] IMS_ADDR_L;  // RW
    logic  [1:0] reserved0;  // RSVD
} AI_ADDR_L_t;

localparam AI_ADDR_L_REG_STRIDE = 48'h4;
localparam AI_ADDR_L_REG_ENTRIES = 1;
localparam HQM_SYSTEM_IMS_PROVISIONING_REGFILE_STRIDE = 48'h10;
localparam HQM_SYSTEM_IMS_PROVISIONING_REGFILE_ENTRIES = 128;
localparam AI_ADDR_L_CR_ADDR = 48'h1E00000;
localparam AI_ADDR_L_SIZE = 32;
localparam AI_ADDR_L_IMS_ADDR_L_LO = 2;
localparam AI_ADDR_L_IMS_ADDR_L_HI = 31;
localparam AI_ADDR_L_IMS_ADDR_L_RESET = 30'h0;
localparam AI_ADDR_L_USEMASK = 32'hFFFFFFFC;
localparam AI_ADDR_L_RO_MASK = 32'h0;
localparam AI_ADDR_L_WO_MASK = 32'h0;
localparam AI_ADDR_L_RESET = 32'h0;

typedef struct packed {
    logic [31:0] IMS_ADDR_U;  // RW
} AI_ADDR_U_t;

localparam AI_ADDR_U_REG_STRIDE = 48'h4;
localparam AI_ADDR_U_REG_ENTRIES = 1;
localparam AI_ADDR_U_CR_ADDR = 48'h1E00004;
localparam AI_ADDR_U_SIZE = 32;
localparam AI_ADDR_U_IMS_ADDR_U_LO = 0;
localparam AI_ADDR_U_IMS_ADDR_U_HI = 31;
localparam AI_ADDR_U_IMS_ADDR_U_RESET = 32'h0;
localparam AI_ADDR_U_USEMASK = 32'hFFFFFFFF;
localparam AI_ADDR_U_RO_MASK = 32'h0;
localparam AI_ADDR_U_WO_MASK = 32'h0;
localparam AI_ADDR_U_RESET = 32'h0;

typedef struct packed {
    logic [31:0] IMS_DATA;  // RW
} AI_DATA_t;

localparam AI_DATA_REG_STRIDE = 48'h4;
localparam AI_DATA_REG_ENTRIES = 1;
localparam AI_DATA_CR_ADDR = 48'h1E00008;
localparam AI_DATA_SIZE = 32;
localparam AI_DATA_IMS_DATA_LO = 0;
localparam AI_DATA_IMS_DATA_HI = 31;
localparam AI_DATA_IMS_DATA_RESET = 32'h0;
localparam AI_DATA_USEMASK = 32'hFFFFFFFF;
localparam AI_DATA_RO_MASK = 32'h0;
localparam AI_DATA_WO_MASK = 32'h0;
localparam AI_DATA_RESET = 32'h0;

typedef struct packed {
    logic [29:0] reserved0;  // RSVD
    logic  [0:0] IMS_PEND;  // RO/V
    logic  [0:0] IMS_MASK;  // RW
} AI_CTRL_t;

localparam AI_CTRL_REG_STRIDE = 48'h4;
localparam AI_CTRL_REG_ENTRIES = 1;
localparam [127:0][47:0] AI_CTRL_CR_ADDR = {48'h1E007FC, 48'h1E007EC, 48'h1E007DC, 48'h1E007CC, 48'h1E007BC, 48'h1E007AC, 48'h1E0079C, 48'h1E0078C, 48'h1E0077C, 48'h1E0076C, 48'h1E0075C, 48'h1E0074C, 48'h1E0073C, 48'h1E0072C, 48'h1E0071C, 48'h1E0070C, 48'h1E006FC, 48'h1E006EC, 48'h1E006DC, 48'h1E006CC, 48'h1E006BC, 48'h1E006AC, 48'h1E0069C, 48'h1E0068C, 48'h1E0067C, 48'h1E0066C, 48'h1E0065C, 48'h1E0064C, 48'h1E0063C, 48'h1E0062C, 48'h1E0061C, 48'h1E0060C, 48'h1E005FC, 48'h1E005EC, 48'h1E005DC, 48'h1E005CC, 48'h1E005BC, 48'h1E005AC, 48'h1E0059C, 48'h1E0058C, 48'h1E0057C, 48'h1E0056C, 48'h1E0055C, 48'h1E0054C, 48'h1E0053C, 48'h1E0052C, 48'h1E0051C, 48'h1E0050C, 48'h1E004FC, 48'h1E004EC, 48'h1E004DC, 48'h1E004CC, 48'h1E004BC, 48'h1E004AC, 48'h1E0049C, 48'h1E0048C, 48'h1E0047C, 48'h1E0046C, 48'h1E0045C, 48'h1E0044C, 48'h1E0043C, 48'h1E0042C, 48'h1E0041C, 48'h1E0040C, 48'h1E003FC, 48'h1E003EC, 48'h1E003DC, 48'h1E003CC, 48'h1E003BC, 48'h1E003AC, 48'h1E0039C, 48'h1E0038C, 48'h1E0037C, 48'h1E0036C, 48'h1E0035C, 48'h1E0034C, 48'h1E0033C, 48'h1E0032C, 48'h1E0031C, 48'h1E0030C, 48'h1E002FC, 48'h1E002EC, 48'h1E002DC, 48'h1E002CC, 48'h1E002BC, 48'h1E002AC, 48'h1E0029C, 48'h1E0028C, 48'h1E0027C, 48'h1E0026C, 48'h1E0025C, 48'h1E0024C, 48'h1E0023C, 48'h1E0022C, 48'h1E0021C, 48'h1E0020C, 48'h1E001FC, 48'h1E001EC, 48'h1E001DC, 48'h1E001CC, 48'h1E001BC, 48'h1E001AC, 48'h1E0019C, 48'h1E0018C, 48'h1E0017C, 48'h1E0016C, 48'h1E0015C, 48'h1E0014C, 48'h1E0013C, 48'h1E0012C, 48'h1E0011C, 48'h1E0010C, 48'h1E000FC, 48'h1E000EC, 48'h1E000DC, 48'h1E000CC, 48'h1E000BC, 48'h1E000AC, 48'h1E0009C, 48'h1E0008C, 48'h1E0007C, 48'h1E0006C, 48'h1E0005C, 48'h1E0004C, 48'h1E0003C, 48'h1E0002C, 48'h1E0001C, 48'h1E0000C};
localparam AI_CTRL_SIZE = 32;
localparam AI_CTRL_IMS_PEND_LO = 1;
localparam AI_CTRL_IMS_PEND_HI = 1;
localparam AI_CTRL_IMS_PEND_RESET = 1'h0;
localparam AI_CTRL_IMS_MASK_LO = 0;
localparam AI_CTRL_IMS_MASK_HI = 0;
localparam AI_CTRL_IMS_MASK_RESET = 1'h0;
localparam AI_CTRL_USEMASK = 32'h3;
localparam AI_CTRL_RO_MASK = 32'h2;
localparam AI_CTRL_WO_MASK = 32'h0;
localparam AI_CTRL_RESET = 32'h0;

typedef struct packed {
    logic [22:0] reserved0;  // RSVD
    logic  [0:0] VALID;  // RW
    logic  [7:0] VEC;  // RW
} IMS_PEND_CLEAR_t;

localparam IMS_PEND_CLEAR_REG_STRIDE = 48'h4;
localparam IMS_PEND_CLEAR_REG_ENTRIES = 1;
localparam [47:0] IMS_PEND_CLEAR_CR_ADDR = 48'h1E01000;
localparam IMS_PEND_CLEAR_SIZE = 32;
localparam IMS_PEND_CLEAR_VALID_LO = 8;
localparam IMS_PEND_CLEAR_VALID_HI = 8;
localparam IMS_PEND_CLEAR_VALID_RESET = 1'h0;
localparam IMS_PEND_CLEAR_VEC_LO = 0;
localparam IMS_PEND_CLEAR_VEC_HI = 7;
localparam IMS_PEND_CLEAR_VEC_RESET = 8'h0;
localparam IMS_PEND_CLEAR_USEMASK = 32'h1FF;
localparam IMS_PEND_CLEAR_RO_MASK = 32'h0;
localparam IMS_PEND_CLEAR_WO_MASK = 32'h0;
localparam IMS_PEND_CLEAR_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} WB_SCH_OUT_AFULL_AGITATE_CONTROL_t;

localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] WB_SCH_OUT_AFULL_AGITATE_CONTROL_CR_ADDR = 48'h8000000;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_SIZE = 32;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_CTRL_LO = 2;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_CTRL_HI = 31;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_MODE_LO = 0;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_MODE_HI = 1;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam WB_SCH_OUT_AFULL_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} IG_HCW_ENQ_AFULL_AGITATE_CONTROL_t;

localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] IG_HCW_ENQ_AFULL_AGITATE_CONTROL_CR_ADDR = 48'h8000004;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_SIZE = 32;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_CTRL_LO = 2;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_CTRL_HI = 31;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_MODE_LO = 0;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_MODE_HI = 1;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam IG_HCW_ENQ_AFULL_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} IG_HCW_ENQ_W_DB_AGITATE_CONTROL_t;

localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] IG_HCW_ENQ_W_DB_AGITATE_CONTROL_CR_ADDR = 48'h800000C;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_SIZE = 32;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_CTRL_LO = 2;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_CTRL_HI = 31;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_MODE_LO = 0;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_MODE_HI = 1;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam IG_HCW_ENQ_W_DB_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} EG_HCW_SCHED_DB_AGITATE_CONTROL_t;

localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] EG_HCW_SCHED_DB_AGITATE_CONTROL_CR_ADDR = 48'h8000010;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_SIZE = 32;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_CTRL_LO = 2;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_CTRL_HI = 31;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_MODE_LO = 0;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_MODE_HI = 1;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam EG_HCW_SCHED_DB_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} AL_IMS_MSIX_DB_AGITATE_CONTROL_t;

localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] AL_IMS_MSIX_DB_AGITATE_CONTROL_CR_ADDR = 48'h8000014;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_SIZE = 32;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_CTRL_LO = 2;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_CTRL_HI = 31;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_MODE_LO = 0;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_MODE_HI = 1;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam AL_IMS_MSIX_DB_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} AL_CWD_ALARM_DB_AGITATE_CONTROL_t;

localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] AL_CWD_ALARM_DB_AGITATE_CONTROL_CR_ADDR = 48'h8000018;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_SIZE = 32;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_CTRL_LO = 2;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_CTRL_HI = 31;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_MODE_LO = 0;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_MODE_HI = 1;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam AL_CWD_ALARM_DB_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} AL_SIF_ALARM_AFULL_AGITATE_CONTROL_t;

localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] AL_SIF_ALARM_AFULL_AGITATE_CONTROL_CR_ADDR = 48'h800001C;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_SIZE = 32;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_CTRL_LO = 2;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_CTRL_HI = 31;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_MODE_LO = 0;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_MODE_HI = 1;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam AL_SIF_ALARM_AFULL_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic [29:0] CTRL;  // RW
    logic  [1:0] MODE;  // RW
} AL_HQM_ALARM_DB_AGITATE_CONTROL_t;

localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_REG_STRIDE = 48'h4;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_REG_ENTRIES = 1;
localparam [47:0] AL_HQM_ALARM_DB_AGITATE_CONTROL_CR_ADDR = 48'h8000020;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_SIZE = 32;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_CTRL_LO = 2;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_CTRL_HI = 31;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_CTRL_RESET = 30'h0;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_MODE_LO = 0;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_MODE_HI = 1;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_MODE_RESET = 2'b0;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_RO_MASK = 32'h0;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_WO_MASK = 32'h0;
localparam AL_HQM_ALARM_DB_AGITATE_CONTROL_RESET = 32'h0;

typedef struct packed {
    logic  [7:0] reserved0;  // RSVD
    logic  [0:0] INJ_SB_ECC_WBUF_W1_MS;  // RW
    logic  [0:0] INJ_MB_ECC_WBUF_W1_MS;  // RW
    logic  [0:0] INJ_SB_ECC_WBUF_W1_LS;  // RW
    logic  [0:0] INJ_MB_ECC_WBUF_W1_LS;  // RW
    logic  [0:0] INJ_SB_ECC_WBUF_W0_MS;  // RW
    logic  [0:0] INJ_MB_ECC_WBUF_W0_MS;  // RW
    logic  [0:0] INJ_SB_ECC_WBUF_W0_LS;  // RW
    logic  [0:0] INJ_MB_ECC_WBUF_W0_LS;  // RW
    logic  [0:0] INJ_SB_ECC_HCW_ENQ_MS;  // RW
    logic  [0:0] INJ_MB_ECC_HCW_ENQ_MS;  // RW
    logic  [0:0] INJ_SB_ECC_HCW_ENQ_LS;  // RW
    logic  [0:0] INJ_MB_ECC_HCW_ENQ_LS;  // RW
    logic  [5:0] reserved1;  // RSVD
    logic  [0:0] WRITE_BAD_MB_ECC;  // RW
    logic  [0:0] WRITE_BAD_SB_ECC;  // RW
    logic  [0:0] LUT_ECC_ENABLE;  // RW
    logic  [0:0] SCH_WB_ECC_ENABLE;  // RW
    logic  [0:0] HCW_ENQ_ECC_ENABLE;  // RW
    logic  [0:0] reserved2;  // RSVD
} ECC_CTL_t;

localparam ECC_CTL_REG_STRIDE = 48'h4;
localparam ECC_CTL_REG_ENTRIES = 1;
localparam [47:0] ECC_CTL_CR_ADDR = 48'h8001030;
localparam ECC_CTL_SIZE = 32;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_MS_LO = 23;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_MS_HI = 23;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_MS_LO = 22;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_MS_HI = 22;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_LS_LO = 21;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_LS_HI = 21;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W1_LS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_LS_LO = 20;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_LS_HI = 20;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W1_LS_RESET = 1'h0;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_MS_LO = 19;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_MS_HI = 19;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_MS_LO = 18;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_MS_HI = 18;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_LS_LO = 17;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_LS_HI = 17;
localparam ECC_CTL_INJ_SB_ECC_WBUF_W0_LS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_LS_LO = 16;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_LS_HI = 16;
localparam ECC_CTL_INJ_MB_ECC_WBUF_W0_LS_RESET = 1'h0;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_MS_LO = 15;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_MS_HI = 15;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_MS_LO = 14;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_MS_HI = 14;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_MS_RESET = 1'h0;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_LS_LO = 13;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_LS_HI = 13;
localparam ECC_CTL_INJ_SB_ECC_HCW_ENQ_LS_RESET = 1'h0;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_LS_LO = 12;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_LS_HI = 12;
localparam ECC_CTL_INJ_MB_ECC_HCW_ENQ_LS_RESET = 1'h0;
localparam ECC_CTL_WRITE_BAD_MB_ECC_LO = 5;
localparam ECC_CTL_WRITE_BAD_MB_ECC_HI = 5;
localparam ECC_CTL_WRITE_BAD_MB_ECC_RESET = 1'h0;
localparam ECC_CTL_WRITE_BAD_SB_ECC_LO = 4;
localparam ECC_CTL_WRITE_BAD_SB_ECC_HI = 4;
localparam ECC_CTL_WRITE_BAD_SB_ECC_RESET = 1'h0;
localparam ECC_CTL_LUT_ECC_ENABLE_LO = 3;
localparam ECC_CTL_LUT_ECC_ENABLE_HI = 3;
localparam ECC_CTL_LUT_ECC_ENABLE_RESET = 1'h1;
localparam ECC_CTL_SCH_WB_ECC_ENABLE_LO = 2;
localparam ECC_CTL_SCH_WB_ECC_ENABLE_HI = 2;
localparam ECC_CTL_SCH_WB_ECC_ENABLE_RESET = 1'h1;
localparam ECC_CTL_HCW_ENQ_ECC_ENABLE_LO = 1;
localparam ECC_CTL_HCW_ENQ_ECC_ENABLE_HI = 1;
localparam ECC_CTL_HCW_ENQ_ECC_ENABLE_RESET = 1'h1;
localparam ECC_CTL_USEMASK = 32'hFFF03E;
localparam ECC_CTL_RO_MASK = 32'h0;
localparam ECC_CTL_WO_MASK = 32'h0;
localparam ECC_CTL_RESET = 32'hE;

typedef struct packed {
    logic [11:0] reserved0;  // RSVD
    logic  [0:0] INJ_PAR_ERR_SCH_INT;  // RW
    logic  [0:0] EGRESS_INT_PAR_OFF;  // RW
    logic  [0:0] INJ_RES_ERR_INT;  // RW
    logic  [0:0] INJ_PAR_ERR_INT;  // RW
    logic  [0:0] INJ_RES_ERR_SCH;  // RW
    logic  [0:0] INJ_PAR_ERR_SCH;  // RW
    logic  [0:0] INJ_PAR_ERR_SCH_PL;  // RW
    logic  [0:0] INJ_RES_ERR_SCH_REQ;  // RW
    logic  [0:0] WBUF_RES_OFF;  // RW
    logic  [0:0] EGRESS_RES_OFF;  // RW
    logic  [0:0] INJ_PAR_ERR_VF_SYND;  // RW
    logic  [0:0] INJ_PAR_ERR_SCH_OUT;  // RW
    logic  [0:0] INJ_PAR_ERR_HCW_PORT;  // RW
    logic  [0:0] INJ_PAR_ERR_SCH_REQ;  // RW
    logic  [0:0] INJ_PAR_ERR_SCH_DATA;  // RW
    logic  [0:0] WBUF_PAR_OFF;  // RW
    logic  [0:0] INGRESS_PAR_OFF;  // RW
    logic  [0:0] EGRESS_PAR_OFF;  // RW
    logic  [0:0] ALARM_PAR_OFF;  // RW
    logic  [0:0] WRITE_BAD_PARITY;  // RW
} PARITY_CTL_t;

localparam PARITY_CTL_REG_STRIDE = 48'h4;
localparam PARITY_CTL_REG_ENTRIES = 1;
localparam [47:0] PARITY_CTL_CR_ADDR = 48'h8001034;
localparam PARITY_CTL_SIZE = 32;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_INT_LO = 19;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_INT_HI = 19;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_INT_RESET = 1'h0;
localparam PARITY_CTL_EGRESS_INT_PAR_OFF_LO = 18;
localparam PARITY_CTL_EGRESS_INT_PAR_OFF_HI = 18;
localparam PARITY_CTL_EGRESS_INT_PAR_OFF_RESET = 1'h0;
localparam PARITY_CTL_INJ_RES_ERR_INT_LO = 17;
localparam PARITY_CTL_INJ_RES_ERR_INT_HI = 17;
localparam PARITY_CTL_INJ_RES_ERR_INT_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_INT_LO = 16;
localparam PARITY_CTL_INJ_PAR_ERR_INT_HI = 16;
localparam PARITY_CTL_INJ_PAR_ERR_INT_RESET = 1'h0;
localparam PARITY_CTL_INJ_RES_ERR_SCH_LO = 15;
localparam PARITY_CTL_INJ_RES_ERR_SCH_HI = 15;
localparam PARITY_CTL_INJ_RES_ERR_SCH_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_LO = 14;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_HI = 14;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_PL_LO = 13;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_PL_HI = 13;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_PL_RESET = 1'h0;
localparam PARITY_CTL_INJ_RES_ERR_SCH_REQ_LO = 12;
localparam PARITY_CTL_INJ_RES_ERR_SCH_REQ_HI = 12;
localparam PARITY_CTL_INJ_RES_ERR_SCH_REQ_RESET = 1'h0;
localparam PARITY_CTL_WBUF_RES_OFF_LO = 11;
localparam PARITY_CTL_WBUF_RES_OFF_HI = 11;
localparam PARITY_CTL_WBUF_RES_OFF_RESET = 1'h0;
localparam PARITY_CTL_EGRESS_RES_OFF_LO = 10;
localparam PARITY_CTL_EGRESS_RES_OFF_HI = 10;
localparam PARITY_CTL_EGRESS_RES_OFF_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_VF_SYND_LO = 9;
localparam PARITY_CTL_INJ_PAR_ERR_VF_SYND_HI = 9;
localparam PARITY_CTL_INJ_PAR_ERR_VF_SYND_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_OUT_LO = 8;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_OUT_HI = 8;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_OUT_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_HCW_PORT_LO = 7;
localparam PARITY_CTL_INJ_PAR_ERR_HCW_PORT_HI = 7;
localparam PARITY_CTL_INJ_PAR_ERR_HCW_PORT_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_REQ_LO = 6;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_REQ_HI = 6;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_REQ_RESET = 1'h0;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_DATA_LO = 5;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_DATA_HI = 5;
localparam PARITY_CTL_INJ_PAR_ERR_SCH_DATA_RESET = 1'h0;
localparam PARITY_CTL_WBUF_PAR_OFF_LO = 4;
localparam PARITY_CTL_WBUF_PAR_OFF_HI = 4;
localparam PARITY_CTL_WBUF_PAR_OFF_RESET = 1'h0;
localparam PARITY_CTL_INGRESS_PAR_OFF_LO = 3;
localparam PARITY_CTL_INGRESS_PAR_OFF_HI = 3;
localparam PARITY_CTL_INGRESS_PAR_OFF_RESET = 1'h0;
localparam PARITY_CTL_EGRESS_PAR_OFF_LO = 2;
localparam PARITY_CTL_EGRESS_PAR_OFF_HI = 2;
localparam PARITY_CTL_EGRESS_PAR_OFF_RESET = 1'h0;
localparam PARITY_CTL_ALARM_PAR_OFF_LO = 1;
localparam PARITY_CTL_ALARM_PAR_OFF_HI = 1;
localparam PARITY_CTL_ALARM_PAR_OFF_RESET = 1'h0;
localparam PARITY_CTL_WRITE_BAD_PARITY_LO = 0;
localparam PARITY_CTL_WRITE_BAD_PARITY_HI = 0;
localparam PARITY_CTL_WRITE_BAD_PARITY_RESET = 1'h0;
localparam PARITY_CTL_USEMASK = 32'hFFFFF;
localparam PARITY_CTL_RO_MASK = 32'h0;
localparam PARITY_CTL_WO_MASK = 32'h0;
localparam PARITY_CTL_RESET = 32'h0;

typedef struct packed {
    logic [11:0] reserved0;  // RSVD
    logic  [0:0] EARLY_DIR_INT;  // RW
    logic  [2:0] SCH_RATE_LIMIT;  // RW
    logic  [6:0] reserved1;  // RSVD
    logic  [0:0] ENABLE_DEBUG;  // RW
    logic  [0:0] SINGLE_STEP_MSI;  // RW
    logic  [0:0] SINGLE_STEP_SCH;  // RW
    logic  [0:0] ARB_MSI_MASK;  // RW
    logic  [0:0] ARB_SCH_MASK;  // RW
    logic  [0:0] IGNORE_LDB_WB_V;  // RW
    logic  [0:0] HOLD_SCH_SM;  // RW
    logic  [0:0] WRITE_SINGLE_BEATS;  // RW
    logic  [0:0] IGNORE_DIR_WB_V;  // RW
} WRITE_BUFFER_CTL_t;

localparam WRITE_BUFFER_CTL_REG_STRIDE = 48'h4;
localparam WRITE_BUFFER_CTL_REG_ENTRIES = 1;
localparam [47:0] WRITE_BUFFER_CTL_CR_ADDR = 48'h8001040;
localparam WRITE_BUFFER_CTL_SIZE = 32;
localparam WRITE_BUFFER_CTL_EARLY_DIR_INT_LO = 19;
localparam WRITE_BUFFER_CTL_EARLY_DIR_INT_HI = 19;
localparam WRITE_BUFFER_CTL_EARLY_DIR_INT_RESET = 1'h0;
localparam WRITE_BUFFER_CTL_SCH_RATE_LIMIT_LO = 16;
localparam WRITE_BUFFER_CTL_SCH_RATE_LIMIT_HI = 18;
localparam WRITE_BUFFER_CTL_SCH_RATE_LIMIT_RESET = 3'h0;
localparam WRITE_BUFFER_CTL_ENABLE_DEBUG_LO = 8;
localparam WRITE_BUFFER_CTL_ENABLE_DEBUG_HI = 8;
localparam WRITE_BUFFER_CTL_ENABLE_DEBUG_RESET = 1'h0;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_MSI_LO = 7;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_MSI_HI = 7;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_MSI_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_SCH_LO = 6;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_SCH_HI = 6;
localparam WRITE_BUFFER_CTL_SINGLE_STEP_SCH_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_ARB_MSI_MASK_LO = 5;
localparam WRITE_BUFFER_CTL_ARB_MSI_MASK_HI = 5;
localparam WRITE_BUFFER_CTL_ARB_MSI_MASK_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_ARB_SCH_MASK_LO = 4;
localparam WRITE_BUFFER_CTL_ARB_SCH_MASK_HI = 4;
localparam WRITE_BUFFER_CTL_ARB_SCH_MASK_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_IGNORE_LDB_WB_V_LO = 3;
localparam WRITE_BUFFER_CTL_IGNORE_LDB_WB_V_HI = 3;
localparam WRITE_BUFFER_CTL_IGNORE_LDB_WB_V_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_HOLD_SCH_SM_LO = 2;
localparam WRITE_BUFFER_CTL_HOLD_SCH_SM_HI = 2;
localparam WRITE_BUFFER_CTL_HOLD_SCH_SM_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_WRITE_SINGLE_BEATS_LO = 1;
localparam WRITE_BUFFER_CTL_WRITE_SINGLE_BEATS_HI = 1;
localparam WRITE_BUFFER_CTL_WRITE_SINGLE_BEATS_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_IGNORE_DIR_WB_V_LO = 0;
localparam WRITE_BUFFER_CTL_IGNORE_DIR_WB_V_HI = 0;
localparam WRITE_BUFFER_CTL_IGNORE_DIR_WB_V_RESET = 1'b0;
localparam WRITE_BUFFER_CTL_USEMASK = 32'hF01FF;
localparam WRITE_BUFFER_CTL_RO_MASK = 32'h0;
localparam WRITE_BUFFER_CTL_WO_MASK = 32'h0;
localparam WRITE_BUFFER_CTL_RESET = 32'h0;

typedef struct packed {
    logic [27:0] reserved0;  // RSVD
    logic  [0:0] DISABLE_CWD_ALARMS;  // RW
    logic  [0:0] DISABLE_SYS_ALARMS;  // RW
    logic  [0:0] DISABLE_SIF_ALARMS;  // RW
    logic  [0:0] DISABLE_HQM_ALARMS;  // RW
} ALARM_CTL_t;

localparam ALARM_CTL_REG_STRIDE = 48'h4;
localparam ALARM_CTL_REG_ENTRIES = 1;
localparam [47:0] ALARM_CTL_CR_ADDR = 48'h8001044;
localparam ALARM_CTL_SIZE = 32;
localparam ALARM_CTL_DISABLE_CWD_ALARMS_LO = 3;
localparam ALARM_CTL_DISABLE_CWD_ALARMS_HI = 3;
localparam ALARM_CTL_DISABLE_CWD_ALARMS_RESET = 1'h0;
localparam ALARM_CTL_DISABLE_SYS_ALARMS_LO = 2;
localparam ALARM_CTL_DISABLE_SYS_ALARMS_HI = 2;
localparam ALARM_CTL_DISABLE_SYS_ALARMS_RESET = 1'h0;
localparam ALARM_CTL_DISABLE_SIF_ALARMS_LO = 1;
localparam ALARM_CTL_DISABLE_SIF_ALARMS_HI = 1;
localparam ALARM_CTL_DISABLE_SIF_ALARMS_RESET = 1'h0;
localparam ALARM_CTL_DISABLE_HQM_ALARMS_LO = 0;
localparam ALARM_CTL_DISABLE_HQM_ALARMS_HI = 0;
localparam ALARM_CTL_DISABLE_HQM_ALARMS_RESET = 1'h0;
localparam ALARM_CTL_USEMASK = 32'hF;
localparam ALARM_CTL_RO_MASK = 32'h0;
localparam ALARM_CTL_WO_MASK = 32'h0;
localparam ALARM_CTL_RESET = 32'h0;

typedef struct packed {
    logic  [0:0] DISABLE_CLOCKOFF;  // RW
    logic [14:0] RSVZ0;  // RW
    logic  [1:0] RSVZ1;  // RW
    logic  [5:0] DELAY_CLKOFF_BYPASS;  // RW
    logic  [7:0] DELAY_CLOCKOFF;  // RW
} CFG_PATCH_CONTROL_t;

localparam CFG_PATCH_CONTROL_REG_STRIDE = 48'h4;
localparam CFG_PATCH_CONTROL_REG_ENTRIES = 1;
localparam [47:0] CFG_PATCH_CONTROL_CR_ADDR = 48'h8001048;
localparam CFG_PATCH_CONTROL_SIZE = 32;
localparam CFG_PATCH_CONTROL_DISABLE_CLOCKOFF_LO = 31;
localparam CFG_PATCH_CONTROL_DISABLE_CLOCKOFF_HI = 31;
localparam CFG_PATCH_CONTROL_DISABLE_CLOCKOFF_RESET = 1'h0;
localparam CFG_PATCH_CONTROL_RSVZ0_LO = 16;
localparam CFG_PATCH_CONTROL_RSVZ0_HI = 30;
localparam CFG_PATCH_CONTROL_RSVZ0_RESET = 15'h0;
localparam CFG_PATCH_CONTROL_RSVZ1_LO = 14;
localparam CFG_PATCH_CONTROL_RSVZ1_HI = 15;
localparam CFG_PATCH_CONTROL_RSVZ1_RESET = 2'h0;
localparam CFG_PATCH_CONTROL_DELAY_CLKOFF_BYPASS_LO = 8;
localparam CFG_PATCH_CONTROL_DELAY_CLKOFF_BYPASS_HI = 13;
localparam CFG_PATCH_CONTROL_DELAY_CLKOFF_BYPASS_RESET = 6'h7;
localparam CFG_PATCH_CONTROL_DELAY_CLOCKOFF_LO = 0;
localparam CFG_PATCH_CONTROL_DELAY_CLOCKOFF_HI = 7;
localparam CFG_PATCH_CONTROL_DELAY_CLOCKOFF_RESET = 8'h40;
localparam CFG_PATCH_CONTROL_USEMASK = 32'hFFFFFFFF;
localparam CFG_PATCH_CONTROL_RO_MASK = 32'h0;
localparam CFG_PATCH_CONTROL_WO_MASK = 32'h0;
localparam CFG_PATCH_CONTROL_RESET = 32'h740;

typedef struct packed {
    logic [13:0] reserved0;  // RSVD
    logic  [9:0] ENQ_RATE_LIMIT;  // RW
    logic  [2:0] reserved1;  // RSVD
    logic  [0:0] ENABLE_DEBUG;  // RW
    logic  [0:0] SINGLE_STEP_HCW_W;  // RW
    logic  [0:0] SINGLE_STEP_ENQ;  // RW
    logic  [0:0] HOLD_HCW_W;  // RW
    logic  [0:0] HOLD_HCW_ENQ;  // RW
} INGRESS_CTL_t;

localparam INGRESS_CTL_REG_STRIDE = 48'h4;
localparam INGRESS_CTL_REG_ENTRIES = 1;
localparam [47:0] INGRESS_CTL_CR_ADDR = 48'h8001050;
localparam INGRESS_CTL_SIZE = 32;
localparam INGRESS_CTL_ENQ_RATE_LIMIT_LO = 8;
localparam INGRESS_CTL_ENQ_RATE_LIMIT_HI = 17;
localparam INGRESS_CTL_ENQ_RATE_LIMIT_RESET = 10'h0;
localparam INGRESS_CTL_ENABLE_DEBUG_LO = 4;
localparam INGRESS_CTL_ENABLE_DEBUG_HI = 4;
localparam INGRESS_CTL_ENABLE_DEBUG_RESET = 1'h0;
localparam INGRESS_CTL_SINGLE_STEP_HCW_W_LO = 3;
localparam INGRESS_CTL_SINGLE_STEP_HCW_W_HI = 3;
localparam INGRESS_CTL_SINGLE_STEP_HCW_W_RESET = 1'b0;
localparam INGRESS_CTL_SINGLE_STEP_ENQ_LO = 2;
localparam INGRESS_CTL_SINGLE_STEP_ENQ_HI = 2;
localparam INGRESS_CTL_SINGLE_STEP_ENQ_RESET = 1'b0;
localparam INGRESS_CTL_HOLD_HCW_W_LO = 1;
localparam INGRESS_CTL_HOLD_HCW_W_HI = 1;
localparam INGRESS_CTL_HOLD_HCW_W_RESET = 1'b0;
localparam INGRESS_CTL_HOLD_HCW_ENQ_LO = 0;
localparam INGRESS_CTL_HOLD_HCW_ENQ_HI = 0;
localparam INGRESS_CTL_HOLD_HCW_ENQ_RESET = 1'b0;
localparam INGRESS_CTL_USEMASK = 32'h3FF1F;
localparam INGRESS_CTL_RO_MASK = 32'h0;
localparam INGRESS_CTL_WO_MASK = 32'h0;
localparam INGRESS_CTL_RESET = 32'h0;

typedef struct packed {
    logic [24:0] reserved0;  // RSVD
    logic  [6:0] SCH_RATE_LIMIT;  // RW
} EGRESS_CTL_t;

localparam EGRESS_CTL_REG_STRIDE = 48'h4;
localparam EGRESS_CTL_REG_ENTRIES = 1;
localparam [47:0] EGRESS_CTL_CR_ADDR = 48'h8001054;
localparam EGRESS_CTL_SIZE = 32;
localparam EGRESS_CTL_SCH_RATE_LIMIT_LO = 0;
localparam EGRESS_CTL_SCH_RATE_LIMIT_HI = 6;
localparam EGRESS_CTL_SCH_RATE_LIMIT_RESET = 7'h0;
localparam EGRESS_CTL_USEMASK = 32'h7F;
localparam EGRESS_CTL_RO_MASK = 32'h0;
localparam EGRESS_CTL_WO_MASK = 32'h0;
localparam EGRESS_CTL_RESET = 32'h0;

typedef struct packed {
    logic [25:0] reserved0;  // RSVD
    logic  [0:0] PBA_IDLE;  // RO/V
    logic  [0:0] INT_IDLE;  // RO/V
    logic  [0:0] ALARM_IDLE;  // RO/V
    logic  [0:0] WBUF_IDLE;  // RO/V
    logic  [0:0] EGRESS_IDLE;  // RO/V
    logic  [0:0] INGRESS_IDLE;  // RO/V
} SYS_IDLE_STATUS_t;

localparam SYS_IDLE_STATUS_REG_STRIDE = 48'h4;
localparam SYS_IDLE_STATUS_REG_ENTRIES = 1;
localparam [47:0] SYS_IDLE_STATUS_CR_ADDR = 48'h8001058;
localparam SYS_IDLE_STATUS_SIZE = 32;
localparam SYS_IDLE_STATUS_PBA_IDLE_LO = 5;
localparam SYS_IDLE_STATUS_PBA_IDLE_HI = 5;
localparam SYS_IDLE_STATUS_PBA_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_INT_IDLE_LO = 4;
localparam SYS_IDLE_STATUS_INT_IDLE_HI = 4;
localparam SYS_IDLE_STATUS_INT_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_ALARM_IDLE_LO = 3;
localparam SYS_IDLE_STATUS_ALARM_IDLE_HI = 3;
localparam SYS_IDLE_STATUS_ALARM_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_WBUF_IDLE_LO = 2;
localparam SYS_IDLE_STATUS_WBUF_IDLE_HI = 2;
localparam SYS_IDLE_STATUS_WBUF_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_EGRESS_IDLE_LO = 1;
localparam SYS_IDLE_STATUS_EGRESS_IDLE_HI = 1;
localparam SYS_IDLE_STATUS_EGRESS_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_INGRESS_IDLE_LO = 0;
localparam SYS_IDLE_STATUS_INGRESS_IDLE_HI = 0;
localparam SYS_IDLE_STATUS_INGRESS_IDLE_RESET = 1'b1;
localparam SYS_IDLE_STATUS_USEMASK = 32'h3F;
localparam SYS_IDLE_STATUS_RO_MASK = 32'h3F;
localparam SYS_IDLE_STATUS_WO_MASK = 32'h0;
localparam SYS_IDLE_STATUS_RESET = 32'h3F;

typedef struct packed {
    logic [22:0] reserved0;  // RSVD
    logic  [8:0] HIGH_WM;  // RW
} HCW_ENQ_FIFO_CTL_t;

localparam HCW_ENQ_FIFO_CTL_REG_STRIDE = 48'h4;
localparam HCW_ENQ_FIFO_CTL_REG_ENTRIES = 1;
localparam [47:0] HCW_ENQ_FIFO_CTL_CR_ADDR = 48'h8001068;
localparam HCW_ENQ_FIFO_CTL_SIZE = 32;
localparam HCW_ENQ_FIFO_CTL_HIGH_WM_LO = 0;
localparam HCW_ENQ_FIFO_CTL_HIGH_WM_HI = 8;
localparam HCW_ENQ_FIFO_CTL_HIGH_WM_RESET = 'hFE;
localparam HCW_ENQ_FIFO_CTL_USEMASK = 32'h1FF;
localparam HCW_ENQ_FIFO_CTL_RO_MASK = 32'h0;
localparam HCW_ENQ_FIFO_CTL_WO_MASK = 32'h0;
localparam HCW_ENQ_FIFO_CTL_RESET = 32'hFE;

typedef struct packed {
    logic [23:0] reserved0;  // RSVD
    logic  [7:0] HIGH_WM;  // RW
} SCH_OUT_FIFO_CTL_t;

localparam SCH_OUT_FIFO_CTL_REG_STRIDE = 48'h4;
localparam SCH_OUT_FIFO_CTL_REG_ENTRIES = 1;
localparam [47:0] SCH_OUT_FIFO_CTL_CR_ADDR = 48'h800106C;
localparam SCH_OUT_FIFO_CTL_SIZE = 32;
localparam SCH_OUT_FIFO_CTL_HIGH_WM_LO = 0;
localparam SCH_OUT_FIFO_CTL_HIGH_WM_HI = 7;
localparam SCH_OUT_FIFO_CTL_HIGH_WM_RESET = 'h7F;
localparam SCH_OUT_FIFO_CTL_USEMASK = 32'hFF;
localparam SCH_OUT_FIFO_CTL_RO_MASK = 32'h0;
localparam SCH_OUT_FIFO_CTL_WO_MASK = 32'h0;
localparam SCH_OUT_FIFO_CTL_RESET = 32'h7F;

typedef struct packed {
    logic [30:0] reserved0;  // RSVD
    logic  [0:0] HIGH_WM;  // RW
} SIF_ALARM_FIFO_CTL_t;

localparam SIF_ALARM_FIFO_CTL_REG_STRIDE = 48'h4;
localparam SIF_ALARM_FIFO_CTL_REG_ENTRIES = 1;
localparam [47:0] SIF_ALARM_FIFO_CTL_CR_ADDR = 48'h8001070;
localparam SIF_ALARM_FIFO_CTL_SIZE = 32;
localparam SIF_ALARM_FIFO_CTL_HIGH_WM_LO = 0;
localparam SIF_ALARM_FIFO_CTL_HIGH_WM_HI = 0;
localparam SIF_ALARM_FIFO_CTL_HIGH_WM_RESET = 1'b1;
localparam SIF_ALARM_FIFO_CTL_USEMASK = 32'h1;
localparam SIF_ALARM_FIFO_CTL_RO_MASK = 32'h0;
localparam SIF_ALARM_FIFO_CTL_WO_MASK = 32'h0;
localparam SIF_ALARM_FIFO_CTL_RESET = 32'h1;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] AEMPTY;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} HCW_ENQ_FIFO_STATUS_t;

localparam HCW_ENQ_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam HCW_ENQ_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] HCW_ENQ_FIFO_STATUS_CR_ADDR = 48'h8001074;
localparam HCW_ENQ_FIFO_STATUS_SIZE = 32;
localparam HCW_ENQ_FIFO_STATUS_DEPTH_LO = 8;
localparam HCW_ENQ_FIFO_STATUS_DEPTH_HI = 31;
localparam HCW_ENQ_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam HCW_ENQ_FIFO_STATUS_FULL_LO = 7;
localparam HCW_ENQ_FIFO_STATUS_FULL_HI = 7;
localparam HCW_ENQ_FIFO_STATUS_FULL_RESET = 1'b0;
localparam HCW_ENQ_FIFO_STATUS_AFULL_LO = 6;
localparam HCW_ENQ_FIFO_STATUS_AFULL_HI = 6;
localparam HCW_ENQ_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam HCW_ENQ_FIFO_STATUS_AEMPTY_LO = 5;
localparam HCW_ENQ_FIFO_STATUS_AEMPTY_HI = 5;
localparam HCW_ENQ_FIFO_STATUS_AEMPTY_RESET = 1'b1;
localparam HCW_ENQ_FIFO_STATUS_EMPTY_LO = 4;
localparam HCW_ENQ_FIFO_STATUS_EMPTY_HI = 4;
localparam HCW_ENQ_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam HCW_ENQ_FIFO_STATUS_RSVD32_LO = 2;
localparam HCW_ENQ_FIFO_STATUS_RSVD32_HI = 3;
localparam HCW_ENQ_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam HCW_ENQ_FIFO_STATUS_OVRFLOW_LO = 1;
localparam HCW_ENQ_FIFO_STATUS_OVRFLOW_HI = 1;
localparam HCW_ENQ_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam HCW_ENQ_FIFO_STATUS_UNDFLOW_LO = 0;
localparam HCW_ENQ_FIFO_STATUS_UNDFLOW_HI = 0;
localparam HCW_ENQ_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam HCW_ENQ_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam HCW_ENQ_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam HCW_ENQ_FIFO_STATUS_WO_MASK = 32'h0;
localparam HCW_ENQ_FIFO_STATUS_RESET = 32'h30;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} HCW_SCH_FIFO_STATUS_t;

localparam HCW_SCH_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam HCW_SCH_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] HCW_SCH_FIFO_STATUS_CR_ADDR = 48'h8001078;
localparam HCW_SCH_FIFO_STATUS_SIZE = 32;
localparam HCW_SCH_FIFO_STATUS_DEPTH_LO = 8;
localparam HCW_SCH_FIFO_STATUS_DEPTH_HI = 31;
localparam HCW_SCH_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam HCW_SCH_FIFO_STATUS_FULL_LO = 7;
localparam HCW_SCH_FIFO_STATUS_FULL_HI = 7;
localparam HCW_SCH_FIFO_STATUS_FULL_RESET = 1'b0;
localparam HCW_SCH_FIFO_STATUS_AFULL_LO = 6;
localparam HCW_SCH_FIFO_STATUS_AFULL_HI = 6;
localparam HCW_SCH_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam HCW_SCH_FIFO_STATUS_RSVD5_LO = 5;
localparam HCW_SCH_FIFO_STATUS_RSVD5_HI = 5;
localparam HCW_SCH_FIFO_STATUS_RSVD5_RESET = 1'b0;
localparam HCW_SCH_FIFO_STATUS_EMPTY_LO = 4;
localparam HCW_SCH_FIFO_STATUS_EMPTY_HI = 4;
localparam HCW_SCH_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam HCW_SCH_FIFO_STATUS_RSVD32_LO = 2;
localparam HCW_SCH_FIFO_STATUS_RSVD32_HI = 3;
localparam HCW_SCH_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam HCW_SCH_FIFO_STATUS_OVRFLOW_LO = 1;
localparam HCW_SCH_FIFO_STATUS_OVRFLOW_HI = 1;
localparam HCW_SCH_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam HCW_SCH_FIFO_STATUS_UNDFLOW_LO = 0;
localparam HCW_SCH_FIFO_STATUS_UNDFLOW_HI = 0;
localparam HCW_SCH_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam HCW_SCH_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam HCW_SCH_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam HCW_SCH_FIFO_STATUS_WO_MASK = 32'h0;
localparam HCW_SCH_FIFO_STATUS_RESET = 32'h10;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} SCH_OUT_FIFO_STATUS_t;

localparam SCH_OUT_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam SCH_OUT_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] SCH_OUT_FIFO_STATUS_CR_ADDR = 48'h800107C;
localparam SCH_OUT_FIFO_STATUS_SIZE = 32;
localparam SCH_OUT_FIFO_STATUS_DEPTH_LO = 8;
localparam SCH_OUT_FIFO_STATUS_DEPTH_HI = 31;
localparam SCH_OUT_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam SCH_OUT_FIFO_STATUS_FULL_LO = 7;
localparam SCH_OUT_FIFO_STATUS_FULL_HI = 7;
localparam SCH_OUT_FIFO_STATUS_FULL_RESET = 1'b0;
localparam SCH_OUT_FIFO_STATUS_AFULL_LO = 6;
localparam SCH_OUT_FIFO_STATUS_AFULL_HI = 6;
localparam SCH_OUT_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam SCH_OUT_FIFO_STATUS_RSVD5_LO = 5;
localparam SCH_OUT_FIFO_STATUS_RSVD5_HI = 5;
localparam SCH_OUT_FIFO_STATUS_RSVD5_RESET = 1'b0;
localparam SCH_OUT_FIFO_STATUS_EMPTY_LO = 4;
localparam SCH_OUT_FIFO_STATUS_EMPTY_HI = 4;
localparam SCH_OUT_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam SCH_OUT_FIFO_STATUS_RSVD32_LO = 2;
localparam SCH_OUT_FIFO_STATUS_RSVD32_HI = 3;
localparam SCH_OUT_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam SCH_OUT_FIFO_STATUS_OVRFLOW_LO = 1;
localparam SCH_OUT_FIFO_STATUS_OVRFLOW_HI = 1;
localparam SCH_OUT_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam SCH_OUT_FIFO_STATUS_UNDFLOW_LO = 0;
localparam SCH_OUT_FIFO_STATUS_UNDFLOW_HI = 0;
localparam SCH_OUT_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam SCH_OUT_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam SCH_OUT_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam SCH_OUT_FIFO_STATUS_WO_MASK = 32'h0;
localparam SCH_OUT_FIFO_STATUS_RESET = 32'h10;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} CFG_RX_FIFO_STATUS_t;

localparam CFG_RX_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam CFG_RX_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] CFG_RX_FIFO_STATUS_CR_ADDR = 48'h8001080;
localparam CFG_RX_FIFO_STATUS_SIZE = 32;
localparam CFG_RX_FIFO_STATUS_DEPTH_LO = 8;
localparam CFG_RX_FIFO_STATUS_DEPTH_HI = 31;
localparam CFG_RX_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam CFG_RX_FIFO_STATUS_FULL_LO = 7;
localparam CFG_RX_FIFO_STATUS_FULL_HI = 7;
localparam CFG_RX_FIFO_STATUS_FULL_RESET = 1'b0;
localparam CFG_RX_FIFO_STATUS_AFULL_LO = 6;
localparam CFG_RX_FIFO_STATUS_AFULL_HI = 6;
localparam CFG_RX_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam CFG_RX_FIFO_STATUS_RSVD5_LO = 5;
localparam CFG_RX_FIFO_STATUS_RSVD5_HI = 5;
localparam CFG_RX_FIFO_STATUS_RSVD5_RESET = 1'b0;
localparam CFG_RX_FIFO_STATUS_EMPTY_LO = 4;
localparam CFG_RX_FIFO_STATUS_EMPTY_HI = 4;
localparam CFG_RX_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam CFG_RX_FIFO_STATUS_RSVD32_LO = 2;
localparam CFG_RX_FIFO_STATUS_RSVD32_HI = 3;
localparam CFG_RX_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam CFG_RX_FIFO_STATUS_OVRFLOW_LO = 1;
localparam CFG_RX_FIFO_STATUS_OVRFLOW_HI = 1;
localparam CFG_RX_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam CFG_RX_FIFO_STATUS_UNDFLOW_LO = 0;
localparam CFG_RX_FIFO_STATUS_UNDFLOW_HI = 0;
localparam CFG_RX_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam CFG_RX_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam CFG_RX_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam CFG_RX_FIFO_STATUS_WO_MASK = 32'h0;
localparam CFG_RX_FIFO_STATUS_RESET = 32'h10;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} CWDI_RX_FIFO_STATUS_t;

localparam CWDI_RX_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam CWDI_RX_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] CWDI_RX_FIFO_STATUS_CR_ADDR = 48'h8001084;
localparam CWDI_RX_FIFO_STATUS_SIZE = 32;
localparam CWDI_RX_FIFO_STATUS_DEPTH_LO = 8;
localparam CWDI_RX_FIFO_STATUS_DEPTH_HI = 31;
localparam CWDI_RX_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam CWDI_RX_FIFO_STATUS_FULL_LO = 7;
localparam CWDI_RX_FIFO_STATUS_FULL_HI = 7;
localparam CWDI_RX_FIFO_STATUS_FULL_RESET = 1'b0;
localparam CWDI_RX_FIFO_STATUS_AFULL_LO = 6;
localparam CWDI_RX_FIFO_STATUS_AFULL_HI = 6;
localparam CWDI_RX_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam CWDI_RX_FIFO_STATUS_RSVD5_LO = 5;
localparam CWDI_RX_FIFO_STATUS_RSVD5_HI = 5;
localparam CWDI_RX_FIFO_STATUS_RSVD5_RESET = 1'b0;
localparam CWDI_RX_FIFO_STATUS_EMPTY_LO = 4;
localparam CWDI_RX_FIFO_STATUS_EMPTY_HI = 4;
localparam CWDI_RX_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam CWDI_RX_FIFO_STATUS_RSVD32_LO = 2;
localparam CWDI_RX_FIFO_STATUS_RSVD32_HI = 3;
localparam CWDI_RX_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam CWDI_RX_FIFO_STATUS_OVRFLOW_LO = 1;
localparam CWDI_RX_FIFO_STATUS_OVRFLOW_HI = 1;
localparam CWDI_RX_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam CWDI_RX_FIFO_STATUS_UNDFLOW_LO = 0;
localparam CWDI_RX_FIFO_STATUS_UNDFLOW_HI = 0;
localparam CWDI_RX_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam CWDI_RX_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam CWDI_RX_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam CWDI_RX_FIFO_STATUS_WO_MASK = 32'h0;
localparam CWDI_RX_FIFO_STATUS_RESET = 32'h10;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} HQM_ALARM_RX_FIFO_STATUS_t;

localparam HQM_ALARM_RX_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam HQM_ALARM_RX_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] HQM_ALARM_RX_FIFO_STATUS_CR_ADDR = 48'h8001088;
localparam HQM_ALARM_RX_FIFO_STATUS_SIZE = 32;
localparam HQM_ALARM_RX_FIFO_STATUS_DEPTH_LO = 8;
localparam HQM_ALARM_RX_FIFO_STATUS_DEPTH_HI = 31;
localparam HQM_ALARM_RX_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam HQM_ALARM_RX_FIFO_STATUS_FULL_LO = 7;
localparam HQM_ALARM_RX_FIFO_STATUS_FULL_HI = 7;
localparam HQM_ALARM_RX_FIFO_STATUS_FULL_RESET = 1'b0;
localparam HQM_ALARM_RX_FIFO_STATUS_AFULL_LO = 6;
localparam HQM_ALARM_RX_FIFO_STATUS_AFULL_HI = 6;
localparam HQM_ALARM_RX_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD5_LO = 5;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD5_HI = 5;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD5_RESET = 1'b0;
localparam HQM_ALARM_RX_FIFO_STATUS_EMPTY_LO = 4;
localparam HQM_ALARM_RX_FIFO_STATUS_EMPTY_HI = 4;
localparam HQM_ALARM_RX_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD32_LO = 2;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD32_HI = 3;
localparam HQM_ALARM_RX_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam HQM_ALARM_RX_FIFO_STATUS_OVRFLOW_LO = 1;
localparam HQM_ALARM_RX_FIFO_STATUS_OVRFLOW_HI = 1;
localparam HQM_ALARM_RX_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam HQM_ALARM_RX_FIFO_STATUS_UNDFLOW_LO = 0;
localparam HQM_ALARM_RX_FIFO_STATUS_UNDFLOW_HI = 0;
localparam HQM_ALARM_RX_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam HQM_ALARM_RX_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam HQM_ALARM_RX_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam HQM_ALARM_RX_FIFO_STATUS_WO_MASK = 32'h0;
localparam HQM_ALARM_RX_FIFO_STATUS_RESET = 32'h10;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] AEMPTY;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} SIF_ALARM_FIFO_STATUS_t;

localparam SIF_ALARM_FIFO_STATUS_REG_STRIDE = 48'h4;
localparam SIF_ALARM_FIFO_STATUS_REG_ENTRIES = 1;
localparam [47:0] SIF_ALARM_FIFO_STATUS_CR_ADDR = 48'h800108C;
localparam SIF_ALARM_FIFO_STATUS_SIZE = 32;
localparam SIF_ALARM_FIFO_STATUS_DEPTH_LO = 8;
localparam SIF_ALARM_FIFO_STATUS_DEPTH_HI = 31;
localparam SIF_ALARM_FIFO_STATUS_DEPTH_RESET = 24'h0;
localparam SIF_ALARM_FIFO_STATUS_FULL_LO = 7;
localparam SIF_ALARM_FIFO_STATUS_FULL_HI = 7;
localparam SIF_ALARM_FIFO_STATUS_FULL_RESET = 1'b0;
localparam SIF_ALARM_FIFO_STATUS_AFULL_LO = 6;
localparam SIF_ALARM_FIFO_STATUS_AFULL_HI = 6;
localparam SIF_ALARM_FIFO_STATUS_AFULL_RESET = 1'b0;
localparam SIF_ALARM_FIFO_STATUS_AEMPTY_LO = 5;
localparam SIF_ALARM_FIFO_STATUS_AEMPTY_HI = 5;
localparam SIF_ALARM_FIFO_STATUS_AEMPTY_RESET = 1'b1;
localparam SIF_ALARM_FIFO_STATUS_EMPTY_LO = 4;
localparam SIF_ALARM_FIFO_STATUS_EMPTY_HI = 4;
localparam SIF_ALARM_FIFO_STATUS_EMPTY_RESET = 1'b1;
localparam SIF_ALARM_FIFO_STATUS_RSVD32_LO = 2;
localparam SIF_ALARM_FIFO_STATUS_RSVD32_HI = 3;
localparam SIF_ALARM_FIFO_STATUS_RSVD32_RESET = 2'h0;
localparam SIF_ALARM_FIFO_STATUS_OVRFLOW_LO = 1;
localparam SIF_ALARM_FIFO_STATUS_OVRFLOW_HI = 1;
localparam SIF_ALARM_FIFO_STATUS_OVRFLOW_RESET = 1'b0;
localparam SIF_ALARM_FIFO_STATUS_UNDFLOW_LO = 0;
localparam SIF_ALARM_FIFO_STATUS_UNDFLOW_HI = 0;
localparam SIF_ALARM_FIFO_STATUS_UNDFLOW_RESET = 1'b0;
localparam SIF_ALARM_FIFO_STATUS_USEMASK = 32'hFFFFFFFF;
localparam SIF_ALARM_FIFO_STATUS_RO_MASK = 32'hFFFFFFFC;
localparam SIF_ALARM_FIFO_STATUS_WO_MASK = 32'h0;
localparam SIF_ALARM_FIFO_STATUS_RESET = 32'h30;

typedef struct packed {
    logic [24:0] reserved0;  // RSVD
    logic  [0:0] MSIX_DB_READY;  // RO/V
    logic  [1:0] MSIX_DB_DEPTH;  // RO/V
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] SYS_DB_READY;  // RO/V
    logic  [1:0] SYS_DB_DEPTH;  // RO/V
} ALARM_DB_STATUS_t;

localparam ALARM_DB_STATUS_REG_STRIDE = 48'h4;
localparam ALARM_DB_STATUS_REG_ENTRIES = 1;
localparam [47:0] ALARM_DB_STATUS_CR_ADDR = 48'h80010A0;
localparam ALARM_DB_STATUS_SIZE = 32;
localparam ALARM_DB_STATUS_MSIX_DB_READY_LO = 6;
localparam ALARM_DB_STATUS_MSIX_DB_READY_HI = 6;
localparam ALARM_DB_STATUS_MSIX_DB_READY_RESET = 1'h0;
localparam ALARM_DB_STATUS_MSIX_DB_DEPTH_LO = 4;
localparam ALARM_DB_STATUS_MSIX_DB_DEPTH_HI = 5;
localparam ALARM_DB_STATUS_MSIX_DB_DEPTH_RESET = 2'h0;
localparam ALARM_DB_STATUS_SYS_DB_READY_LO = 2;
localparam ALARM_DB_STATUS_SYS_DB_READY_HI = 2;
localparam ALARM_DB_STATUS_SYS_DB_READY_RESET = 1'h0;
localparam ALARM_DB_STATUS_SYS_DB_DEPTH_LO = 0;
localparam ALARM_DB_STATUS_SYS_DB_DEPTH_HI = 1;
localparam ALARM_DB_STATUS_SYS_DB_DEPTH_RESET = 2'h0;
localparam ALARM_DB_STATUS_USEMASK = 32'h77;
localparam ALARM_DB_STATUS_RO_MASK = 32'h77;
localparam ALARM_DB_STATUS_WO_MASK = 32'h0;
localparam ALARM_DB_STATUS_RESET = 32'h0;

typedef struct packed {
    logic [24:0] reserved0;  // RSVD
    logic  [0:0] HCW_ENQ_DB_READY;  // RO/V
    logic  [1:0] HCW_ENQ_DB_DEPTH;  // RO/V
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] HCW_ENQ_W_DB_READY;  // RO/V
    logic  [1:0] HCW_ENQ_W_DB_DEPTH;  // RO/V
} INGRESS_DB_STATUS_t;

localparam INGRESS_DB_STATUS_REG_STRIDE = 48'h4;
localparam INGRESS_DB_STATUS_REG_ENTRIES = 1;
localparam [47:0] INGRESS_DB_STATUS_CR_ADDR = 48'h80010A4;
localparam INGRESS_DB_STATUS_SIZE = 32;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_READY_LO = 6;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_READY_HI = 6;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_READY_RESET = 1'h0;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_DEPTH_LO = 4;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_DEPTH_HI = 5;
localparam INGRESS_DB_STATUS_HCW_ENQ_DB_DEPTH_RESET = 2'h0;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_READY_LO = 2;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_READY_HI = 2;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_READY_RESET = 1'h1;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_DEPTH_LO = 0;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_DEPTH_HI = 1;
localparam INGRESS_DB_STATUS_HCW_ENQ_W_DB_DEPTH_RESET = 2'h0;
localparam INGRESS_DB_STATUS_USEMASK = 32'h77;
localparam INGRESS_DB_STATUS_RO_MASK = 32'h77;
localparam INGRESS_DB_STATUS_WO_MASK = 32'h0;
localparam INGRESS_DB_STATUS_RESET = 32'h4;

typedef struct packed {
    logic [12:0] reserved0;  // RSVD
    logic  [0:0] PHDR_DB_READY;  // RO/V
    logic  [1:0] PHDR_DB_DEPTH;  // RO/V
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] PDATA_MS_DB_READY;  // RO/V
    logic  [1:0] PDATA_MS_DB_DEPTH;  // RO/V
    logic  [0:0] reserved2;  // RSVD
    logic  [0:0] PDATA_LS_DB_READY;  // RO/V
    logic  [1:0] PDATA_LS_DB_DEPTH;  // RO/V
    logic  [0:0] reserved3;  // RSVD
    logic  [0:0] CQ_OCC_DB_READY;  // RO/V
    logic  [1:0] CQ_OCC_DB_DEPTH;  // RO/V
    logic  [0:0] reserved4;  // RSVD
    logic  [0:0] HCW_SCHED_DB_READY;  // RO/V
    logic  [1:0] HCW_SCHED_DB_DEPTH;  // RO/V
} EGRESS_DB_STATUS_t;

localparam EGRESS_DB_STATUS_REG_STRIDE = 48'h4;
localparam EGRESS_DB_STATUS_REG_ENTRIES = 1;
localparam [47:0] EGRESS_DB_STATUS_CR_ADDR = 48'h80010A8;
localparam EGRESS_DB_STATUS_SIZE = 32;
localparam EGRESS_DB_STATUS_PHDR_DB_READY_LO = 18;
localparam EGRESS_DB_STATUS_PHDR_DB_READY_HI = 18;
localparam EGRESS_DB_STATUS_PHDR_DB_READY_RESET = 1'h1;
localparam EGRESS_DB_STATUS_PHDR_DB_DEPTH_LO = 16;
localparam EGRESS_DB_STATUS_PHDR_DB_DEPTH_HI = 17;
localparam EGRESS_DB_STATUS_PHDR_DB_DEPTH_RESET = 2'h0;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_READY_LO = 14;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_READY_HI = 14;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_READY_RESET = 1'h1;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_DEPTH_LO = 12;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_DEPTH_HI = 13;
localparam EGRESS_DB_STATUS_PDATA_MS_DB_DEPTH_RESET = 2'h0;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_READY_LO = 10;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_READY_HI = 10;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_READY_RESET = 1'h1;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_DEPTH_LO = 8;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_DEPTH_HI = 9;
localparam EGRESS_DB_STATUS_PDATA_LS_DB_DEPTH_RESET = 2'h0;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_READY_LO = 6;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_READY_HI = 6;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_READY_RESET = 1'h1;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_DEPTH_LO = 4;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_DEPTH_HI = 5;
localparam EGRESS_DB_STATUS_CQ_OCC_DB_DEPTH_RESET = 2'h0;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_READY_LO = 2;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_READY_HI = 2;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_READY_RESET = 1'h0;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_DEPTH_LO = 0;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_DEPTH_HI = 1;
localparam EGRESS_DB_STATUS_HCW_SCHED_DB_DEPTH_RESET = 2'h0;
localparam EGRESS_DB_STATUS_USEMASK = 32'h77777;
localparam EGRESS_DB_STATUS_RO_MASK = 32'h77777;
localparam EGRESS_DB_STATUS_WO_MASK = 32'h0;
localparam EGRESS_DB_STATUS_RESET = 32'h44440;

typedef struct packed {
    logic [22:0] reserved0;  // RSVD
    logic  [0:0] IMS_P2_V;  // RO/V
    logic  [0:0] IMS_P1_V;  // RO/V
    logic  [0:0] IMS_P0_V;  // RO/V
    logic  [0:0] MSIX_P2_V;  // RO/V
    logic  [0:0] MSIX_P1_V;  // RO/V
    logic  [0:0] MSIX_P0_V;  // RO/V
    logic  [0:0] CQ_OCC_P2_V;  // RO/V
    logic  [0:0] CQ_OCC_P1_V;  // RO/V
    logic  [0:0] CQ_OCC_P0_V;  // RO/V
} ALARM_STATUS_t;

localparam ALARM_STATUS_REG_STRIDE = 48'h4;
localparam ALARM_STATUS_REG_ENTRIES = 1;
localparam [47:0] ALARM_STATUS_CR_ADDR = 48'h80010AC;
localparam ALARM_STATUS_SIZE = 32;
localparam ALARM_STATUS_IMS_P2_V_LO = 8;
localparam ALARM_STATUS_IMS_P2_V_HI = 8;
localparam ALARM_STATUS_IMS_P2_V_RESET = 1'b0;
localparam ALARM_STATUS_IMS_P1_V_LO = 7;
localparam ALARM_STATUS_IMS_P1_V_HI = 7;
localparam ALARM_STATUS_IMS_P1_V_RESET = 1'b0;
localparam ALARM_STATUS_IMS_P0_V_LO = 6;
localparam ALARM_STATUS_IMS_P0_V_HI = 6;
localparam ALARM_STATUS_IMS_P0_V_RESET = 1'b0;
localparam ALARM_STATUS_MSIX_P2_V_LO = 5;
localparam ALARM_STATUS_MSIX_P2_V_HI = 5;
localparam ALARM_STATUS_MSIX_P2_V_RESET = 1'b0;
localparam ALARM_STATUS_MSIX_P1_V_LO = 4;
localparam ALARM_STATUS_MSIX_P1_V_HI = 4;
localparam ALARM_STATUS_MSIX_P1_V_RESET = 1'b0;
localparam ALARM_STATUS_MSIX_P0_V_LO = 3;
localparam ALARM_STATUS_MSIX_P0_V_HI = 3;
localparam ALARM_STATUS_MSIX_P0_V_RESET = 1'b0;
localparam ALARM_STATUS_CQ_OCC_P2_V_LO = 2;
localparam ALARM_STATUS_CQ_OCC_P2_V_HI = 2;
localparam ALARM_STATUS_CQ_OCC_P2_V_RESET = 1'b0;
localparam ALARM_STATUS_CQ_OCC_P1_V_LO = 1;
localparam ALARM_STATUS_CQ_OCC_P1_V_HI = 1;
localparam ALARM_STATUS_CQ_OCC_P1_V_RESET = 1'b0;
localparam ALARM_STATUS_CQ_OCC_P0_V_LO = 0;
localparam ALARM_STATUS_CQ_OCC_P0_V_HI = 0;
localparam ALARM_STATUS_CQ_OCC_P0_V_RESET = 1'b0;
localparam ALARM_STATUS_USEMASK = 32'h1FF;
localparam ALARM_STATUS_RO_MASK = 32'h1FF;
localparam ALARM_STATUS_WO_MASK = 32'h0;
localparam ALARM_STATUS_RESET = 32'h0;

typedef struct packed {
    logic [22:0] reserved0;  // RSVD
    logic  [0:0] P8_V;  // RO/V
    logic  [0:0] P7_V;  // RO/V
    logic  [0:0] P6_V;  // RO/V
    logic  [0:0] P5_V;  // RO/V
    logic  [0:0] P4_V;  // RO/V
    logic  [0:0] P3_V;  // RO/V
    logic  [0:0] P2_V;  // RO/V
    logic  [0:0] P1_V;  // RO/V
    logic  [0:0] P0_V;  // RO/V
} INGRESS_STATUS_t;

localparam INGRESS_STATUS_REG_STRIDE = 48'h4;
localparam INGRESS_STATUS_REG_ENTRIES = 1;
localparam [47:0] INGRESS_STATUS_CR_ADDR = 48'h80010B0;
localparam INGRESS_STATUS_SIZE = 32;
localparam INGRESS_STATUS_P8_V_LO = 8;
localparam INGRESS_STATUS_P8_V_HI = 8;
localparam INGRESS_STATUS_P8_V_RESET = 1'b0;
localparam INGRESS_STATUS_P7_V_LO = 7;
localparam INGRESS_STATUS_P7_V_HI = 7;
localparam INGRESS_STATUS_P7_V_RESET = 1'b0;
localparam INGRESS_STATUS_P6_V_LO = 6;
localparam INGRESS_STATUS_P6_V_HI = 6;
localparam INGRESS_STATUS_P6_V_RESET = 1'b0;
localparam INGRESS_STATUS_P5_V_LO = 5;
localparam INGRESS_STATUS_P5_V_HI = 5;
localparam INGRESS_STATUS_P5_V_RESET = 1'b0;
localparam INGRESS_STATUS_P4_V_LO = 4;
localparam INGRESS_STATUS_P4_V_HI = 4;
localparam INGRESS_STATUS_P4_V_RESET = 1'b0;
localparam INGRESS_STATUS_P3_V_LO = 3;
localparam INGRESS_STATUS_P3_V_HI = 3;
localparam INGRESS_STATUS_P3_V_RESET = 1'b0;
localparam INGRESS_STATUS_P2_V_LO = 2;
localparam INGRESS_STATUS_P2_V_HI = 2;
localparam INGRESS_STATUS_P2_V_RESET = 1'b0;
localparam INGRESS_STATUS_P1_V_LO = 1;
localparam INGRESS_STATUS_P1_V_HI = 1;
localparam INGRESS_STATUS_P1_V_RESET = 1'b0;
localparam INGRESS_STATUS_P0_V_LO = 0;
localparam INGRESS_STATUS_P0_V_HI = 0;
localparam INGRESS_STATUS_P0_V_RESET = 1'b0;
localparam INGRESS_STATUS_USEMASK = 32'h1FF;
localparam INGRESS_STATUS_RO_MASK = 32'h1FF;
localparam INGRESS_STATUS_WO_MASK = 32'h0;
localparam INGRESS_STATUS_RESET = 32'h0;

typedef struct packed {
    logic [23:0] reserved0;  // RSVD
    logic  [0:0] P5_HCW_V;  // RO/V
    logic  [0:0] P5_INT_V;  // RO/V
    logic  [0:0] SCH_P5_V;  // RO/V
    logic  [0:0] SCH_P4_V;  // RO/V
    logic  [0:0] SCH_P3_V;  // RO/V
    logic  [0:0] SCH_P2_V;  // RO/V
    logic  [0:0] SCH_P1_V;  // RO/V
    logic  [0:0] SCH_P0_V;  // RO/V
} EGRESS_STATUS_t;

localparam EGRESS_STATUS_REG_STRIDE = 48'h4;
localparam EGRESS_STATUS_REG_ENTRIES = 1;
localparam [47:0] EGRESS_STATUS_CR_ADDR = 48'h80010B4;
localparam EGRESS_STATUS_SIZE = 32;
localparam EGRESS_STATUS_P5_HCW_V_LO = 7;
localparam EGRESS_STATUS_P5_HCW_V_HI = 7;
localparam EGRESS_STATUS_P5_HCW_V_RESET = 1'b0;
localparam EGRESS_STATUS_P5_INT_V_LO = 6;
localparam EGRESS_STATUS_P5_INT_V_HI = 6;
localparam EGRESS_STATUS_P5_INT_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P5_V_LO = 5;
localparam EGRESS_STATUS_SCH_P5_V_HI = 5;
localparam EGRESS_STATUS_SCH_P5_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P4_V_LO = 4;
localparam EGRESS_STATUS_SCH_P4_V_HI = 4;
localparam EGRESS_STATUS_SCH_P4_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P3_V_LO = 3;
localparam EGRESS_STATUS_SCH_P3_V_HI = 3;
localparam EGRESS_STATUS_SCH_P3_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P2_V_LO = 2;
localparam EGRESS_STATUS_SCH_P2_V_HI = 2;
localparam EGRESS_STATUS_SCH_P2_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P1_V_LO = 1;
localparam EGRESS_STATUS_SCH_P1_V_HI = 1;
localparam EGRESS_STATUS_SCH_P1_V_RESET = 1'b0;
localparam EGRESS_STATUS_SCH_P0_V_LO = 0;
localparam EGRESS_STATUS_SCH_P0_V_HI = 0;
localparam EGRESS_STATUS_SCH_P0_V_RESET = 1'b0;
localparam EGRESS_STATUS_USEMASK = 32'hFF;
localparam EGRESS_STATUS_RO_MASK = 32'hFF;
localparam EGRESS_STATUS_WO_MASK = 32'h0;
localparam EGRESS_STATUS_RESET = 32'h0;

typedef struct packed {
    logic  [4:0] reserved0;  // RSVD
    logic  [0:0] SCH_P2_SOP;  // RO/V
    logic  [0:0] SCH_P2_INT_V;  // RO/V
    logic  [0:0] SCH_P2_DATA_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_V;  // RO/V
    logic  [4:0] SCH_SM_STATE;  // RO/V
    logic  [0:0] PD_FIFO_AFULL;  // RO/V
    logic  [0:0] PH_FIFO_AFULL;  // RO/V
    logic  [7:0] SCH_CQ;  // RO/V
    logic  [1:0] SCH_BEAT;  // RO/V
    logic  [0:0] SCH_LDB;  // RO/V
    logic  [0:0] SCH_HCW_V;  // RO/V
    logic  [0:0] SCH_INT_V;  // RO/V
    logic  [0:0] SCH_P2_V;  // RO/V
    logic  [0:0] SCH_P1_V;  // RO/V
    logic  [0:0] SCH_P0_V;  // RO/V
} WBUF_STATUS_t;

localparam WBUF_STATUS_REG_STRIDE = 48'h4;
localparam WBUF_STATUS_REG_ENTRIES = 1;
localparam [47:0] WBUF_STATUS_CR_ADDR = 48'h80010B8;
localparam WBUF_STATUS_SIZE = 32;
localparam WBUF_STATUS_SCH_P2_SOP_LO = 26;
localparam WBUF_STATUS_SCH_P2_SOP_HI = 26;
localparam WBUF_STATUS_SCH_P2_SOP_RESET = 1'h0;
localparam WBUF_STATUS_SCH_P2_INT_V_LO = 25;
localparam WBUF_STATUS_SCH_P2_INT_V_HI = 25;
localparam WBUF_STATUS_SCH_P2_INT_V_RESET = 1'h0;
localparam WBUF_STATUS_SCH_P2_DATA_V_LO = 24;
localparam WBUF_STATUS_SCH_P2_DATA_V_HI = 24;
localparam WBUF_STATUS_SCH_P2_DATA_V_RESET = 1'h0;
localparam WBUF_STATUS_SCH_P2_HDR_V_LO = 23;
localparam WBUF_STATUS_SCH_P2_HDR_V_HI = 23;
localparam WBUF_STATUS_SCH_P2_HDR_V_RESET = 1'h0;
localparam WBUF_STATUS_SCH_SM_STATE_LO = 18;
localparam WBUF_STATUS_SCH_SM_STATE_HI = 22;
localparam WBUF_STATUS_SCH_SM_STATE_RESET = 5'h1;
localparam WBUF_STATUS_PD_FIFO_AFULL_LO = 17;
localparam WBUF_STATUS_PD_FIFO_AFULL_HI = 17;
localparam WBUF_STATUS_PD_FIFO_AFULL_RESET = 1'b0;
localparam WBUF_STATUS_PH_FIFO_AFULL_LO = 16;
localparam WBUF_STATUS_PH_FIFO_AFULL_HI = 16;
localparam WBUF_STATUS_PH_FIFO_AFULL_RESET = 1'b0;
localparam WBUF_STATUS_SCH_CQ_LO = 8;
localparam WBUF_STATUS_SCH_CQ_HI = 15;
localparam WBUF_STATUS_SCH_CQ_RESET = 8'h0;
localparam WBUF_STATUS_SCH_BEAT_LO = 6;
localparam WBUF_STATUS_SCH_BEAT_HI = 7;
localparam WBUF_STATUS_SCH_BEAT_RESET = 2'h0;
localparam WBUF_STATUS_SCH_LDB_LO = 5;
localparam WBUF_STATUS_SCH_LDB_HI = 5;
localparam WBUF_STATUS_SCH_LDB_RESET = 1'b0;
localparam WBUF_STATUS_SCH_HCW_V_LO = 4;
localparam WBUF_STATUS_SCH_HCW_V_HI = 4;
localparam WBUF_STATUS_SCH_HCW_V_RESET = 1'b0;
localparam WBUF_STATUS_SCH_INT_V_LO = 3;
localparam WBUF_STATUS_SCH_INT_V_HI = 3;
localparam WBUF_STATUS_SCH_INT_V_RESET = 1'b0;
localparam WBUF_STATUS_SCH_P2_V_LO = 2;
localparam WBUF_STATUS_SCH_P2_V_HI = 2;
localparam WBUF_STATUS_SCH_P2_V_RESET = 1'b0;
localparam WBUF_STATUS_SCH_P1_V_LO = 1;
localparam WBUF_STATUS_SCH_P1_V_HI = 1;
localparam WBUF_STATUS_SCH_P1_V_RESET = 1'b0;
localparam WBUF_STATUS_SCH_P0_V_LO = 0;
localparam WBUF_STATUS_SCH_P0_V_HI = 0;
localparam WBUF_STATUS_SCH_P0_V_RESET = 1'b0;
localparam WBUF_STATUS_USEMASK = 32'h7FFFFFF;
localparam WBUF_STATUS_RO_MASK = 32'h7FFFFFF;
localparam WBUF_STATUS_WO_MASK = 32'h0;
localparam WBUF_STATUS_RESET = 32'h40000;

typedef struct packed {
    logic [14:0] reserved0;  // RSVD
    logic  [5:0] OPT_IN_PROG_CQ;  // RO/V
    logic  [0:0] OPT_IN_PROG;  // RO/V
    logic  [0:0] OPT_ERR;  // RO/V
    logic  [3:0] OPT_DATA_VALID;  // RO/V
    logic  [0:0] CQ_OCC_INT_BUSY;  // RO/V
    logic  [0:0] ARB_HOLD;  // RO/V
    logic  [0:0] ARB_WINNER;  // RO/V
    logic  [1:0] ARB_REQS;  // RO/V
} WBUF_STATUS2_t;

localparam WBUF_STATUS2_REG_STRIDE = 48'h4;
localparam WBUF_STATUS2_REG_ENTRIES = 1;
localparam [47:0] WBUF_STATUS2_CR_ADDR = 48'h80010BC;
localparam WBUF_STATUS2_SIZE = 32;
localparam WBUF_STATUS2_OPT_IN_PROG_CQ_LO = 11;
localparam WBUF_STATUS2_OPT_IN_PROG_CQ_HI = 16;
localparam WBUF_STATUS2_OPT_IN_PROG_CQ_RESET = 6'h0;
localparam WBUF_STATUS2_OPT_IN_PROG_LO = 10;
localparam WBUF_STATUS2_OPT_IN_PROG_HI = 10;
localparam WBUF_STATUS2_OPT_IN_PROG_RESET = 1'b0;
localparam WBUF_STATUS2_OPT_ERR_LO = 9;
localparam WBUF_STATUS2_OPT_ERR_HI = 9;
localparam WBUF_STATUS2_OPT_ERR_RESET = 1'b0;
localparam WBUF_STATUS2_OPT_DATA_VALID_LO = 5;
localparam WBUF_STATUS2_OPT_DATA_VALID_HI = 8;
localparam WBUF_STATUS2_OPT_DATA_VALID_RESET = 4'h0;
localparam WBUF_STATUS2_CQ_OCC_INT_BUSY_LO = 4;
localparam WBUF_STATUS2_CQ_OCC_INT_BUSY_HI = 4;
localparam WBUF_STATUS2_CQ_OCC_INT_BUSY_RESET = 1'b0;
localparam WBUF_STATUS2_ARB_HOLD_LO = 3;
localparam WBUF_STATUS2_ARB_HOLD_HI = 3;
localparam WBUF_STATUS2_ARB_HOLD_RESET = 1'b0;
localparam WBUF_STATUS2_ARB_WINNER_LO = 2;
localparam WBUF_STATUS2_ARB_WINNER_HI = 2;
localparam WBUF_STATUS2_ARB_WINNER_RESET = 1'b0;
localparam WBUF_STATUS2_ARB_REQS_LO = 0;
localparam WBUF_STATUS2_ARB_REQS_HI = 1;
localparam WBUF_STATUS2_ARB_REQS_RESET = 2'h0;
localparam WBUF_STATUS2_USEMASK = 32'h1FFFF;
localparam WBUF_STATUS2_RO_MASK = 32'h1FFFF;
localparam WBUF_STATUS2_WO_MASK = 32'h0;
localparam WBUF_STATUS2_RESET = 32'h0;

typedef struct packed {
    logic  [2:0] reserved0;  // RSVD
    logic  [2:0] SCH_P2_HDR_Q_BEATS;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_LDB;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_IS_PF;  // RO/V
    logic  [3:0] SCH_P2_HDR_Q_VF;  // RO/V
    logic  [0:0] SCH_P2_HOLD;  // RO/V
    logic  [0:0] SCH_P2_LOAD;  // RO/V
    logic  [0:0] SCH_P2_V_Q;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_DATA_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_INT_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_SOP;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_EOP;  // RO/V
    logic  [0:0] SCH_HDR_V;  // RO/V
    logic  [0:0] SCH_DATA_V;  // RO/V
    logic  [0:0] SCH_DATA_FIRST;  // RO/V
    logic  [0:0] SCH_DATA_LAST;  // RO/V
    logic  [0:0] CQ_OCC_INT_BUSY;  // RO/V
    logic  [0:0] PHDR_FIFO_AFULL_Q;  // RO/V
    logic  [0:0] PDATA_FIFO_AFULL_Q;  // RO/V
    logic  [0:0] MSI_MSIX_ARB_REQ;  // RO/V
    logic  [0:0] SCH_ARB_REQ;  // RO/V
    logic  [0:0] ARB_WINNER_V;  // RO/V
    logic  [0:0] ARB_WINNER;  // RO/V
    logic  [0:0] ARB_HOLD_Q;  // RO/V
    logic  [0:0] ARB_WINNER_Q;  // RO/V
} WBUF_DEBUG_t;

localparam WBUF_DEBUG_REG_STRIDE = 48'h4;
localparam WBUF_DEBUG_REG_ENTRIES = 1;
localparam [47:0] WBUF_DEBUG_CR_ADDR = 48'h80010C0;
localparam WBUF_DEBUG_SIZE = 32;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_BEATS_LO = 26;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_BEATS_HI = 28;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_BEATS_RESET = 3'h0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_LDB_LO = 25;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_LDB_HI = 25;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_LDB_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_IS_PF_LO = 24;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_IS_PF_HI = 24;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_IS_PF_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_VF_LO = 20;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_VF_HI = 23;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_VF_RESET = 4'h0;
localparam WBUF_DEBUG_SCH_P2_HOLD_LO = 19;
localparam WBUF_DEBUG_SCH_P2_HOLD_HI = 19;
localparam WBUF_DEBUG_SCH_P2_HOLD_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_LOAD_LO = 18;
localparam WBUF_DEBUG_SCH_P2_LOAD_HI = 18;
localparam WBUF_DEBUG_SCH_P2_LOAD_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_V_Q_LO = 17;
localparam WBUF_DEBUG_SCH_P2_V_Q_HI = 17;
localparam WBUF_DEBUG_SCH_P2_V_Q_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_DATA_V_LO = 16;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_DATA_V_HI = 16;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_DATA_V_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_INT_V_LO = 15;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_INT_V_HI = 15;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_INT_V_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_SOP_LO = 14;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_SOP_HI = 14;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_SOP_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_EOP_LO = 13;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_EOP_HI = 13;
localparam WBUF_DEBUG_SCH_P2_HDR_Q_EOP_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_HDR_V_LO = 12;
localparam WBUF_DEBUG_SCH_HDR_V_HI = 12;
localparam WBUF_DEBUG_SCH_HDR_V_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_DATA_V_LO = 11;
localparam WBUF_DEBUG_SCH_DATA_V_HI = 11;
localparam WBUF_DEBUG_SCH_DATA_V_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_DATA_FIRST_LO = 10;
localparam WBUF_DEBUG_SCH_DATA_FIRST_HI = 10;
localparam WBUF_DEBUG_SCH_DATA_FIRST_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_DATA_LAST_LO = 9;
localparam WBUF_DEBUG_SCH_DATA_LAST_HI = 9;
localparam WBUF_DEBUG_SCH_DATA_LAST_RESET = 1'b0;
localparam WBUF_DEBUG_CQ_OCC_INT_BUSY_LO = 8;
localparam WBUF_DEBUG_CQ_OCC_INT_BUSY_HI = 8;
localparam WBUF_DEBUG_CQ_OCC_INT_BUSY_RESET = 1'b0;
localparam WBUF_DEBUG_PHDR_FIFO_AFULL_Q_LO = 7;
localparam WBUF_DEBUG_PHDR_FIFO_AFULL_Q_HI = 7;
localparam WBUF_DEBUG_PHDR_FIFO_AFULL_Q_RESET = 1'b0;
localparam WBUF_DEBUG_PDATA_FIFO_AFULL_Q_LO = 6;
localparam WBUF_DEBUG_PDATA_FIFO_AFULL_Q_HI = 6;
localparam WBUF_DEBUG_PDATA_FIFO_AFULL_Q_RESET = 1'b0;
localparam WBUF_DEBUG_MSI_MSIX_ARB_REQ_LO = 5;
localparam WBUF_DEBUG_MSI_MSIX_ARB_REQ_HI = 5;
localparam WBUF_DEBUG_MSI_MSIX_ARB_REQ_RESET = 1'b0;
localparam WBUF_DEBUG_SCH_ARB_REQ_LO = 4;
localparam WBUF_DEBUG_SCH_ARB_REQ_HI = 4;
localparam WBUF_DEBUG_SCH_ARB_REQ_RESET = 1'b0;
localparam WBUF_DEBUG_ARB_WINNER_V_LO = 3;
localparam WBUF_DEBUG_ARB_WINNER_V_HI = 3;
localparam WBUF_DEBUG_ARB_WINNER_V_RESET = 1'b0;
localparam WBUF_DEBUG_ARB_WINNER_LO = 2;
localparam WBUF_DEBUG_ARB_WINNER_HI = 2;
localparam WBUF_DEBUG_ARB_WINNER_RESET = 1'b0;
localparam WBUF_DEBUG_ARB_HOLD_Q_LO = 1;
localparam WBUF_DEBUG_ARB_HOLD_Q_HI = 1;
localparam WBUF_DEBUG_ARB_HOLD_Q_RESET = 1'b0;
localparam WBUF_DEBUG_ARB_WINNER_Q_LO = 0;
localparam WBUF_DEBUG_ARB_WINNER_Q_HI = 0;
localparam WBUF_DEBUG_ARB_WINNER_Q_RESET = 1'b0;
localparam WBUF_DEBUG_USEMASK = 32'h1FFFFFFF;
localparam WBUF_DEBUG_RO_MASK = 32'h1FFFFFFF;
localparam WBUF_DEBUG_WO_MASK = 32'h0;
localparam WBUF_DEBUG_RESET = 32'h0;

typedef struct packed {
    logic [14:0] reserved0;  // RSVD
    logic  [0:0] PP_IS_LDB;  // RW/1C/V
    logic  [5:0] PP;  // RW/1C/V
    logic  [3:0] CL;  // RW/1C/V
    logic  [1:0] CLI;  // RW/1C/V
    logic  [0:0] CL_LAST;  // RW/1C/V
    logic  [2:0] ROB_V_CNT;  // RW/1C/V
} ROB_SYNDROME_t;

localparam ROB_SYNDROME_REG_STRIDE = 48'h4;
localparam ROB_SYNDROME_REG_ENTRIES = 1;
localparam [47:0] ROB_SYNDROME_CR_ADDR = 48'h80010C4;
localparam ROB_SYNDROME_SIZE = 32;
localparam ROB_SYNDROME_PP_IS_LDB_LO = 16;
localparam ROB_SYNDROME_PP_IS_LDB_HI = 16;
localparam ROB_SYNDROME_PP_IS_LDB_RESET = 1'h0;
localparam ROB_SYNDROME_PP_LO = 10;
localparam ROB_SYNDROME_PP_HI = 15;
localparam ROB_SYNDROME_PP_RESET = 6'h0;
localparam ROB_SYNDROME_CL_LO = 6;
localparam ROB_SYNDROME_CL_HI = 9;
localparam ROB_SYNDROME_CL_RESET = 4'h0;
localparam ROB_SYNDROME_CLI_LO = 4;
localparam ROB_SYNDROME_CLI_HI = 5;
localparam ROB_SYNDROME_CLI_RESET = 2'h0;
localparam ROB_SYNDROME_CL_LAST_LO = 3;
localparam ROB_SYNDROME_CL_LAST_HI = 3;
localparam ROB_SYNDROME_CL_LAST_RESET = 1'h0;
localparam ROB_SYNDROME_ROB_V_CNT_LO = 0;
localparam ROB_SYNDROME_ROB_V_CNT_HI = 2;
localparam ROB_SYNDROME_ROB_V_CNT_RESET = 3'h0;
localparam ROB_SYNDROME_USEMASK = 32'h1FFFF;
localparam ROB_SYNDROME_RO_MASK = 32'h0;
localparam ROB_SYNDROME_WO_MASK = 32'h0;
localparam ROB_SYNDROME_RESET = 32'h0;

typedef struct packed {
    logic [29:0] ADDR_31_2;  // RO/V
    logic  [1:0] TC_SEL;  // RO/V
} PHDR_DEBUG_0_t;

localparam PHDR_DEBUG_0_REG_STRIDE = 48'h4;
localparam PHDR_DEBUG_0_REG_ENTRIES = 1;
localparam [47:0] PHDR_DEBUG_0_CR_ADDR = 48'h8001100;
localparam PHDR_DEBUG_0_SIZE = 32;
localparam PHDR_DEBUG_0_ADDR_31_2_LO = 2;
localparam PHDR_DEBUG_0_ADDR_31_2_HI = 31;
localparam PHDR_DEBUG_0_ADDR_31_2_RESET = 30'h0;
localparam PHDR_DEBUG_0_TC_SEL_LO = 0;
localparam PHDR_DEBUG_0_TC_SEL_HI = 1;
localparam PHDR_DEBUG_0_TC_SEL_RESET = 2'h0;
localparam PHDR_DEBUG_0_USEMASK = 32'hFFFFFFFF;
localparam PHDR_DEBUG_0_RO_MASK = 32'hFFFFFFFF;
localparam PHDR_DEBUG_0_WO_MASK = 32'h0;
localparam PHDR_DEBUG_0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] ADDR_63_32;  // RO/V
} PHDR_DEBUG_1_t;

localparam PHDR_DEBUG_1_REG_STRIDE = 48'h4;
localparam PHDR_DEBUG_1_REG_ENTRIES = 1;
localparam [47:0] PHDR_DEBUG_1_CR_ADDR = 48'h8001104;
localparam PHDR_DEBUG_1_SIZE = 32;
localparam PHDR_DEBUG_1_ADDR_63_32_LO = 0;
localparam PHDR_DEBUG_1_ADDR_63_32_HI = 31;
localparam PHDR_DEBUG_1_ADDR_63_32_RESET = 32'h0;
localparam PHDR_DEBUG_1_USEMASK = 32'hFFFFFFFF;
localparam PHDR_DEBUG_1_RO_MASK = 32'hFFFFFFFF;
localparam PHDR_DEBUG_1_WO_MASK = 32'h0;
localparam PHDR_DEBUG_1_RESET = 32'h0;

typedef struct packed {
    logic [11:0] reserved0;  // RSVD
    logic  [0:0] INVALID;  // RO/V
    logic  [0:0] RO;  // RO/V
    logic  [0:0] CQ_V;  // RO/V
    logic  [0:0] LDB;  // RO/V
    logic  [5:0] CQ;  // RO/V
    logic  [2:0] NUM_HCWS;  // RO/V
    logic  [1:0] SRC;  // RO/V
    logic  [4:0] LENGTH;  // RO/V
} PHDR_DEBUG_2_t;

localparam PHDR_DEBUG_2_REG_STRIDE = 48'h4;
localparam PHDR_DEBUG_2_REG_ENTRIES = 1;
localparam [47:0] PHDR_DEBUG_2_CR_ADDR = 48'h8001108;
localparam PHDR_DEBUG_2_SIZE = 32;
localparam PHDR_DEBUG_2_INVALID_LO = 19;
localparam PHDR_DEBUG_2_INVALID_HI = 19;
localparam PHDR_DEBUG_2_INVALID_RESET = 1'b0;
localparam PHDR_DEBUG_2_RO_LO = 18;
localparam PHDR_DEBUG_2_RO_HI = 18;
localparam PHDR_DEBUG_2_RO_RESET = 1'b0;
localparam PHDR_DEBUG_2_CQ_V_LO = 17;
localparam PHDR_DEBUG_2_CQ_V_HI = 17;
localparam PHDR_DEBUG_2_CQ_V_RESET = 1'b0;
localparam PHDR_DEBUG_2_LDB_LO = 16;
localparam PHDR_DEBUG_2_LDB_HI = 16;
localparam PHDR_DEBUG_2_LDB_RESET = 1'b0;
localparam PHDR_DEBUG_2_CQ_LO = 10;
localparam PHDR_DEBUG_2_CQ_HI = 15;
localparam PHDR_DEBUG_2_CQ_RESET = 6'h0;
localparam PHDR_DEBUG_2_NUM_HCWS_LO = 7;
localparam PHDR_DEBUG_2_NUM_HCWS_HI = 9;
localparam PHDR_DEBUG_2_NUM_HCWS_RESET = 3'h0;
localparam PHDR_DEBUG_2_SRC_LO = 5;
localparam PHDR_DEBUG_2_SRC_HI = 6;
localparam PHDR_DEBUG_2_SRC_RESET = 2'h0;
localparam PHDR_DEBUG_2_LENGTH_LO = 0;
localparam PHDR_DEBUG_2_LENGTH_HI = 4;
localparam PHDR_DEBUG_2_LENGTH_RESET = 5'h0;
localparam PHDR_DEBUG_2_USEMASK = 32'hFFFFF;
localparam PHDR_DEBUG_2_RO_MASK = 32'hFFFFF;
localparam PHDR_DEBUG_2_WO_MASK = 32'h0;
localparam PHDR_DEBUG_2_RESET = 32'h0;

typedef struct packed {
    logic [31:0] DATA;  // RO/V
} HQM_PDATA_DEBUG_t;

localparam HQM_PDATA_DEBUG_REG_STRIDE = 48'h4;
localparam HQM_PDATA_DEBUG_REG_ENTRIES = 16;
localparam [15:0][47:0] HQM_PDATA_DEBUG_CR_ADDR = {48'h800114C, 48'h8001148, 48'h8001144, 48'h8001140, 48'h800113C, 48'h8001138, 48'h8001134, 48'h8001130, 48'h800112C, 48'h8001128, 48'h8001124, 48'h8001120, 48'h800111C, 48'h8001118, 48'h8001114, 48'h8001110};
localparam HQM_PDATA_DEBUG_SIZE = 32;
localparam HQM_PDATA_DEBUG_DATA_LO = 0;
localparam HQM_PDATA_DEBUG_DATA_HI = 31;
localparam HQM_PDATA_DEBUG_DATA_RESET = 32'h0;
localparam HQM_PDATA_DEBUG_USEMASK = 32'hFFFFFFFF;
localparam HQM_PDATA_DEBUG_RO_MASK = 32'hFFFFFFFF;
localparam HQM_PDATA_DEBUG_WO_MASK = 32'h0;
localparam HQM_PDATA_DEBUG_RESET = 32'h0;

typedef struct packed {
    logic  [5:0] reserved0;  // RSVD
    logic  [0:0] PARITY;  // RO/V
    logic  [0:0] AO_V;  // RO/V
    logic  [0:0] INSERT_TS;  // RO/V
    logic  [0:0] QE_IS_LDB;  // RO/V
    logic  [0:0] PP_IS_LDB;  // RO/V
    logic  [4:0] VAS;  // RO/V
    logic  [7:0] QID;  // RO/V
    logic  [7:0] PP;  // RO/V
} HCW_REQ_DEBUG_t;

localparam HCW_REQ_DEBUG_REG_STRIDE = 48'h4;
localparam HCW_REQ_DEBUG_REG_ENTRIES = 1;
localparam [47:0] HCW_REQ_DEBUG_CR_ADDR = 48'h8001150;
localparam HCW_REQ_DEBUG_SIZE = 32;
localparam HCW_REQ_DEBUG_PARITY_LO = 25;
localparam HCW_REQ_DEBUG_PARITY_HI = 25;
localparam HCW_REQ_DEBUG_PARITY_RESET = 1'b0;
localparam HCW_REQ_DEBUG_AO_V_LO = 24;
localparam HCW_REQ_DEBUG_AO_V_HI = 24;
localparam HCW_REQ_DEBUG_AO_V_RESET = 1'b0;
localparam HCW_REQ_DEBUG_INSERT_TS_LO = 23;
localparam HCW_REQ_DEBUG_INSERT_TS_HI = 23;
localparam HCW_REQ_DEBUG_INSERT_TS_RESET = 1'b0;
localparam HCW_REQ_DEBUG_QE_IS_LDB_LO = 22;
localparam HCW_REQ_DEBUG_QE_IS_LDB_HI = 22;
localparam HCW_REQ_DEBUG_QE_IS_LDB_RESET = 1'b0;
localparam HCW_REQ_DEBUG_PP_IS_LDB_LO = 21;
localparam HCW_REQ_DEBUG_PP_IS_LDB_HI = 21;
localparam HCW_REQ_DEBUG_PP_IS_LDB_RESET = 1'b0;
localparam HCW_REQ_DEBUG_VAS_LO = 16;
localparam HCW_REQ_DEBUG_VAS_HI = 20;
localparam HCW_REQ_DEBUG_VAS_RESET = 5'h0;
localparam HCW_REQ_DEBUG_QID_LO = 8;
localparam HCW_REQ_DEBUG_QID_HI = 15;
localparam HCW_REQ_DEBUG_QID_RESET = 8'h0;
localparam HCW_REQ_DEBUG_PP_LO = 0;
localparam HCW_REQ_DEBUG_PP_HI = 7;
localparam HCW_REQ_DEBUG_PP_RESET = 8'h0;
localparam HCW_REQ_DEBUG_USEMASK = 32'h3FFFFFF;
localparam HCW_REQ_DEBUG_RO_MASK = 32'h3FFFFFF;
localparam HCW_REQ_DEBUG_WO_MASK = 32'h0;
localparam HCW_REQ_DEBUG_RESET = 32'h0;

typedef struct packed {
    logic [31:0] DATA;  // RO/V
} HQM_HCW_DATA_DEBUG_t;

localparam HQM_HCW_DATA_DEBUG_REG_STRIDE = 48'h4;
localparam HQM_HCW_DATA_DEBUG_REG_ENTRIES = 4;
localparam [3:0][47:0] HQM_HCW_DATA_DEBUG_CR_ADDR = {48'h800116C, 48'h8001168, 48'h8001164, 48'h8001160};
localparam HQM_HCW_DATA_DEBUG_SIZE = 32;
localparam HQM_HCW_DATA_DEBUG_DATA_LO = 0;
localparam HQM_HCW_DATA_DEBUG_DATA_HI = 31;
localparam HQM_HCW_DATA_DEBUG_DATA_RESET = 32'h0;
localparam HQM_HCW_DATA_DEBUG_USEMASK = 32'hFFFFFFFF;
localparam HQM_HCW_DATA_DEBUG_RO_MASK = 32'hFFFFFFFF;
localparam HQM_HCW_DATA_DEBUG_WO_MASK = 32'h0;
localparam HQM_HCW_DATA_DEBUG_RESET = 32'h0;

typedef struct packed {
    logic  [1:0] VERSION;  // RO
    logic  [0:0] reserved0;  // RSVD
    logic  [4:0] TIMER_PRESCALE;  // RW
    logic  [0:0] reserved1;  // RSVD
    logic  [0:0] STATTIMEROVFL;  // RW
    logic  [0:0] INTTIMEROVFL;  // RW
    logic  [0:0] STOPTIMEROVFL;  // RW
    logic  [0:0] STATCOUNTER1OVFL;  // RW
    logic  [0:0] STATCOUNTER0OVFL;  // RW
    logic  [0:0] INTCOUNTEROVFL;  // RW
    logic  [0:0] STOPCOUNTEROVFL;  // RW
    logic  [3:0] SMON_MODE;  // RW
    logic  [0:0] SMON1_FUNCTION_COMPARE;  // RW
    logic  [2:0] SMON1_FUNCTION;  // RW
    logic  [0:0] SMON0_FUNCTION_COMPARE;  // RW
    logic  [2:0] SMON0_FUNCTION;  // RW
    logic  [2:0] reserved2;  // RSVD
    logic  [0:0] SMON_ENABLE;  // RW
} AW_SMON_CONFIGURATION0_t;

localparam AW_SMON_CONFIGURATION0_REG_STRIDE = 48'h4;
localparam AW_SMON_CONFIGURATION0_REG_ENTRIES = 1;
localparam SMON_REGFILE_STRIDE = 48'h40;
localparam SMON_REGFILE_ENTRIES = 2;
localparam AW_SMON_CONFIGURATION0_CR_ADDR = 48'h8002000;
localparam AW_SMON_CONFIGURATION0_SIZE = 32;
localparam AW_SMON_CONFIGURATION0_VERSION_LO = 30;
localparam AW_SMON_CONFIGURATION0_VERSION_HI = 31;
localparam AW_SMON_CONFIGURATION0_VERSION_RESET = 2'h1;
localparam AW_SMON_CONFIGURATION0_TIMER_PRESCALE_LO = 24;
localparam AW_SMON_CONFIGURATION0_TIMER_PRESCALE_HI = 28;
localparam AW_SMON_CONFIGURATION0_TIMER_PRESCALE_RESET = 5'h0;
localparam AW_SMON_CONFIGURATION0_STATTIMEROVFL_LO = 22;
localparam AW_SMON_CONFIGURATION0_STATTIMEROVFL_HI = 22;
localparam AW_SMON_CONFIGURATION0_STATTIMEROVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_INTTIMEROVFL_LO = 21;
localparam AW_SMON_CONFIGURATION0_INTTIMEROVFL_HI = 21;
localparam AW_SMON_CONFIGURATION0_INTTIMEROVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_STOPTIMEROVFL_LO = 20;
localparam AW_SMON_CONFIGURATION0_STOPTIMEROVFL_HI = 20;
localparam AW_SMON_CONFIGURATION0_STOPTIMEROVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER1OVFL_LO = 19;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER1OVFL_HI = 19;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER1OVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER0OVFL_LO = 18;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER0OVFL_HI = 18;
localparam AW_SMON_CONFIGURATION0_STATCOUNTER0OVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_INTCOUNTEROVFL_LO = 17;
localparam AW_SMON_CONFIGURATION0_INTCOUNTEROVFL_HI = 17;
localparam AW_SMON_CONFIGURATION0_INTCOUNTEROVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_STOPCOUNTEROVFL_LO = 16;
localparam AW_SMON_CONFIGURATION0_STOPCOUNTEROVFL_HI = 16;
localparam AW_SMON_CONFIGURATION0_STOPCOUNTEROVFL_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_SMON_MODE_LO = 12;
localparam AW_SMON_CONFIGURATION0_SMON_MODE_HI = 15;
localparam AW_SMON_CONFIGURATION0_SMON_MODE_RESET = 4'h0;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_LO = 11;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_HI = 11;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_COMPARE_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_LO = 8;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_HI = 10;
localparam AW_SMON_CONFIGURATION0_SMON1_FUNCTION_RESET = 3'h0;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_LO = 7;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_HI = 7;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_COMPARE_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_LO = 4;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_HI = 6;
localparam AW_SMON_CONFIGURATION0_SMON0_FUNCTION_RESET = 3'h0;
localparam AW_SMON_CONFIGURATION0_SMON_ENABLE_LO = 0;
localparam AW_SMON_CONFIGURATION0_SMON_ENABLE_HI = 0;
localparam AW_SMON_CONFIGURATION0_SMON_ENABLE_RESET = 1'h0;
localparam AW_SMON_CONFIGURATION0_USEMASK = 32'hDF7FFFF1;
localparam AW_SMON_CONFIGURATION0_RO_MASK = 32'hC0000000;
localparam AW_SMON_CONFIGURATION0_WO_MASK = 32'h0;
localparam AW_SMON_CONFIGURATION0_RESET = 32'h40000000;

typedef struct packed {
    logic [15:0] RSVD;  // RW
    logic  [7:0] MODE1;  // RW
    logic  [7:0] MODE0;  // RW
} AW_SMON_CONFIGURATION1_t;

localparam AW_SMON_CONFIGURATION1_REG_STRIDE = 48'h4;
localparam AW_SMON_CONFIGURATION1_REG_ENTRIES = 1;
localparam AW_SMON_CONFIGURATION1_CR_ADDR = 48'h8002004;
localparam AW_SMON_CONFIGURATION1_SIZE = 32;
localparam AW_SMON_CONFIGURATION1_RSVD_LO = 16;
localparam AW_SMON_CONFIGURATION1_RSVD_HI = 31;
localparam AW_SMON_CONFIGURATION1_RSVD_RESET = 16'h0;
localparam AW_SMON_CONFIGURATION1_MODE1_LO = 8;
localparam AW_SMON_CONFIGURATION1_MODE1_HI = 15;
localparam AW_SMON_CONFIGURATION1_MODE1_RESET = 8'h0;
localparam AW_SMON_CONFIGURATION1_MODE0_LO = 0;
localparam AW_SMON_CONFIGURATION1_MODE0_HI = 7;
localparam AW_SMON_CONFIGURATION1_MODE0_RESET = 8'h0;
localparam AW_SMON_CONFIGURATION1_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_CONFIGURATION1_RO_MASK = 32'h0;
localparam AW_SMON_CONFIGURATION1_WO_MASK = 32'h0;
localparam AW_SMON_CONFIGURATION1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMPARE0;  // RW
} AW_SMON_COMPARE0_t;

localparam AW_SMON_COMPARE0_REG_STRIDE = 48'h4;
localparam AW_SMON_COMPARE0_REG_ENTRIES = 1;
localparam AW_SMON_COMPARE0_CR_ADDR = 48'h8002008;
localparam AW_SMON_COMPARE0_SIZE = 32;
localparam AW_SMON_COMPARE0_COMPARE0_LO = 0;
localparam AW_SMON_COMPARE0_COMPARE0_HI = 31;
localparam AW_SMON_COMPARE0_COMPARE0_RESET = 32'h0;
localparam AW_SMON_COMPARE0_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_COMPARE0_RO_MASK = 32'h0;
localparam AW_SMON_COMPARE0_WO_MASK = 32'h0;
localparam AW_SMON_COMPARE0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMPARE1;  // RW
} AW_SMON_COMPARE1_t;

localparam AW_SMON_COMPARE1_REG_STRIDE = 48'h4;
localparam AW_SMON_COMPARE1_REG_ENTRIES = 1;
localparam AW_SMON_COMPARE1_CR_ADDR = 48'h800200C;
localparam AW_SMON_COMPARE1_SIZE = 32;
localparam AW_SMON_COMPARE1_COMPARE1_LO = 0;
localparam AW_SMON_COMPARE1_COMPARE1_HI = 31;
localparam AW_SMON_COMPARE1_COMPARE1_RESET = 32'h0;
localparam AW_SMON_COMPARE1_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_COMPARE1_RO_MASK = 32'h0;
localparam AW_SMON_COMPARE1_WO_MASK = 32'h0;
localparam AW_SMON_COMPARE1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COUNTER0;  // RW
} AW_SMON_ACTIVITYCOUNTER0_t;

localparam AW_SMON_ACTIVITYCOUNTER0_REG_STRIDE = 48'h4;
localparam AW_SMON_ACTIVITYCOUNTER0_REG_ENTRIES = 1;
localparam AW_SMON_ACTIVITYCOUNTER0_CR_ADDR = 48'h8002010;
localparam AW_SMON_ACTIVITYCOUNTER0_SIZE = 32;
localparam AW_SMON_ACTIVITYCOUNTER0_COUNTER0_LO = 0;
localparam AW_SMON_ACTIVITYCOUNTER0_COUNTER0_HI = 31;
localparam AW_SMON_ACTIVITYCOUNTER0_COUNTER0_RESET = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER0_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_ACTIVITYCOUNTER0_RO_MASK = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER0_WO_MASK = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER0_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COUNTER1;  // RW
} AW_SMON_ACTIVITYCOUNTER1_t;

localparam AW_SMON_ACTIVITYCOUNTER1_REG_STRIDE = 48'h4;
localparam AW_SMON_ACTIVITYCOUNTER1_REG_ENTRIES = 1;
localparam AW_SMON_ACTIVITYCOUNTER1_CR_ADDR = 48'h8002014;
localparam AW_SMON_ACTIVITYCOUNTER1_SIZE = 32;
localparam AW_SMON_ACTIVITYCOUNTER1_COUNTER1_LO = 0;
localparam AW_SMON_ACTIVITYCOUNTER1_COUNTER1_HI = 31;
localparam AW_SMON_ACTIVITYCOUNTER1_COUNTER1_RESET = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER1_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_ACTIVITYCOUNTER1_RO_MASK = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER1_WO_MASK = 32'h0;
localparam AW_SMON_ACTIVITYCOUNTER1_RESET = 32'h0;

typedef struct packed {
    logic [31:0] TIMER_VAL;  // RW
} AW_SMON_TIMER_t;

localparam AW_SMON_TIMER_REG_STRIDE = 48'h4;
localparam AW_SMON_TIMER_REG_ENTRIES = 1;
localparam AW_SMON_TIMER_CR_ADDR = 48'h8002018;
localparam AW_SMON_TIMER_SIZE = 32;
localparam AW_SMON_TIMER_TIMER_VAL_LO = 0;
localparam AW_SMON_TIMER_TIMER_VAL_HI = 31;
localparam AW_SMON_TIMER_TIMER_VAL_RESET = 32'h0;
localparam AW_SMON_TIMER_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_TIMER_RO_MASK = 32'h0;
localparam AW_SMON_TIMER_WO_MASK = 32'h0;
localparam AW_SMON_TIMER_RESET = 32'h0;

typedef struct packed {
    logic [31:0] MAXVALUE;  // RW
} AW_SMON_MAXIMUM_TIMER_t;

localparam AW_SMON_MAXIMUM_TIMER_REG_STRIDE = 48'h4;
localparam AW_SMON_MAXIMUM_TIMER_REG_ENTRIES = 1;
localparam AW_SMON_MAXIMUM_TIMER_CR_ADDR = 48'h800201C;
localparam AW_SMON_MAXIMUM_TIMER_SIZE = 32;
localparam AW_SMON_MAXIMUM_TIMER_MAXVALUE_LO = 0;
localparam AW_SMON_MAXIMUM_TIMER_MAXVALUE_HI = 31;
localparam AW_SMON_MAXIMUM_TIMER_MAXVALUE_RESET = 32'h0;
localparam AW_SMON_MAXIMUM_TIMER_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_MAXIMUM_TIMER_RO_MASK = 32'h0;
localparam AW_SMON_MAXIMUM_TIMER_WO_MASK = 32'h0;
localparam AW_SMON_MAXIMUM_TIMER_RESET = 32'h0;

typedef struct packed {
    logic [31:0] COMP_MASK0;  // RW
} AW_SMON_COMP_MASK0_t;

localparam AW_SMON_COMP_MASK0_REG_STRIDE = 48'h4;
localparam AW_SMON_COMP_MASK0_REG_ENTRIES = 1;
localparam AW_SMON_COMP_MASK0_CR_ADDR = 48'h8002020;
localparam AW_SMON_COMP_MASK0_SIZE = 32;
localparam AW_SMON_COMP_MASK0_COMP_MASK0_LO = 0;
localparam AW_SMON_COMP_MASK0_COMP_MASK0_HI = 31;
localparam AW_SMON_COMP_MASK0_COMP_MASK0_RESET = 32'hffffffff;
localparam AW_SMON_COMP_MASK0_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_COMP_MASK0_RO_MASK = 32'h0;
localparam AW_SMON_COMP_MASK0_WO_MASK = 32'h0;
localparam AW_SMON_COMP_MASK0_RESET = 32'hFFFFFFFF;

typedef struct packed {
    logic [31:0] COMP_MASK1;  // RW
} AW_SMON_COMP_MASK1_t;

localparam AW_SMON_COMP_MASK1_REG_STRIDE = 48'h4;
localparam AW_SMON_COMP_MASK1_REG_ENTRIES = 1;
localparam AW_SMON_COMP_MASK1_CR_ADDR = 48'h8002024;
localparam AW_SMON_COMP_MASK1_SIZE = 32;
localparam AW_SMON_COMP_MASK1_COMP_MASK1_LO = 0;
localparam AW_SMON_COMP_MASK1_COMP_MASK1_HI = 31;
localparam AW_SMON_COMP_MASK1_COMP_MASK1_RESET = 32'hffffffff;
localparam AW_SMON_COMP_MASK1_USEMASK = 32'hFFFFFFFF;
localparam AW_SMON_COMP_MASK1_RO_MASK = 32'h0;
localparam AW_SMON_COMP_MASK1_WO_MASK = 32'h0;
localparam AW_SMON_COMP_MASK1_RESET = 32'hFFFFFFFF;

typedef struct packed {
    TOTAL_CREDITS_t  TOTAL_CREDITS;
    TOTAL_LDB_QID_t  TOTAL_LDB_QID;
    TOTAL_DIR_QID_t  TOTAL_DIR_QID;
    TOTAL_LDB_PORTS_t  TOTAL_LDB_PORTS;
    TOTAL_DIR_PORTS_t  TOTAL_DIR_PORTS;
    TOTAL_VAS_t  TOTAL_VAS;
    TOTAL_SN_REGIONS_t  TOTAL_SN_REGIONS;
    TOTAL_VF_t  TOTAL_VF;
    CFG_UNIT_VERSION_t  CFG_UNIT_VERSION;
    INGRESS_ALARM_ENABLE_t  INGRESS_ALARM_ENABLE;
    ALARM_LUT_PERR_t  ALARM_LUT_PERR;
    EGRESS_LUT_ERR_t  EGRESS_LUT_ERR;
    INGRESS_LUT_ERR_t  INGRESS_LUT_ERR;
    ALARM_ERR_t  ALARM_ERR;
    ALARM_MB_ECC_ERR_t  ALARM_MB_ECC_ERR;
    ALARM_SB_ECC_ERR_t  ALARM_SB_ECC_ERR;
    HQM_SYSTEM_CNT_CTL_t  HQM_SYSTEM_CNT_CTL;
    MSIX_ACK_t  MSIX_ACK;
    MSIX_PASSTHROUGH_t  MSIX_PASSTHROUGH;
    MSIX_MODE_t  MSIX_MODE;
    MSIX_31_0_SYND_t  MSIX_31_0_SYND;
    MSIX_63_32_SYND_t  MSIX_63_32_SYND;
    MSIX_64_SYND_t  MSIX_64_SYND;
    MSIX_PBA_31_0_CLEAR_t  MSIX_PBA_31_0_CLEAR;
    MSIX_PBA_63_32_CLEAR_t  MSIX_PBA_63_32_CLEAR;
    MSIX_PBA_64_CLEAR_t  MSIX_PBA_64_CLEAR;
    DIR_CQ_31_0_OCC_INT_STATUS_t  DIR_CQ_31_0_OCC_INT_STATUS;
    DIR_CQ_63_32_OCC_INT_STATUS_t  DIR_CQ_63_32_OCC_INT_STATUS;
    LDB_CQ_31_0_OCC_INT_STATUS_t  LDB_CQ_31_0_OCC_INT_STATUS;
    LDB_CQ_63_32_OCC_INT_STATUS_t  LDB_CQ_63_32_OCC_INT_STATUS;
    SYS_ALARM_INT_ENABLE_t  SYS_ALARM_INT_ENABLE;
    SYS_ALARM_MB_ECC_INT_ENABLE_t  SYS_ALARM_MB_ECC_INT_ENABLE;
    SYS_ALARM_SB_ECC_INT_ENABLE_t  SYS_ALARM_SB_ECC_INT_ENABLE;
    HQM_LDB_PP2VDEV_t [63:0] HQM_LDB_PP2VDEV;
    LDB_PP_ROB_V_t [63:0] LDB_PP_ROB_V;
    HQM_DIR_PP2VDEV_t [63:0] HQM_DIR_PP2VDEV;
    DIR_PP_ROB_V_t [63:0] DIR_PP_ROB_V;
    HQM_SYSTEM_CNT_0_t  HQM_SYSTEM_CNT_0;
    HQM_SYSTEM_CNT_1_t  HQM_SYSTEM_CNT_1;
    HQM_SYSTEM_CNT_2_t  HQM_SYSTEM_CNT_2;
    HQM_SYSTEM_CNT_3_t  HQM_SYSTEM_CNT_3;
    HQM_SYSTEM_CNT_4_t  HQM_SYSTEM_CNT_4;
    HQM_SYSTEM_CNT_5_t  HQM_SYSTEM_CNT_5;
    HQM_SYSTEM_CNT_6_t  HQM_SYSTEM_CNT_6;
    HQM_SYSTEM_CNT_7_t  HQM_SYSTEM_CNT_7;
    HQM_SYSTEM_CNT_8_t  HQM_SYSTEM_CNT_8;
    HQM_SYSTEM_CNT_9_t  HQM_SYSTEM_CNT_9;
    HQM_SYSTEM_CNT_10_t  HQM_SYSTEM_CNT_10;
    HQM_SYSTEM_CNT_11_t  HQM_SYSTEM_CNT_11;
    HQM_SYSTEM_CNT_12_t  HQM_SYSTEM_CNT_12;
    HQM_SYSTEM_CNT_13_t  HQM_SYSTEM_CNT_13;
    HQM_SYSTEM_CNT_14_t  HQM_SYSTEM_CNT_14;
    HQM_SYSTEM_CNT_15_t  HQM_SYSTEM_CNT_15;
    HQM_SYSTEM_CNT_16_t  HQM_SYSTEM_CNT_16;
    HQM_SYSTEM_CNT_17_t  HQM_SYSTEM_CNT_17;
    HQM_SYSTEM_CNT_18_t  HQM_SYSTEM_CNT_18;
    HQM_SYSTEM_CNT_19_t  HQM_SYSTEM_CNT_19;
    HQM_SYSTEM_CNT_20_t  HQM_SYSTEM_CNT_20;
    HQM_SYSTEM_CNT_21_t  HQM_SYSTEM_CNT_21;
    AI_CTRL_t [127:0] AI_CTRL;
    IMS_PEND_CLEAR_t  IMS_PEND_CLEAR;
    WB_SCH_OUT_AFULL_AGITATE_CONTROL_t  WB_SCH_OUT_AFULL_AGITATE_CONTROL;
    IG_HCW_ENQ_AFULL_AGITATE_CONTROL_t  IG_HCW_ENQ_AFULL_AGITATE_CONTROL;
    IG_HCW_ENQ_W_DB_AGITATE_CONTROL_t  IG_HCW_ENQ_W_DB_AGITATE_CONTROL;
    EG_HCW_SCHED_DB_AGITATE_CONTROL_t  EG_HCW_SCHED_DB_AGITATE_CONTROL;
    AL_IMS_MSIX_DB_AGITATE_CONTROL_t  AL_IMS_MSIX_DB_AGITATE_CONTROL;
    AL_CWD_ALARM_DB_AGITATE_CONTROL_t  AL_CWD_ALARM_DB_AGITATE_CONTROL;
    AL_SIF_ALARM_AFULL_AGITATE_CONTROL_t  AL_SIF_ALARM_AFULL_AGITATE_CONTROL;
    AL_HQM_ALARM_DB_AGITATE_CONTROL_t  AL_HQM_ALARM_DB_AGITATE_CONTROL;
    ECC_CTL_t  ECC_CTL;
    PARITY_CTL_t  PARITY_CTL;
    WRITE_BUFFER_CTL_t  WRITE_BUFFER_CTL;
    ALARM_CTL_t  ALARM_CTL;
    CFG_PATCH_CONTROL_t  CFG_PATCH_CONTROL;
    INGRESS_CTL_t  INGRESS_CTL;
    EGRESS_CTL_t  EGRESS_CTL;
    SYS_IDLE_STATUS_t  SYS_IDLE_STATUS;
    HCW_ENQ_FIFO_CTL_t  HCW_ENQ_FIFO_CTL;
    SCH_OUT_FIFO_CTL_t  SCH_OUT_FIFO_CTL;
    SIF_ALARM_FIFO_CTL_t  SIF_ALARM_FIFO_CTL;
    HCW_ENQ_FIFO_STATUS_t  HCW_ENQ_FIFO_STATUS;
    HCW_SCH_FIFO_STATUS_t  HCW_SCH_FIFO_STATUS;
    SCH_OUT_FIFO_STATUS_t  SCH_OUT_FIFO_STATUS;
    CFG_RX_FIFO_STATUS_t  CFG_RX_FIFO_STATUS;
    CWDI_RX_FIFO_STATUS_t  CWDI_RX_FIFO_STATUS;
    HQM_ALARM_RX_FIFO_STATUS_t  HQM_ALARM_RX_FIFO_STATUS;
    SIF_ALARM_FIFO_STATUS_t  SIF_ALARM_FIFO_STATUS;
    ALARM_DB_STATUS_t  ALARM_DB_STATUS;
    INGRESS_DB_STATUS_t  INGRESS_DB_STATUS;
    EGRESS_DB_STATUS_t  EGRESS_DB_STATUS;
    ALARM_STATUS_t  ALARM_STATUS;
    INGRESS_STATUS_t  INGRESS_STATUS;
    EGRESS_STATUS_t  EGRESS_STATUS;
    WBUF_STATUS_t  WBUF_STATUS;
    WBUF_STATUS2_t  WBUF_STATUS2;
    WBUF_DEBUG_t  WBUF_DEBUG;
    ROB_SYNDROME_t  ROB_SYNDROME;
    PHDR_DEBUG_0_t  PHDR_DEBUG_0;
    PHDR_DEBUG_1_t  PHDR_DEBUG_1;
    PHDR_DEBUG_2_t  PHDR_DEBUG_2;
    HQM_PDATA_DEBUG_t [15:0] HQM_PDATA_DEBUG;
    HCW_REQ_DEBUG_t  HCW_REQ_DEBUG;
    HQM_HCW_DATA_DEBUG_t [3:0] HQM_HCW_DATA_DEBUG;
} hqm_system_csr_registers_t;

// ===================================================
// load

typedef struct packed {
    logic  [0:0] VF_SYND_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W3_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W2_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W1_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W0_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ISR_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ISR_PERR;  // RW/1C/V
} load_ALARM_LUT_PERR_t;

typedef struct packed {
    logic  [0:0] SCH_INT_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_RERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PERR;  // RW/1C/V
    logic  [0:0] SCH_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID2VQID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_FMT_PERR;  // RW/1C/V
} load_EGRESS_LUT_ERR_t;

typedef struct packed {
    logic  [0:0] PORT_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP2PP_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP2PP_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_CFG_V_PERR;  // RW/1C/V
} load_INGRESS_LUT_ERR_t;

typedef struct packed {
    logic  [0:0] ROB_ERROR;  // RW/1C/V
    logic  [0:0] RF_IPAR_ERROR;  // RW/1C/V
    logic  [0:0] ALARM_INT_ERR;  // RW/1C/V
    logic  [0:0] SCH_WB_PERR;  // RW/1C/V
    logic  [0:0] FIFO_OVERFLOW;  // RW/1C/V
    logic  [0:0] FIFO_UNDERFLOW;  // RW/1C/V
    logic  [0:0] SCH_SM_ERR;  // RW/1C/V
    logic  [0:0] ALARM_PERR;  // RW/1C/V
    logic  [0:0] EGRESS_PERR;  // RW/1C/V
    logic  [0:0] INGRESS_PERR;  // RW/1C/V
    logic  [0:0] CQ_ADDR_OVERFLOW;  // RW/1C/V
} load_ALARM_ERR_t;

typedef struct packed {
    logic  [0:0] INGRESS_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR0;  // RW/1C/V
} load_ALARM_MB_ECC_ERR_t;

typedef struct packed {
    logic  [0:0] INGRESS_SB_ECC_ERR4;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR0;  // RW/1C/V
} load_ALARM_SB_ECC_ERR_t;

typedef struct packed {
    logic  [0:0] MSIX_1_ACK;  // RW/1C/V
    logic  [0:0] MSIX_0_ACK;  // RW/1C/V
} load_MSIX_ACK_t;

typedef struct packed {
    logic  [0:0] MSIX_31_SENT;  // RW/1C/V
    logic  [0:0] MSIX_30_SENT;  // RW/1C/V
    logic  [0:0] MSIX_29_SENT;  // RW/1C/V
    logic  [0:0] MSIX_28_SENT;  // RW/1C/V
    logic  [0:0] MSIX_27_SENT;  // RW/1C/V
    logic  [0:0] MSIX_26_SENT;  // RW/1C/V
    logic  [0:0] MSIX_25_SENT;  // RW/1C/V
    logic  [0:0] MSIX_24_SENT;  // RW/1C/V
    logic  [0:0] MSIX_23_SENT;  // RW/1C/V
    logic  [0:0] MSIX_22_SENT;  // RW/1C/V
    logic  [0:0] MSIX_21_SENT;  // RW/1C/V
    logic  [0:0] MSIX_20_SENT;  // RW/1C/V
    logic  [0:0] MSIX_19_SENT;  // RW/1C/V
    logic  [0:0] MSIX_18_SENT;  // RW/1C/V
    logic  [0:0] MSIX_17_SENT;  // RW/1C/V
    logic  [0:0] MSIX_16_SENT;  // RW/1C/V
    logic  [0:0] MSIX_15_SENT;  // RW/1C/V
    logic  [0:0] MSIX_14_SENT;  // RW/1C/V
    logic  [0:0] MSIX_13_SENT;  // RW/1C/V
    logic  [0:0] MSIX_12_SENT;  // RW/1C/V
    logic  [0:0] MSIX_11_SENT;  // RW/1C/V
    logic  [0:0] MSIX_10_SENT;  // RW/1C/V
    logic  [0:0] MSIX_9_SENT;  // RW/1C/V
    logic  [0:0] MSIX_8_SENT;  // RW/1C/V
    logic  [0:0] MSIX_7_SENT;  // RW/1C/V
    logic  [0:0] MSIX_6_SENT;  // RW/1C/V
    logic  [0:0] MSIX_5_SENT;  // RW/1C/V
    logic  [0:0] MSIX_4_SENT;  // RW/1C/V
    logic  [0:0] MSIX_3_SENT;  // RW/1C/V
    logic  [0:0] MSIX_2_SENT;  // RW/1C/V
    logic  [0:0] MSIX_1_SENT;  // RW/1C/V
    logic  [0:0] MSIX_0_SENT;  // RW/1C/V
} load_MSIX_31_0_SYND_t;

typedef struct packed {
    logic  [0:0] MSIX_63_SENT;  // RW/1C/V
    logic  [0:0] MSIX_62_SENT;  // RW/1C/V
    logic  [0:0] MSIX_61_SENT;  // RW/1C/V
    logic  [0:0] MSIX_60_SENT;  // RW/1C/V
    logic  [0:0] MSIX_59_SENT;  // RW/1C/V
    logic  [0:0] MSIX_58_SENT;  // RW/1C/V
    logic  [0:0] MSIX_57_SENT;  // RW/1C/V
    logic  [0:0] MSIX_56_SENT;  // RW/1C/V
    logic  [0:0] MSIX_55_SENT;  // RW/1C/V
    logic  [0:0] MSIX_54_SENT;  // RW/1C/V
    logic  [0:0] MSIX_53_SENT;  // RW/1C/V
    logic  [0:0] MSIX_52_SENT;  // RW/1C/V
    logic  [0:0] MSIX_51_SENT;  // RW/1C/V
    logic  [0:0] MSIX_50_SENT;  // RW/1C/V
    logic  [0:0] MSIX_49_SENT;  // RW/1C/V
    logic  [0:0] MSIX_48_SENT;  // RW/1C/V
    logic  [0:0] MSIX_47_SENT;  // RW/1C/V
    logic  [0:0] MSIX_46_SENT;  // RW/1C/V
    logic  [0:0] MSIX_45_SENT;  // RW/1C/V
    logic  [0:0] MSIX_44_SENT;  // RW/1C/V
    logic  [0:0] MSIX_43_SENT;  // RW/1C/V
    logic  [0:0] MSIX_42_SENT;  // RW/1C/V
    logic  [0:0] MSIX_41_SENT;  // RW/1C/V
    logic  [0:0] MSIX_40_SENT;  // RW/1C/V
    logic  [0:0] MSIX_39_SENT;  // RW/1C/V
    logic  [0:0] MSIX_38_SENT;  // RW/1C/V
    logic  [0:0] MSIX_37_SENT;  // RW/1C/V
    logic  [0:0] MSIX_36_SENT;  // RW/1C/V
    logic  [0:0] MSIX_35_SENT;  // RW/1C/V
    logic  [0:0] MSIX_34_SENT;  // RW/1C/V
    logic  [0:0] MSIX_33_SENT;  // RW/1C/V
    logic  [0:0] MSIX_32_SENT;  // RW/1C/V
} load_MSIX_63_32_SYND_t;

typedef struct packed {
    logic  [0:0] MSIX_64_SENT;  // RW/1C/V
} load_MSIX_64_SYND_t;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} load_DIR_CQ_31_0_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} load_DIR_CQ_63_32_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} load_LDB_CQ_31_0_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} load_LDB_CQ_63_32_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_HCW_ENQ_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_HCW_SCH_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_SCH_OUT_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_CFG_RX_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_CWDI_RX_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_HQM_ALARM_RX_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} load_SIF_ALARM_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] PP_IS_LDB;  // RW/1C/V
    logic  [0:0] PP;  // RW/1C/V
    logic  [0:0] CL;  // RW/1C/V
    logic  [0:0] CLI;  // RW/1C/V
    logic  [0:0] CL_LAST;  // RW/1C/V
    logic  [0:0] ROB_V_CNT;  // RW/1C/V
} load_ROB_SYNDROME_t;

typedef struct packed {
    load_ALARM_LUT_PERR_t  ALARM_LUT_PERR;
    load_EGRESS_LUT_ERR_t  EGRESS_LUT_ERR;
    load_INGRESS_LUT_ERR_t  INGRESS_LUT_ERR;
    load_ALARM_ERR_t  ALARM_ERR;
    load_ALARM_MB_ECC_ERR_t  ALARM_MB_ECC_ERR;
    load_ALARM_SB_ECC_ERR_t  ALARM_SB_ECC_ERR;
    load_MSIX_ACK_t  MSIX_ACK;
    load_MSIX_31_0_SYND_t  MSIX_31_0_SYND;
    load_MSIX_63_32_SYND_t  MSIX_63_32_SYND;
    load_MSIX_64_SYND_t  MSIX_64_SYND;
    load_DIR_CQ_31_0_OCC_INT_STATUS_t  DIR_CQ_31_0_OCC_INT_STATUS;
    load_DIR_CQ_63_32_OCC_INT_STATUS_t  DIR_CQ_63_32_OCC_INT_STATUS;
    load_LDB_CQ_31_0_OCC_INT_STATUS_t  LDB_CQ_31_0_OCC_INT_STATUS;
    load_LDB_CQ_63_32_OCC_INT_STATUS_t  LDB_CQ_63_32_OCC_INT_STATUS;
    load_HCW_ENQ_FIFO_STATUS_t  HCW_ENQ_FIFO_STATUS;
    load_HCW_SCH_FIFO_STATUS_t  HCW_SCH_FIFO_STATUS;
    load_SCH_OUT_FIFO_STATUS_t  SCH_OUT_FIFO_STATUS;
    load_CFG_RX_FIFO_STATUS_t  CFG_RX_FIFO_STATUS;
    load_CWDI_RX_FIFO_STATUS_t  CWDI_RX_FIFO_STATUS;
    load_HQM_ALARM_RX_FIFO_STATUS_t  HQM_ALARM_RX_FIFO_STATUS;
    load_SIF_ALARM_FIFO_STATUS_t  SIF_ALARM_FIFO_STATUS;
    load_ROB_SYNDROME_t  ROB_SYNDROME;
} hqm_system_csr_load_t;

// ===================================================
// lock

typedef struct packed {
   logic HQM_OS_W_read_en;
   logic HQM_OS_W_write_en;
} hqm_system_csr_sai_import_t;

// ===================================================
// valid (so far used by WO registers)

// ===================================================
// new

typedef struct packed {
    logic  [0:0] VF_SYND_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W3_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W2_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W1_PERR;  // RW/1C/V
    logic  [0:0] MSIX_TBL_W0_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_AI_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ISR_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ISR_PERR;  // RW/1C/V
} new_ALARM_LUT_PERR_t;

typedef struct packed {
    logic  [0:0] SCH_INT_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PL_PERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_RERR;  // RW/1C/V
    logic  [0:0] SCH_REQ_PERR;  // RW/1C/V
    logic  [0:0] SCH_DATA_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID2VQID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] LDB_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_PASID_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_L_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_ADDR_U_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ2VF_PF_RO_PERR;  // RW/1C/V
    logic  [0:0] DIR_CQ_FMT_PERR;  // RW/1C/V
} new_EGRESS_LUT_ERR_t;

typedef struct packed {
    logic  [0:0] PORT_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP2PP_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP2PP_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VPP_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP_V_PERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID2QID_MB_ECC_ERR;  // RW/1C/V
    logic  [0:0] VF_DIR_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] VF_LDB_VQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_ITS_PERR;  // RW/1C/V
    logic  [0:0] DIR_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] DIR_VASQID_V_PERR;  // RW/1C/V
    logic  [0:0] LDB_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] DIR_PP2VAS_PERR;  // RW/1C/V
    logic  [0:0] LDB_QID_CFG_V_PERR;  // RW/1C/V
} new_INGRESS_LUT_ERR_t;

typedef struct packed {
    logic  [0:0] ROB_ERROR;  // RW/1C/V
    logic  [0:0] RF_IPAR_ERROR;  // RW/1C/V
    logic  [0:0] ALARM_INT_ERR;  // RW/1C/V
    logic  [0:0] SCH_WB_PERR;  // RW/1C/V
    logic  [0:0] FIFO_OVERFLOW;  // RW/1C/V
    logic  [0:0] FIFO_UNDERFLOW;  // RW/1C/V
    logic  [0:0] SCH_SM_ERR;  // RW/1C/V
    logic  [0:0] ALARM_PERR;  // RW/1C/V
    logic  [0:0] EGRESS_PERR;  // RW/1C/V
    logic  [0:0] INGRESS_PERR;  // RW/1C/V
    logic  [0:0] CQ_ADDR_OVERFLOW;  // RW/1C/V
} new_ALARM_ERR_t;

typedef struct packed {
    logic  [0:0] INGRESS_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_MB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_MB_ECC_ERR0;  // RW/1C/V
} new_ALARM_MB_ECC_ERR_t;

typedef struct packed {
    logic  [0:0] INGRESS_SB_ECC_ERR4;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] INGRESS_SB_ECC_ERR0;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR3;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR2;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR1;  // RW/1C/V
    logic  [0:0] WB_DIR_SB_ECC_ERR0;  // RW/1C/V
} new_ALARM_SB_ECC_ERR_t;

typedef struct packed {
    logic  [0:0] MSIX_1_ACK;  // RW/1C/V
    logic  [0:0] MSIX_0_ACK;  // RW/1C/V
} new_MSIX_ACK_t;

typedef struct packed {
    logic  [0:0] MSIX_31_SENT;  // RW/1C/V
    logic  [0:0] MSIX_30_SENT;  // RW/1C/V
    logic  [0:0] MSIX_29_SENT;  // RW/1C/V
    logic  [0:0] MSIX_28_SENT;  // RW/1C/V
    logic  [0:0] MSIX_27_SENT;  // RW/1C/V
    logic  [0:0] MSIX_26_SENT;  // RW/1C/V
    logic  [0:0] MSIX_25_SENT;  // RW/1C/V
    logic  [0:0] MSIX_24_SENT;  // RW/1C/V
    logic  [0:0] MSIX_23_SENT;  // RW/1C/V
    logic  [0:0] MSIX_22_SENT;  // RW/1C/V
    logic  [0:0] MSIX_21_SENT;  // RW/1C/V
    logic  [0:0] MSIX_20_SENT;  // RW/1C/V
    logic  [0:0] MSIX_19_SENT;  // RW/1C/V
    logic  [0:0] MSIX_18_SENT;  // RW/1C/V
    logic  [0:0] MSIX_17_SENT;  // RW/1C/V
    logic  [0:0] MSIX_16_SENT;  // RW/1C/V
    logic  [0:0] MSIX_15_SENT;  // RW/1C/V
    logic  [0:0] MSIX_14_SENT;  // RW/1C/V
    logic  [0:0] MSIX_13_SENT;  // RW/1C/V
    logic  [0:0] MSIX_12_SENT;  // RW/1C/V
    logic  [0:0] MSIX_11_SENT;  // RW/1C/V
    logic  [0:0] MSIX_10_SENT;  // RW/1C/V
    logic  [0:0] MSIX_9_SENT;  // RW/1C/V
    logic  [0:0] MSIX_8_SENT;  // RW/1C/V
    logic  [0:0] MSIX_7_SENT;  // RW/1C/V
    logic  [0:0] MSIX_6_SENT;  // RW/1C/V
    logic  [0:0] MSIX_5_SENT;  // RW/1C/V
    logic  [0:0] MSIX_4_SENT;  // RW/1C/V
    logic  [0:0] MSIX_3_SENT;  // RW/1C/V
    logic  [0:0] MSIX_2_SENT;  // RW/1C/V
    logic  [0:0] MSIX_1_SENT;  // RW/1C/V
    logic  [0:0] MSIX_0_SENT;  // RW/1C/V
} new_MSIX_31_0_SYND_t;

typedef struct packed {
    logic  [0:0] MSIX_63_SENT;  // RW/1C/V
    logic  [0:0] MSIX_62_SENT;  // RW/1C/V
    logic  [0:0] MSIX_61_SENT;  // RW/1C/V
    logic  [0:0] MSIX_60_SENT;  // RW/1C/V
    logic  [0:0] MSIX_59_SENT;  // RW/1C/V
    logic  [0:0] MSIX_58_SENT;  // RW/1C/V
    logic  [0:0] MSIX_57_SENT;  // RW/1C/V
    logic  [0:0] MSIX_56_SENT;  // RW/1C/V
    logic  [0:0] MSIX_55_SENT;  // RW/1C/V
    logic  [0:0] MSIX_54_SENT;  // RW/1C/V
    logic  [0:0] MSIX_53_SENT;  // RW/1C/V
    logic  [0:0] MSIX_52_SENT;  // RW/1C/V
    logic  [0:0] MSIX_51_SENT;  // RW/1C/V
    logic  [0:0] MSIX_50_SENT;  // RW/1C/V
    logic  [0:0] MSIX_49_SENT;  // RW/1C/V
    logic  [0:0] MSIX_48_SENT;  // RW/1C/V
    logic  [0:0] MSIX_47_SENT;  // RW/1C/V
    logic  [0:0] MSIX_46_SENT;  // RW/1C/V
    logic  [0:0] MSIX_45_SENT;  // RW/1C/V
    logic  [0:0] MSIX_44_SENT;  // RW/1C/V
    logic  [0:0] MSIX_43_SENT;  // RW/1C/V
    logic  [0:0] MSIX_42_SENT;  // RW/1C/V
    logic  [0:0] MSIX_41_SENT;  // RW/1C/V
    logic  [0:0] MSIX_40_SENT;  // RW/1C/V
    logic  [0:0] MSIX_39_SENT;  // RW/1C/V
    logic  [0:0] MSIX_38_SENT;  // RW/1C/V
    logic  [0:0] MSIX_37_SENT;  // RW/1C/V
    logic  [0:0] MSIX_36_SENT;  // RW/1C/V
    logic  [0:0] MSIX_35_SENT;  // RW/1C/V
    logic  [0:0] MSIX_34_SENT;  // RW/1C/V
    logic  [0:0] MSIX_33_SENT;  // RW/1C/V
    logic  [0:0] MSIX_32_SENT;  // RW/1C/V
} new_MSIX_63_32_SYND_t;

typedef struct packed {
    logic  [0:0] MSIX_64_SENT;  // RW/1C/V
} new_MSIX_64_SYND_t;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} new_DIR_CQ_31_0_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} new_DIR_CQ_63_32_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_31_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_30_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_29_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_28_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_27_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_26_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_25_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_24_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_23_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_22_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_21_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_20_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_19_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_18_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_17_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_16_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_15_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_14_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_13_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_12_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_11_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_10_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_9_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_8_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_7_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_6_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_5_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_4_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_3_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_2_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_1_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_0_OCC_INT;  // RW/1C/V
} new_LDB_CQ_31_0_OCC_INT_STATUS_t;

typedef struct packed {
    logic  [0:0] CQ_63_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_62_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_61_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_60_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_59_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_58_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_57_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_56_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_55_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_54_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_53_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_52_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_51_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_50_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_49_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_48_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_47_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_46_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_45_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_44_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_43_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_42_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_41_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_40_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_39_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_38_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_37_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_36_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_35_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_34_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_33_OCC_INT;  // RW/1C/V
    logic  [0:0] CQ_32_OCC_INT;  // RW/1C/V
} new_LDB_CQ_63_32_OCC_INT_STATUS_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_0_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_1_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_2_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_3_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_4_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_5_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_6_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_7_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_8_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_9_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_10_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_11_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_12_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_13_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_14_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_15_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_16_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_17_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_18_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_19_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_20_t;

typedef struct packed {
    logic [31:0] CNT;  // RO/V
} new_HQM_SYSTEM_CNT_21_t;

typedef struct packed {
    logic  [0:0] IMS_PEND;  // RO/V
} new_AI_CTRL_t;

typedef struct packed {
    logic  [0:0] PBA_IDLE;  // RO/V
    logic  [0:0] INT_IDLE;  // RO/V
    logic  [0:0] ALARM_IDLE;  // RO/V
    logic  [0:0] WBUF_IDLE;  // RO/V
    logic  [0:0] EGRESS_IDLE;  // RO/V
    logic  [0:0] INGRESS_IDLE;  // RO/V
} new_SYS_IDLE_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] AEMPTY;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_HCW_ENQ_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_HCW_SCH_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_SCH_OUT_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_CFG_RX_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_CWDI_RX_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] RSVD5;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_HQM_ALARM_RX_FIFO_STATUS_t;

typedef struct packed {
    logic [23:0] DEPTH;  // RO/V
    logic  [0:0] FULL;  // RO/V
    logic  [0:0] AFULL;  // RO/V
    logic  [0:0] AEMPTY;  // RO/V
    logic  [0:0] EMPTY;  // RO/V
    logic  [1:0] RSVD32;  // RO/V
    logic  [0:0] OVRFLOW;  // RW/1C/V
    logic  [0:0] UNDFLOW;  // RW/1C/V
} new_SIF_ALARM_FIFO_STATUS_t;

typedef struct packed {
    logic  [0:0] MSIX_DB_READY;  // RO/V
    logic  [1:0] MSIX_DB_DEPTH;  // RO/V
    logic  [0:0] SYS_DB_READY;  // RO/V
    logic  [1:0] SYS_DB_DEPTH;  // RO/V
} new_ALARM_DB_STATUS_t;

typedef struct packed {
    logic  [0:0] HCW_ENQ_DB_READY;  // RO/V
    logic  [1:0] HCW_ENQ_DB_DEPTH;  // RO/V
    logic  [0:0] HCW_ENQ_W_DB_READY;  // RO/V
    logic  [1:0] HCW_ENQ_W_DB_DEPTH;  // RO/V
} new_INGRESS_DB_STATUS_t;

typedef struct packed {
    logic  [0:0] PHDR_DB_READY;  // RO/V
    logic  [1:0] PHDR_DB_DEPTH;  // RO/V
    logic  [0:0] PDATA_MS_DB_READY;  // RO/V
    logic  [1:0] PDATA_MS_DB_DEPTH;  // RO/V
    logic  [0:0] PDATA_LS_DB_READY;  // RO/V
    logic  [1:0] PDATA_LS_DB_DEPTH;  // RO/V
    logic  [0:0] CQ_OCC_DB_READY;  // RO/V
    logic  [1:0] CQ_OCC_DB_DEPTH;  // RO/V
    logic  [0:0] HCW_SCHED_DB_READY;  // RO/V
    logic  [1:0] HCW_SCHED_DB_DEPTH;  // RO/V
} new_EGRESS_DB_STATUS_t;

typedef struct packed {
    logic  [0:0] IMS_P2_V;  // RO/V
    logic  [0:0] IMS_P1_V;  // RO/V
    logic  [0:0] IMS_P0_V;  // RO/V
    logic  [0:0] MSIX_P2_V;  // RO/V
    logic  [0:0] MSIX_P1_V;  // RO/V
    logic  [0:0] MSIX_P0_V;  // RO/V
    logic  [0:0] CQ_OCC_P2_V;  // RO/V
    logic  [0:0] CQ_OCC_P1_V;  // RO/V
    logic  [0:0] CQ_OCC_P0_V;  // RO/V
} new_ALARM_STATUS_t;

typedef struct packed {
    logic  [0:0] P8_V;  // RO/V
    logic  [0:0] P7_V;  // RO/V
    logic  [0:0] P6_V;  // RO/V
    logic  [0:0] P5_V;  // RO/V
    logic  [0:0] P4_V;  // RO/V
    logic  [0:0] P3_V;  // RO/V
    logic  [0:0] P2_V;  // RO/V
    logic  [0:0] P1_V;  // RO/V
    logic  [0:0] P0_V;  // RO/V
} new_INGRESS_STATUS_t;

typedef struct packed {
    logic  [0:0] P5_HCW_V;  // RO/V
    logic  [0:0] P5_INT_V;  // RO/V
    logic  [0:0] SCH_P5_V;  // RO/V
    logic  [0:0] SCH_P4_V;  // RO/V
    logic  [0:0] SCH_P3_V;  // RO/V
    logic  [0:0] SCH_P2_V;  // RO/V
    logic  [0:0] SCH_P1_V;  // RO/V
    logic  [0:0] SCH_P0_V;  // RO/V
} new_EGRESS_STATUS_t;

typedef struct packed {
    logic  [0:0] SCH_P2_SOP;  // RO/V
    logic  [0:0] SCH_P2_INT_V;  // RO/V
    logic  [0:0] SCH_P2_DATA_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_V;  // RO/V
    logic  [4:0] SCH_SM_STATE;  // RO/V
    logic  [0:0] PD_FIFO_AFULL;  // RO/V
    logic  [0:0] PH_FIFO_AFULL;  // RO/V
    logic  [7:0] SCH_CQ;  // RO/V
    logic  [1:0] SCH_BEAT;  // RO/V
    logic  [0:0] SCH_LDB;  // RO/V
    logic  [0:0] SCH_HCW_V;  // RO/V
    logic  [0:0] SCH_INT_V;  // RO/V
    logic  [0:0] SCH_P2_V;  // RO/V
    logic  [0:0] SCH_P1_V;  // RO/V
    logic  [0:0] SCH_P0_V;  // RO/V
} new_WBUF_STATUS_t;

typedef struct packed {
    logic  [5:0] OPT_IN_PROG_CQ;  // RO/V
    logic  [0:0] OPT_IN_PROG;  // RO/V
    logic  [0:0] OPT_ERR;  // RO/V
    logic  [3:0] OPT_DATA_VALID;  // RO/V
    logic  [0:0] CQ_OCC_INT_BUSY;  // RO/V
    logic  [0:0] ARB_HOLD;  // RO/V
    logic  [0:0] ARB_WINNER;  // RO/V
    logic  [1:0] ARB_REQS;  // RO/V
} new_WBUF_STATUS2_t;

typedef struct packed {
    logic  [2:0] SCH_P2_HDR_Q_BEATS;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_LDB;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_IS_PF;  // RO/V
    logic  [3:0] SCH_P2_HDR_Q_VF;  // RO/V
    logic  [0:0] SCH_P2_HOLD;  // RO/V
    logic  [0:0] SCH_P2_LOAD;  // RO/V
    logic  [0:0] SCH_P2_V_Q;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_DATA_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_INT_V;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_SOP;  // RO/V
    logic  [0:0] SCH_P2_HDR_Q_EOP;  // RO/V
    logic  [0:0] SCH_HDR_V;  // RO/V
    logic  [0:0] SCH_DATA_V;  // RO/V
    logic  [0:0] SCH_DATA_FIRST;  // RO/V
    logic  [0:0] SCH_DATA_LAST;  // RO/V
    logic  [0:0] CQ_OCC_INT_BUSY;  // RO/V
    logic  [0:0] PHDR_FIFO_AFULL_Q;  // RO/V
    logic  [0:0] PDATA_FIFO_AFULL_Q;  // RO/V
    logic  [0:0] MSI_MSIX_ARB_REQ;  // RO/V
    logic  [0:0] SCH_ARB_REQ;  // RO/V
    logic  [0:0] ARB_WINNER_V;  // RO/V
    logic  [0:0] ARB_WINNER;  // RO/V
    logic  [0:0] ARB_HOLD_Q;  // RO/V
    logic  [0:0] ARB_WINNER_Q;  // RO/V
} new_WBUF_DEBUG_t;

typedef struct packed {
    logic  [0:0] PP_IS_LDB;  // RW/1C/V
    logic  [5:0] PP;  // RW/1C/V
    logic  [3:0] CL;  // RW/1C/V
    logic  [1:0] CLI;  // RW/1C/V
    logic  [0:0] CL_LAST;  // RW/1C/V
    logic  [2:0] ROB_V_CNT;  // RW/1C/V
} new_ROB_SYNDROME_t;

typedef struct packed {
    logic [29:0] ADDR_31_2;  // RO/V
    logic  [1:0] TC_SEL;  // RO/V
} new_PHDR_DEBUG_0_t;

typedef struct packed {
    logic [31:0] ADDR_63_32;  // RO/V
} new_PHDR_DEBUG_1_t;

typedef struct packed {
    logic  [0:0] INVALID;  // RO/V
    logic  [0:0] RO;  // RO/V
    logic  [0:0] CQ_V;  // RO/V
    logic  [0:0] LDB;  // RO/V
    logic  [5:0] CQ;  // RO/V
    logic  [2:0] NUM_HCWS;  // RO/V
    logic  [1:0] SRC;  // RO/V
    logic  [4:0] LENGTH;  // RO/V
} new_PHDR_DEBUG_2_t;

typedef struct packed {
    logic [31:0] DATA;  // RO/V
} new_HQM_PDATA_DEBUG_t;

typedef struct packed {
    logic  [0:0] PARITY;  // RO/V
    logic  [0:0] AO_V;  // RO/V
    logic  [0:0] INSERT_TS;  // RO/V
    logic  [0:0] QE_IS_LDB;  // RO/V
    logic  [0:0] PP_IS_LDB;  // RO/V
    logic  [4:0] VAS;  // RO/V
    logic  [7:0] QID;  // RO/V
    logic  [7:0] PP;  // RO/V
} new_HCW_REQ_DEBUG_t;

typedef struct packed {
    logic [31:0] DATA;  // RO/V
} new_HQM_HCW_DATA_DEBUG_t;

typedef struct packed {
    new_ALARM_LUT_PERR_t  ALARM_LUT_PERR;
    new_EGRESS_LUT_ERR_t  EGRESS_LUT_ERR;
    new_INGRESS_LUT_ERR_t  INGRESS_LUT_ERR;
    new_ALARM_ERR_t  ALARM_ERR;
    new_ALARM_MB_ECC_ERR_t  ALARM_MB_ECC_ERR;
    new_ALARM_SB_ECC_ERR_t  ALARM_SB_ECC_ERR;
    new_MSIX_ACK_t  MSIX_ACK;
    new_MSIX_31_0_SYND_t  MSIX_31_0_SYND;
    new_MSIX_63_32_SYND_t  MSIX_63_32_SYND;
    new_MSIX_64_SYND_t  MSIX_64_SYND;
    new_DIR_CQ_31_0_OCC_INT_STATUS_t  DIR_CQ_31_0_OCC_INT_STATUS;
    new_DIR_CQ_63_32_OCC_INT_STATUS_t  DIR_CQ_63_32_OCC_INT_STATUS;
    new_LDB_CQ_31_0_OCC_INT_STATUS_t  LDB_CQ_31_0_OCC_INT_STATUS;
    new_LDB_CQ_63_32_OCC_INT_STATUS_t  LDB_CQ_63_32_OCC_INT_STATUS;
    new_HQM_SYSTEM_CNT_0_t  HQM_SYSTEM_CNT_0;
    new_HQM_SYSTEM_CNT_1_t  HQM_SYSTEM_CNT_1;
    new_HQM_SYSTEM_CNT_2_t  HQM_SYSTEM_CNT_2;
    new_HQM_SYSTEM_CNT_3_t  HQM_SYSTEM_CNT_3;
    new_HQM_SYSTEM_CNT_4_t  HQM_SYSTEM_CNT_4;
    new_HQM_SYSTEM_CNT_5_t  HQM_SYSTEM_CNT_5;
    new_HQM_SYSTEM_CNT_6_t  HQM_SYSTEM_CNT_6;
    new_HQM_SYSTEM_CNT_7_t  HQM_SYSTEM_CNT_7;
    new_HQM_SYSTEM_CNT_8_t  HQM_SYSTEM_CNT_8;
    new_HQM_SYSTEM_CNT_9_t  HQM_SYSTEM_CNT_9;
    new_HQM_SYSTEM_CNT_10_t  HQM_SYSTEM_CNT_10;
    new_HQM_SYSTEM_CNT_11_t  HQM_SYSTEM_CNT_11;
    new_HQM_SYSTEM_CNT_12_t  HQM_SYSTEM_CNT_12;
    new_HQM_SYSTEM_CNT_13_t  HQM_SYSTEM_CNT_13;
    new_HQM_SYSTEM_CNT_14_t  HQM_SYSTEM_CNT_14;
    new_HQM_SYSTEM_CNT_15_t  HQM_SYSTEM_CNT_15;
    new_HQM_SYSTEM_CNT_16_t  HQM_SYSTEM_CNT_16;
    new_HQM_SYSTEM_CNT_17_t  HQM_SYSTEM_CNT_17;
    new_HQM_SYSTEM_CNT_18_t  HQM_SYSTEM_CNT_18;
    new_HQM_SYSTEM_CNT_19_t  HQM_SYSTEM_CNT_19;
    new_HQM_SYSTEM_CNT_20_t  HQM_SYSTEM_CNT_20;
    new_HQM_SYSTEM_CNT_21_t  HQM_SYSTEM_CNT_21;
    new_AI_CTRL_t [127:0] AI_CTRL;
    new_SYS_IDLE_STATUS_t  SYS_IDLE_STATUS;
    new_HCW_ENQ_FIFO_STATUS_t  HCW_ENQ_FIFO_STATUS;
    new_HCW_SCH_FIFO_STATUS_t  HCW_SCH_FIFO_STATUS;
    new_SCH_OUT_FIFO_STATUS_t  SCH_OUT_FIFO_STATUS;
    new_CFG_RX_FIFO_STATUS_t  CFG_RX_FIFO_STATUS;
    new_CWDI_RX_FIFO_STATUS_t  CWDI_RX_FIFO_STATUS;
    new_HQM_ALARM_RX_FIFO_STATUS_t  HQM_ALARM_RX_FIFO_STATUS;
    new_SIF_ALARM_FIFO_STATUS_t  SIF_ALARM_FIFO_STATUS;
    new_ALARM_DB_STATUS_t  ALARM_DB_STATUS;
    new_INGRESS_DB_STATUS_t  INGRESS_DB_STATUS;
    new_EGRESS_DB_STATUS_t  EGRESS_DB_STATUS;
    new_ALARM_STATUS_t  ALARM_STATUS;
    new_INGRESS_STATUS_t  INGRESS_STATUS;
    new_EGRESS_STATUS_t  EGRESS_STATUS;
    new_WBUF_STATUS_t  WBUF_STATUS;
    new_WBUF_STATUS2_t  WBUF_STATUS2;
    new_WBUF_DEBUG_t  WBUF_DEBUG;
    new_ROB_SYNDROME_t  ROB_SYNDROME;
    new_PHDR_DEBUG_0_t  PHDR_DEBUG_0;
    new_PHDR_DEBUG_1_t  PHDR_DEBUG_1;
    new_PHDR_DEBUG_2_t  PHDR_DEBUG_2;
    new_HQM_PDATA_DEBUG_t [15:0] HQM_PDATA_DEBUG;
    new_HCW_REQ_DEBUG_t  HCW_REQ_DEBUG;
    new_HQM_HCW_DATA_DEBUG_t [3:0] HQM_HCW_DATA_DEBUG;
} hqm_system_csr_new_t;

// ===================================================
// HandCoded Control structure
//   (used by project HandCoded specified registers)

typedef logic [3:0] we_ALARM_PF_SYND0_t;

typedef logic [3:0] we_ALARM_PF_SYND1_t;

typedef logic [3:0] we_ALARM_PF_SYND2_t;

typedef logic [3:0] we_ALARM_HW_SYND_t;

typedef logic [3:0] we_VF_LDB_VPP_V_t;

typedef logic [3:0] we_VF_LDB_VPP2PP_t;

typedef logic [3:0] we_VF_DIR_VPP_V_t;

typedef logic [3:0] we_VF_DIR_VPP2PP_t;

typedef logic [3:0] we_VF_LDB_VQID_V_t;

typedef logic [3:0] we_VF_LDB_VQID2QID_t;

typedef logic [3:0] we_LDB_QID2VQID_t;

typedef logic [3:0] we_VF_DIR_VQID_V_t;

typedef logic [3:0] we_VF_DIR_VQID2QID_t;

typedef logic [3:0] we_LDB_VASQID_V_t;

typedef logic [3:0] we_DIR_VASQID_V_t;

typedef logic [3:0] we_ALARM_VF_SYND0_t;

typedef logic [3:0] we_ALARM_VF_SYND1_t;

typedef logic [3:0] we_ALARM_VF_SYND2_t;

typedef logic [3:0] we_LDB_QID_V_t;

typedef logic [3:0] we_LDB_QID_ITS_t;

typedef logic [3:0] we_LDB_QID_CFG_V_t;

typedef logic [3:0] we_DIR_QID_V_t;

typedef logic [3:0] we_DIR_QID_ITS_t;

typedef logic [3:0] we_LDB_CQ_ADDR_L_t;

typedef logic [3:0] we_LDB_CQ_ADDR_U_t;

typedef logic [3:0] we_LDB_PP2VAS_t;

typedef logic [3:0] we_LDB_PP_V_t;

typedef logic [3:0] we_LDB_CQ2VF_PF_RO_t;

typedef logic [3:0] we_LDB_CQ_ISR_t;

typedef logic [3:0] we_LDB_CQ_PASID_t;

typedef logic [3:0] we_DIR_CQ_ADDR_L_t;

typedef logic [3:0] we_DIR_CQ_ADDR_U_t;

typedef logic [3:0] we_DIR_PP2VAS_t;

typedef logic [3:0] we_DIR_PP_V_t;

typedef logic [3:0] we_DIR_CQ2VF_PF_RO_t;

typedef logic [3:0] we_DIR_CQ_ISR_t;

typedef logic [3:0] we_DIR_CQ_PASID_t;

typedef logic [3:0] we_DIR_CQ_FMT_t;

typedef logic [3:0] we_SBE_CNT_0_t;

typedef logic [3:0] we_SBE_CNT_1_t;

typedef logic [3:0] we_PERF_SMON_CONFIGURATION0_t;

typedef logic [3:0] we_PERF_SMON_CONFIGURATION1_t;

typedef logic [3:0] we_PERF_SMON_COMPARE0_t;

typedef logic [3:0] we_PERF_SMON_COMPARE1_t;

typedef logic [3:0] we_PERF_SMON_ACTIVITYCOUNTER0_t;

typedef logic [3:0] we_PERF_SMON_ACTIVITYCOUNTER1_t;

typedef logic [3:0] we_PERF_SMON_TIMER_t;

typedef logic [3:0] we_PERF_SMON_MAXIMUM_TIMER_t;

typedef logic [3:0] we_PERF_SMON_COMP_MASK0_t;

typedef logic [3:0] we_PERF_SMON_COMP_MASK1_t;

typedef logic [3:0] we_WB_DIR_CQ_STATE_t;

typedef logic [3:0] we_WB_LDB_CQ_STATE_t;

typedef logic [3:0] we_AI_ADDR_L_t;

typedef logic [3:0] we_AI_ADDR_U_t;

typedef logic [3:0] we_AI_DATA_t;

typedef logic [3:0] we_AW_SMON_CONFIGURATION0_t;

typedef logic [3:0] we_AW_SMON_CONFIGURATION1_t;

typedef logic [3:0] we_AW_SMON_COMPARE0_t;

typedef logic [3:0] we_AW_SMON_COMPARE1_t;

typedef logic [3:0] we_AW_SMON_ACTIVITYCOUNTER0_t;

typedef logic [3:0] we_AW_SMON_ACTIVITYCOUNTER1_t;

typedef logic [3:0] we_AW_SMON_TIMER_t;

typedef logic [3:0] we_AW_SMON_MAXIMUM_TIMER_t;

typedef logic [3:0] we_AW_SMON_COMP_MASK0_t;

typedef logic [3:0] we_AW_SMON_COMP_MASK1_t;

typedef struct packed {
    we_ALARM_PF_SYND0_t ALARM_PF_SYND0;
    we_ALARM_PF_SYND1_t ALARM_PF_SYND1;
    we_ALARM_PF_SYND2_t ALARM_PF_SYND2;
    we_ALARM_HW_SYND_t ALARM_HW_SYND;
    we_VF_LDB_VPP_V_t VF_LDB_VPP_V;
    we_VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    we_VF_DIR_VPP_V_t VF_DIR_VPP_V;
    we_VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    we_VF_LDB_VQID_V_t VF_LDB_VQID_V;
    we_VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    we_LDB_QID2VQID_t LDB_QID2VQID;
    we_VF_DIR_VQID_V_t VF_DIR_VQID_V;
    we_VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    we_LDB_VASQID_V_t LDB_VASQID_V;
    we_DIR_VASQID_V_t DIR_VASQID_V;
    we_ALARM_VF_SYND0_t ALARM_VF_SYND0;
    we_ALARM_VF_SYND1_t ALARM_VF_SYND1;
    we_ALARM_VF_SYND2_t ALARM_VF_SYND2;
    we_LDB_QID_V_t LDB_QID_V;
    we_LDB_QID_ITS_t LDB_QID_ITS;
    we_LDB_QID_CFG_V_t LDB_QID_CFG_V;
    we_DIR_QID_V_t DIR_QID_V;
    we_DIR_QID_ITS_t DIR_QID_ITS;
    we_LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    we_LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    we_LDB_PP2VAS_t LDB_PP2VAS;
    we_LDB_PP_V_t LDB_PP_V;
    we_LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    we_LDB_CQ_ISR_t LDB_CQ_ISR;
    we_LDB_CQ_PASID_t LDB_CQ_PASID;
    we_DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    we_DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    we_DIR_PP2VAS_t DIR_PP2VAS;
    we_DIR_PP_V_t DIR_PP_V;
    we_DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    we_DIR_CQ_ISR_t DIR_CQ_ISR;
    we_DIR_CQ_PASID_t DIR_CQ_PASID;
    we_DIR_CQ_FMT_t DIR_CQ_FMT;
    we_SBE_CNT_0_t SBE_CNT_0;
    we_SBE_CNT_1_t SBE_CNT_1;
    we_PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    we_PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    we_PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    we_PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    we_PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    we_PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    we_PERF_SMON_TIMER_t PERF_SMON_TIMER;
    we_PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    we_PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    we_PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    we_WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    we_WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    we_AI_ADDR_L_t AI_ADDR_L;
    we_AI_ADDR_U_t AI_ADDR_U;
    we_AI_DATA_t AI_DATA;
    we_AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    we_AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    we_AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    we_AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    we_AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    we_AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    we_AW_SMON_TIMER_t AW_SMON_TIMER;
    we_AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    we_AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    we_AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_handcoded_t;

typedef logic [3:0] re_ALARM_PF_SYND0_t;

typedef logic [3:0] re_ALARM_PF_SYND1_t;

typedef logic [3:0] re_ALARM_PF_SYND2_t;

typedef logic [3:0] re_ALARM_HW_SYND_t;

typedef logic [3:0] re_VF_LDB_VPP_V_t;

typedef logic [3:0] re_VF_LDB_VPP2PP_t;

typedef logic [3:0] re_VF_DIR_VPP_V_t;

typedef logic [3:0] re_VF_DIR_VPP2PP_t;

typedef logic [3:0] re_VF_LDB_VQID_V_t;

typedef logic [3:0] re_VF_LDB_VQID2QID_t;

typedef logic [3:0] re_LDB_QID2VQID_t;

typedef logic [3:0] re_VF_DIR_VQID_V_t;

typedef logic [3:0] re_VF_DIR_VQID2QID_t;

typedef logic [3:0] re_LDB_VASQID_V_t;

typedef logic [3:0] re_DIR_VASQID_V_t;

typedef logic [3:0] re_ALARM_VF_SYND0_t;

typedef logic [3:0] re_ALARM_VF_SYND1_t;

typedef logic [3:0] re_ALARM_VF_SYND2_t;

typedef logic [3:0] re_LDB_QID_V_t;

typedef logic [3:0] re_LDB_QID_ITS_t;

typedef logic [3:0] re_LDB_QID_CFG_V_t;

typedef logic [3:0] re_DIR_QID_V_t;

typedef logic [3:0] re_DIR_QID_ITS_t;

typedef logic [3:0] re_LDB_CQ_ADDR_L_t;

typedef logic [3:0] re_LDB_CQ_ADDR_U_t;

typedef logic [3:0] re_LDB_PP2VAS_t;

typedef logic [3:0] re_LDB_PP_V_t;

typedef logic [3:0] re_LDB_CQ2VF_PF_RO_t;

typedef logic [3:0] re_LDB_CQ_ISR_t;

typedef logic [3:0] re_LDB_CQ_PASID_t;

typedef logic [3:0] re_DIR_CQ_ADDR_L_t;

typedef logic [3:0] re_DIR_CQ_ADDR_U_t;

typedef logic [3:0] re_DIR_PP2VAS_t;

typedef logic [3:0] re_DIR_PP_V_t;

typedef logic [3:0] re_DIR_CQ2VF_PF_RO_t;

typedef logic [3:0] re_DIR_CQ_ISR_t;

typedef logic [3:0] re_DIR_CQ_PASID_t;

typedef logic [3:0] re_DIR_CQ_FMT_t;

typedef logic [3:0] re_SBE_CNT_0_t;

typedef logic [3:0] re_SBE_CNT_1_t;

typedef logic [3:0] re_PERF_SMON_CONFIGURATION0_t;

typedef logic [3:0] re_PERF_SMON_CONFIGURATION1_t;

typedef logic [3:0] re_PERF_SMON_COMPARE0_t;

typedef logic [3:0] re_PERF_SMON_COMPARE1_t;

typedef logic [3:0] re_PERF_SMON_ACTIVITYCOUNTER0_t;

typedef logic [3:0] re_PERF_SMON_ACTIVITYCOUNTER1_t;

typedef logic [3:0] re_PERF_SMON_TIMER_t;

typedef logic [3:0] re_PERF_SMON_MAXIMUM_TIMER_t;

typedef logic [3:0] re_PERF_SMON_COMP_MASK0_t;

typedef logic [3:0] re_PERF_SMON_COMP_MASK1_t;

typedef logic [3:0] re_WB_DIR_CQ_STATE_t;

typedef logic [3:0] re_WB_LDB_CQ_STATE_t;

typedef logic [3:0] re_AI_ADDR_L_t;

typedef logic [3:0] re_AI_ADDR_U_t;

typedef logic [3:0] re_AI_DATA_t;

typedef logic [3:0] re_AW_SMON_CONFIGURATION0_t;

typedef logic [3:0] re_AW_SMON_CONFIGURATION1_t;

typedef logic [3:0] re_AW_SMON_COMPARE0_t;

typedef logic [3:0] re_AW_SMON_COMPARE1_t;

typedef logic [3:0] re_AW_SMON_ACTIVITYCOUNTER0_t;

typedef logic [3:0] re_AW_SMON_ACTIVITYCOUNTER1_t;

typedef logic [3:0] re_AW_SMON_TIMER_t;

typedef logic [3:0] re_AW_SMON_MAXIMUM_TIMER_t;

typedef logic [3:0] re_AW_SMON_COMP_MASK0_t;

typedef logic [3:0] re_AW_SMON_COMP_MASK1_t;

typedef struct packed {
    re_ALARM_PF_SYND0_t ALARM_PF_SYND0;
    re_ALARM_PF_SYND1_t ALARM_PF_SYND1;
    re_ALARM_PF_SYND2_t ALARM_PF_SYND2;
    re_ALARM_HW_SYND_t ALARM_HW_SYND;
    re_VF_LDB_VPP_V_t VF_LDB_VPP_V;
    re_VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    re_VF_DIR_VPP_V_t VF_DIR_VPP_V;
    re_VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    re_VF_LDB_VQID_V_t VF_LDB_VQID_V;
    re_VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    re_LDB_QID2VQID_t LDB_QID2VQID;
    re_VF_DIR_VQID_V_t VF_DIR_VQID_V;
    re_VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    re_LDB_VASQID_V_t LDB_VASQID_V;
    re_DIR_VASQID_V_t DIR_VASQID_V;
    re_ALARM_VF_SYND0_t ALARM_VF_SYND0;
    re_ALARM_VF_SYND1_t ALARM_VF_SYND1;
    re_ALARM_VF_SYND2_t ALARM_VF_SYND2;
    re_LDB_QID_V_t LDB_QID_V;
    re_LDB_QID_ITS_t LDB_QID_ITS;
    re_LDB_QID_CFG_V_t LDB_QID_CFG_V;
    re_DIR_QID_V_t DIR_QID_V;
    re_DIR_QID_ITS_t DIR_QID_ITS;
    re_LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    re_LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    re_LDB_PP2VAS_t LDB_PP2VAS;
    re_LDB_PP_V_t LDB_PP_V;
    re_LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    re_LDB_CQ_ISR_t LDB_CQ_ISR;
    re_LDB_CQ_PASID_t LDB_CQ_PASID;
    re_DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    re_DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    re_DIR_PP2VAS_t DIR_PP2VAS;
    re_DIR_PP_V_t DIR_PP_V;
    re_DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    re_DIR_CQ_ISR_t DIR_CQ_ISR;
    re_DIR_CQ_PASID_t DIR_CQ_PASID;
    re_DIR_CQ_FMT_t DIR_CQ_FMT;
    re_SBE_CNT_0_t SBE_CNT_0;
    re_SBE_CNT_1_t SBE_CNT_1;
    re_PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    re_PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    re_PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    re_PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    re_PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    re_PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    re_PERF_SMON_TIMER_t PERF_SMON_TIMER;
    re_PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    re_PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    re_PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    re_WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    re_WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    re_AI_ADDR_L_t AI_ADDR_L;
    re_AI_ADDR_U_t AI_ADDR_U;
    re_AI_DATA_t AI_DATA;
    re_AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    re_AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    re_AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    re_AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    re_AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    re_AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    re_AW_SMON_TIMER_t AW_SMON_TIMER;
    re_AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    re_AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    re_AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_re_t;

typedef logic handcode_rvalid_ALARM_PF_SYND0_t;

typedef logic handcode_rvalid_ALARM_PF_SYND1_t;

typedef logic handcode_rvalid_ALARM_PF_SYND2_t;

typedef logic handcode_rvalid_ALARM_HW_SYND_t;

typedef logic handcode_rvalid_VF_LDB_VPP_V_t;

typedef logic handcode_rvalid_VF_LDB_VPP2PP_t;

typedef logic handcode_rvalid_VF_DIR_VPP_V_t;

typedef logic handcode_rvalid_VF_DIR_VPP2PP_t;

typedef logic handcode_rvalid_VF_LDB_VQID_V_t;

typedef logic handcode_rvalid_VF_LDB_VQID2QID_t;

typedef logic handcode_rvalid_LDB_QID2VQID_t;

typedef logic handcode_rvalid_VF_DIR_VQID_V_t;

typedef logic handcode_rvalid_VF_DIR_VQID2QID_t;

typedef logic handcode_rvalid_LDB_VASQID_V_t;

typedef logic handcode_rvalid_DIR_VASQID_V_t;

typedef logic handcode_rvalid_ALARM_VF_SYND0_t;

typedef logic handcode_rvalid_ALARM_VF_SYND1_t;

typedef logic handcode_rvalid_ALARM_VF_SYND2_t;

typedef logic handcode_rvalid_LDB_QID_V_t;

typedef logic handcode_rvalid_LDB_QID_ITS_t;

typedef logic handcode_rvalid_LDB_QID_CFG_V_t;

typedef logic handcode_rvalid_DIR_QID_V_t;

typedef logic handcode_rvalid_DIR_QID_ITS_t;

typedef logic handcode_rvalid_LDB_CQ_ADDR_L_t;

typedef logic handcode_rvalid_LDB_CQ_ADDR_U_t;

typedef logic handcode_rvalid_LDB_PP2VAS_t;

typedef logic handcode_rvalid_LDB_PP_V_t;

typedef logic handcode_rvalid_LDB_CQ2VF_PF_RO_t;

typedef logic handcode_rvalid_LDB_CQ_ISR_t;

typedef logic handcode_rvalid_LDB_CQ_PASID_t;

typedef logic handcode_rvalid_DIR_CQ_ADDR_L_t;

typedef logic handcode_rvalid_DIR_CQ_ADDR_U_t;

typedef logic handcode_rvalid_DIR_PP2VAS_t;

typedef logic handcode_rvalid_DIR_PP_V_t;

typedef logic handcode_rvalid_DIR_CQ2VF_PF_RO_t;

typedef logic handcode_rvalid_DIR_CQ_ISR_t;

typedef logic handcode_rvalid_DIR_CQ_PASID_t;

typedef logic handcode_rvalid_DIR_CQ_FMT_t;

typedef logic handcode_rvalid_SBE_CNT_0_t;

typedef logic handcode_rvalid_SBE_CNT_1_t;

typedef logic handcode_rvalid_PERF_SMON_CONFIGURATION0_t;

typedef logic handcode_rvalid_PERF_SMON_CONFIGURATION1_t;

typedef logic handcode_rvalid_PERF_SMON_COMPARE0_t;

typedef logic handcode_rvalid_PERF_SMON_COMPARE1_t;

typedef logic handcode_rvalid_PERF_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_rvalid_PERF_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_rvalid_PERF_SMON_TIMER_t;

typedef logic handcode_rvalid_PERF_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_rvalid_PERF_SMON_COMP_MASK0_t;

typedef logic handcode_rvalid_PERF_SMON_COMP_MASK1_t;

typedef logic handcode_rvalid_WB_DIR_CQ_STATE_t;

typedef logic handcode_rvalid_WB_LDB_CQ_STATE_t;

typedef logic handcode_rvalid_AI_ADDR_L_t;

typedef logic handcode_rvalid_AI_ADDR_U_t;

typedef logic handcode_rvalid_AI_DATA_t;

typedef logic handcode_rvalid_AW_SMON_CONFIGURATION0_t;

typedef logic handcode_rvalid_AW_SMON_CONFIGURATION1_t;

typedef logic handcode_rvalid_AW_SMON_COMPARE0_t;

typedef logic handcode_rvalid_AW_SMON_COMPARE1_t;

typedef logic handcode_rvalid_AW_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_rvalid_AW_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_rvalid_AW_SMON_TIMER_t;

typedef logic handcode_rvalid_AW_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_rvalid_AW_SMON_COMP_MASK0_t;

typedef logic handcode_rvalid_AW_SMON_COMP_MASK1_t;

typedef struct packed {
    handcode_rvalid_ALARM_PF_SYND0_t ALARM_PF_SYND0;
    handcode_rvalid_ALARM_PF_SYND1_t ALARM_PF_SYND1;
    handcode_rvalid_ALARM_PF_SYND2_t ALARM_PF_SYND2;
    handcode_rvalid_ALARM_HW_SYND_t ALARM_HW_SYND;
    handcode_rvalid_VF_LDB_VPP_V_t VF_LDB_VPP_V;
    handcode_rvalid_VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    handcode_rvalid_VF_DIR_VPP_V_t VF_DIR_VPP_V;
    handcode_rvalid_VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    handcode_rvalid_VF_LDB_VQID_V_t VF_LDB_VQID_V;
    handcode_rvalid_VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    handcode_rvalid_LDB_QID2VQID_t LDB_QID2VQID;
    handcode_rvalid_VF_DIR_VQID_V_t VF_DIR_VQID_V;
    handcode_rvalid_VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    handcode_rvalid_LDB_VASQID_V_t LDB_VASQID_V;
    handcode_rvalid_DIR_VASQID_V_t DIR_VASQID_V;
    handcode_rvalid_ALARM_VF_SYND0_t ALARM_VF_SYND0;
    handcode_rvalid_ALARM_VF_SYND1_t ALARM_VF_SYND1;
    handcode_rvalid_ALARM_VF_SYND2_t ALARM_VF_SYND2;
    handcode_rvalid_LDB_QID_V_t LDB_QID_V;
    handcode_rvalid_LDB_QID_ITS_t LDB_QID_ITS;
    handcode_rvalid_LDB_QID_CFG_V_t LDB_QID_CFG_V;
    handcode_rvalid_DIR_QID_V_t DIR_QID_V;
    handcode_rvalid_DIR_QID_ITS_t DIR_QID_ITS;
    handcode_rvalid_LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    handcode_rvalid_LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    handcode_rvalid_LDB_PP2VAS_t LDB_PP2VAS;
    handcode_rvalid_LDB_PP_V_t LDB_PP_V;
    handcode_rvalid_LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    handcode_rvalid_LDB_CQ_ISR_t LDB_CQ_ISR;
    handcode_rvalid_LDB_CQ_PASID_t LDB_CQ_PASID;
    handcode_rvalid_DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    handcode_rvalid_DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    handcode_rvalid_DIR_PP2VAS_t DIR_PP2VAS;
    handcode_rvalid_DIR_PP_V_t DIR_PP_V;
    handcode_rvalid_DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    handcode_rvalid_DIR_CQ_ISR_t DIR_CQ_ISR;
    handcode_rvalid_DIR_CQ_PASID_t DIR_CQ_PASID;
    handcode_rvalid_DIR_CQ_FMT_t DIR_CQ_FMT;
    handcode_rvalid_SBE_CNT_0_t SBE_CNT_0;
    handcode_rvalid_SBE_CNT_1_t SBE_CNT_1;
    handcode_rvalid_PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    handcode_rvalid_PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    handcode_rvalid_PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    handcode_rvalid_PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    handcode_rvalid_PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    handcode_rvalid_PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    handcode_rvalid_PERF_SMON_TIMER_t PERF_SMON_TIMER;
    handcode_rvalid_PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    handcode_rvalid_PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    handcode_rvalid_PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    handcode_rvalid_WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    handcode_rvalid_WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    handcode_rvalid_AI_ADDR_L_t AI_ADDR_L;
    handcode_rvalid_AI_ADDR_U_t AI_ADDR_U;
    handcode_rvalid_AI_DATA_t AI_DATA;
    handcode_rvalid_AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    handcode_rvalid_AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    handcode_rvalid_AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    handcode_rvalid_AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    handcode_rvalid_AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    handcode_rvalid_AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    handcode_rvalid_AW_SMON_TIMER_t AW_SMON_TIMER;
    handcode_rvalid_AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    handcode_rvalid_AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    handcode_rvalid_AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_rvalid_t;

typedef logic handcode_wvalid_ALARM_PF_SYND0_t;

typedef logic handcode_wvalid_ALARM_PF_SYND1_t;

typedef logic handcode_wvalid_ALARM_PF_SYND2_t;

typedef logic handcode_wvalid_ALARM_HW_SYND_t;

typedef logic handcode_wvalid_VF_LDB_VPP_V_t;

typedef logic handcode_wvalid_VF_LDB_VPP2PP_t;

typedef logic handcode_wvalid_VF_DIR_VPP_V_t;

typedef logic handcode_wvalid_VF_DIR_VPP2PP_t;

typedef logic handcode_wvalid_VF_LDB_VQID_V_t;

typedef logic handcode_wvalid_VF_LDB_VQID2QID_t;

typedef logic handcode_wvalid_LDB_QID2VQID_t;

typedef logic handcode_wvalid_VF_DIR_VQID_V_t;

typedef logic handcode_wvalid_VF_DIR_VQID2QID_t;

typedef logic handcode_wvalid_LDB_VASQID_V_t;

typedef logic handcode_wvalid_DIR_VASQID_V_t;

typedef logic handcode_wvalid_ALARM_VF_SYND0_t;

typedef logic handcode_wvalid_ALARM_VF_SYND1_t;

typedef logic handcode_wvalid_ALARM_VF_SYND2_t;

typedef logic handcode_wvalid_LDB_QID_V_t;

typedef logic handcode_wvalid_LDB_QID_ITS_t;

typedef logic handcode_wvalid_LDB_QID_CFG_V_t;

typedef logic handcode_wvalid_DIR_QID_V_t;

typedef logic handcode_wvalid_DIR_QID_ITS_t;

typedef logic handcode_wvalid_LDB_CQ_ADDR_L_t;

typedef logic handcode_wvalid_LDB_CQ_ADDR_U_t;

typedef logic handcode_wvalid_LDB_PP2VAS_t;

typedef logic handcode_wvalid_LDB_PP_V_t;

typedef logic handcode_wvalid_LDB_CQ2VF_PF_RO_t;

typedef logic handcode_wvalid_LDB_CQ_ISR_t;

typedef logic handcode_wvalid_LDB_CQ_PASID_t;

typedef logic handcode_wvalid_DIR_CQ_ADDR_L_t;

typedef logic handcode_wvalid_DIR_CQ_ADDR_U_t;

typedef logic handcode_wvalid_DIR_PP2VAS_t;

typedef logic handcode_wvalid_DIR_PP_V_t;

typedef logic handcode_wvalid_DIR_CQ2VF_PF_RO_t;

typedef logic handcode_wvalid_DIR_CQ_ISR_t;

typedef logic handcode_wvalid_DIR_CQ_PASID_t;

typedef logic handcode_wvalid_DIR_CQ_FMT_t;

typedef logic handcode_wvalid_SBE_CNT_0_t;

typedef logic handcode_wvalid_SBE_CNT_1_t;

typedef logic handcode_wvalid_PERF_SMON_CONFIGURATION0_t;

typedef logic handcode_wvalid_PERF_SMON_CONFIGURATION1_t;

typedef logic handcode_wvalid_PERF_SMON_COMPARE0_t;

typedef logic handcode_wvalid_PERF_SMON_COMPARE1_t;

typedef logic handcode_wvalid_PERF_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_wvalid_PERF_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_wvalid_PERF_SMON_TIMER_t;

typedef logic handcode_wvalid_PERF_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_wvalid_PERF_SMON_COMP_MASK0_t;

typedef logic handcode_wvalid_PERF_SMON_COMP_MASK1_t;

typedef logic handcode_wvalid_WB_DIR_CQ_STATE_t;

typedef logic handcode_wvalid_WB_LDB_CQ_STATE_t;

typedef logic handcode_wvalid_AI_ADDR_L_t;

typedef logic handcode_wvalid_AI_ADDR_U_t;

typedef logic handcode_wvalid_AI_DATA_t;

typedef logic handcode_wvalid_AW_SMON_CONFIGURATION0_t;

typedef logic handcode_wvalid_AW_SMON_CONFIGURATION1_t;

typedef logic handcode_wvalid_AW_SMON_COMPARE0_t;

typedef logic handcode_wvalid_AW_SMON_COMPARE1_t;

typedef logic handcode_wvalid_AW_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_wvalid_AW_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_wvalid_AW_SMON_TIMER_t;

typedef logic handcode_wvalid_AW_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_wvalid_AW_SMON_COMP_MASK0_t;

typedef logic handcode_wvalid_AW_SMON_COMP_MASK1_t;

typedef struct packed {
    handcode_wvalid_ALARM_PF_SYND0_t ALARM_PF_SYND0;
    handcode_wvalid_ALARM_PF_SYND1_t ALARM_PF_SYND1;
    handcode_wvalid_ALARM_PF_SYND2_t ALARM_PF_SYND2;
    handcode_wvalid_ALARM_HW_SYND_t ALARM_HW_SYND;
    handcode_wvalid_VF_LDB_VPP_V_t VF_LDB_VPP_V;
    handcode_wvalid_VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    handcode_wvalid_VF_DIR_VPP_V_t VF_DIR_VPP_V;
    handcode_wvalid_VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    handcode_wvalid_VF_LDB_VQID_V_t VF_LDB_VQID_V;
    handcode_wvalid_VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    handcode_wvalid_LDB_QID2VQID_t LDB_QID2VQID;
    handcode_wvalid_VF_DIR_VQID_V_t VF_DIR_VQID_V;
    handcode_wvalid_VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    handcode_wvalid_LDB_VASQID_V_t LDB_VASQID_V;
    handcode_wvalid_DIR_VASQID_V_t DIR_VASQID_V;
    handcode_wvalid_ALARM_VF_SYND0_t ALARM_VF_SYND0;
    handcode_wvalid_ALARM_VF_SYND1_t ALARM_VF_SYND1;
    handcode_wvalid_ALARM_VF_SYND2_t ALARM_VF_SYND2;
    handcode_wvalid_LDB_QID_V_t LDB_QID_V;
    handcode_wvalid_LDB_QID_ITS_t LDB_QID_ITS;
    handcode_wvalid_LDB_QID_CFG_V_t LDB_QID_CFG_V;
    handcode_wvalid_DIR_QID_V_t DIR_QID_V;
    handcode_wvalid_DIR_QID_ITS_t DIR_QID_ITS;
    handcode_wvalid_LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    handcode_wvalid_LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    handcode_wvalid_LDB_PP2VAS_t LDB_PP2VAS;
    handcode_wvalid_LDB_PP_V_t LDB_PP_V;
    handcode_wvalid_LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    handcode_wvalid_LDB_CQ_ISR_t LDB_CQ_ISR;
    handcode_wvalid_LDB_CQ_PASID_t LDB_CQ_PASID;
    handcode_wvalid_DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    handcode_wvalid_DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    handcode_wvalid_DIR_PP2VAS_t DIR_PP2VAS;
    handcode_wvalid_DIR_PP_V_t DIR_PP_V;
    handcode_wvalid_DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    handcode_wvalid_DIR_CQ_ISR_t DIR_CQ_ISR;
    handcode_wvalid_DIR_CQ_PASID_t DIR_CQ_PASID;
    handcode_wvalid_DIR_CQ_FMT_t DIR_CQ_FMT;
    handcode_wvalid_SBE_CNT_0_t SBE_CNT_0;
    handcode_wvalid_SBE_CNT_1_t SBE_CNT_1;
    handcode_wvalid_PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    handcode_wvalid_PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    handcode_wvalid_PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    handcode_wvalid_PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    handcode_wvalid_PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    handcode_wvalid_PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    handcode_wvalid_PERF_SMON_TIMER_t PERF_SMON_TIMER;
    handcode_wvalid_PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    handcode_wvalid_PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    handcode_wvalid_PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    handcode_wvalid_WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    handcode_wvalid_WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    handcode_wvalid_AI_ADDR_L_t AI_ADDR_L;
    handcode_wvalid_AI_ADDR_U_t AI_ADDR_U;
    handcode_wvalid_AI_DATA_t AI_DATA;
    handcode_wvalid_AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    handcode_wvalid_AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    handcode_wvalid_AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    handcode_wvalid_AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    handcode_wvalid_AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    handcode_wvalid_AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    handcode_wvalid_AW_SMON_TIMER_t AW_SMON_TIMER;
    handcode_wvalid_AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    handcode_wvalid_AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    handcode_wvalid_AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_wvalid_t;

typedef logic handcode_error_ALARM_PF_SYND0_t;

typedef logic handcode_error_ALARM_PF_SYND1_t;

typedef logic handcode_error_ALARM_PF_SYND2_t;

typedef logic handcode_error_ALARM_HW_SYND_t;

typedef logic handcode_error_VF_LDB_VPP_V_t;

typedef logic handcode_error_VF_LDB_VPP2PP_t;

typedef logic handcode_error_VF_DIR_VPP_V_t;

typedef logic handcode_error_VF_DIR_VPP2PP_t;

typedef logic handcode_error_VF_LDB_VQID_V_t;

typedef logic handcode_error_VF_LDB_VQID2QID_t;

typedef logic handcode_error_LDB_QID2VQID_t;

typedef logic handcode_error_VF_DIR_VQID_V_t;

typedef logic handcode_error_VF_DIR_VQID2QID_t;

typedef logic handcode_error_LDB_VASQID_V_t;

typedef logic handcode_error_DIR_VASQID_V_t;

typedef logic handcode_error_ALARM_VF_SYND0_t;

typedef logic handcode_error_ALARM_VF_SYND1_t;

typedef logic handcode_error_ALARM_VF_SYND2_t;

typedef logic handcode_error_LDB_QID_V_t;

typedef logic handcode_error_LDB_QID_ITS_t;

typedef logic handcode_error_LDB_QID_CFG_V_t;

typedef logic handcode_error_DIR_QID_V_t;

typedef logic handcode_error_DIR_QID_ITS_t;

typedef logic handcode_error_LDB_CQ_ADDR_L_t;

typedef logic handcode_error_LDB_CQ_ADDR_U_t;

typedef logic handcode_error_LDB_PP2VAS_t;

typedef logic handcode_error_LDB_PP_V_t;

typedef logic handcode_error_LDB_CQ2VF_PF_RO_t;

typedef logic handcode_error_LDB_CQ_ISR_t;

typedef logic handcode_error_LDB_CQ_PASID_t;

typedef logic handcode_error_DIR_CQ_ADDR_L_t;

typedef logic handcode_error_DIR_CQ_ADDR_U_t;

typedef logic handcode_error_DIR_PP2VAS_t;

typedef logic handcode_error_DIR_PP_V_t;

typedef logic handcode_error_DIR_CQ2VF_PF_RO_t;

typedef logic handcode_error_DIR_CQ_ISR_t;

typedef logic handcode_error_DIR_CQ_PASID_t;

typedef logic handcode_error_DIR_CQ_FMT_t;

typedef logic handcode_error_SBE_CNT_0_t;

typedef logic handcode_error_SBE_CNT_1_t;

typedef logic handcode_error_PERF_SMON_CONFIGURATION0_t;

typedef logic handcode_error_PERF_SMON_CONFIGURATION1_t;

typedef logic handcode_error_PERF_SMON_COMPARE0_t;

typedef logic handcode_error_PERF_SMON_COMPARE1_t;

typedef logic handcode_error_PERF_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_error_PERF_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_error_PERF_SMON_TIMER_t;

typedef logic handcode_error_PERF_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_error_PERF_SMON_COMP_MASK0_t;

typedef logic handcode_error_PERF_SMON_COMP_MASK1_t;

typedef logic handcode_error_WB_DIR_CQ_STATE_t;

typedef logic handcode_error_WB_LDB_CQ_STATE_t;

typedef logic handcode_error_AI_ADDR_L_t;

typedef logic handcode_error_AI_ADDR_U_t;

typedef logic handcode_error_AI_DATA_t;

typedef logic handcode_error_AW_SMON_CONFIGURATION0_t;

typedef logic handcode_error_AW_SMON_CONFIGURATION1_t;

typedef logic handcode_error_AW_SMON_COMPARE0_t;

typedef logic handcode_error_AW_SMON_COMPARE1_t;

typedef logic handcode_error_AW_SMON_ACTIVITYCOUNTER0_t;

typedef logic handcode_error_AW_SMON_ACTIVITYCOUNTER1_t;

typedef logic handcode_error_AW_SMON_TIMER_t;

typedef logic handcode_error_AW_SMON_MAXIMUM_TIMER_t;

typedef logic handcode_error_AW_SMON_COMP_MASK0_t;

typedef logic handcode_error_AW_SMON_COMP_MASK1_t;

typedef struct packed {
    handcode_error_ALARM_PF_SYND0_t ALARM_PF_SYND0;
    handcode_error_ALARM_PF_SYND1_t ALARM_PF_SYND1;
    handcode_error_ALARM_PF_SYND2_t ALARM_PF_SYND2;
    handcode_error_ALARM_HW_SYND_t ALARM_HW_SYND;
    handcode_error_VF_LDB_VPP_V_t VF_LDB_VPP_V;
    handcode_error_VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    handcode_error_VF_DIR_VPP_V_t VF_DIR_VPP_V;
    handcode_error_VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    handcode_error_VF_LDB_VQID_V_t VF_LDB_VQID_V;
    handcode_error_VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    handcode_error_LDB_QID2VQID_t LDB_QID2VQID;
    handcode_error_VF_DIR_VQID_V_t VF_DIR_VQID_V;
    handcode_error_VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    handcode_error_LDB_VASQID_V_t LDB_VASQID_V;
    handcode_error_DIR_VASQID_V_t DIR_VASQID_V;
    handcode_error_ALARM_VF_SYND0_t ALARM_VF_SYND0;
    handcode_error_ALARM_VF_SYND1_t ALARM_VF_SYND1;
    handcode_error_ALARM_VF_SYND2_t ALARM_VF_SYND2;
    handcode_error_LDB_QID_V_t LDB_QID_V;
    handcode_error_LDB_QID_ITS_t LDB_QID_ITS;
    handcode_error_LDB_QID_CFG_V_t LDB_QID_CFG_V;
    handcode_error_DIR_QID_V_t DIR_QID_V;
    handcode_error_DIR_QID_ITS_t DIR_QID_ITS;
    handcode_error_LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    handcode_error_LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    handcode_error_LDB_PP2VAS_t LDB_PP2VAS;
    handcode_error_LDB_PP_V_t LDB_PP_V;
    handcode_error_LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    handcode_error_LDB_CQ_ISR_t LDB_CQ_ISR;
    handcode_error_LDB_CQ_PASID_t LDB_CQ_PASID;
    handcode_error_DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    handcode_error_DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    handcode_error_DIR_PP2VAS_t DIR_PP2VAS;
    handcode_error_DIR_PP_V_t DIR_PP_V;
    handcode_error_DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    handcode_error_DIR_CQ_ISR_t DIR_CQ_ISR;
    handcode_error_DIR_CQ_PASID_t DIR_CQ_PASID;
    handcode_error_DIR_CQ_FMT_t DIR_CQ_FMT;
    handcode_error_SBE_CNT_0_t SBE_CNT_0;
    handcode_error_SBE_CNT_1_t SBE_CNT_1;
    handcode_error_PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    handcode_error_PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    handcode_error_PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    handcode_error_PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    handcode_error_PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    handcode_error_PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    handcode_error_PERF_SMON_TIMER_t PERF_SMON_TIMER;
    handcode_error_PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    handcode_error_PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    handcode_error_PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    handcode_error_WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    handcode_error_WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    handcode_error_AI_ADDR_L_t AI_ADDR_L;
    handcode_error_AI_ADDR_U_t AI_ADDR_U;
    handcode_error_AI_DATA_t AI_DATA;
    handcode_error_AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    handcode_error_AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    handcode_error_AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    handcode_error_AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    handcode_error_AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    handcode_error_AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    handcode_error_AW_SMON_TIMER_t AW_SMON_TIMER;
    handcode_error_AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    handcode_error_AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    handcode_error_AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_error_t;

// ===================================================
// HandCoded Read/Write Structure
//    (used by project HandCoded specified registers)

// ===================================================
// HandCoded Read/Write Structure
//    (used by project HandCoded specified registers)

typedef struct packed {
    ALARM_PF_SYND0_t ALARM_PF_SYND0;
    ALARM_PF_SYND1_t ALARM_PF_SYND1;
    ALARM_PF_SYND2_t ALARM_PF_SYND2;
    ALARM_HW_SYND_t ALARM_HW_SYND;
    VF_LDB_VPP_V_t VF_LDB_VPP_V;
    VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    VF_DIR_VPP_V_t VF_DIR_VPP_V;
    VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    VF_LDB_VQID_V_t VF_LDB_VQID_V;
    VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    LDB_QID2VQID_t LDB_QID2VQID;
    VF_DIR_VQID_V_t VF_DIR_VQID_V;
    VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    LDB_VASQID_V_t LDB_VASQID_V;
    DIR_VASQID_V_t DIR_VASQID_V;
    ALARM_VF_SYND0_t ALARM_VF_SYND0;
    ALARM_VF_SYND1_t ALARM_VF_SYND1;
    ALARM_VF_SYND2_t ALARM_VF_SYND2;
    LDB_QID_V_t LDB_QID_V;
    LDB_QID_ITS_t LDB_QID_ITS;
    LDB_QID_CFG_V_t LDB_QID_CFG_V;
    DIR_QID_V_t DIR_QID_V;
    DIR_QID_ITS_t DIR_QID_ITS;
    LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    LDB_PP2VAS_t LDB_PP2VAS;
    LDB_PP_V_t LDB_PP_V;
    LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    LDB_CQ_ISR_t LDB_CQ_ISR;
    LDB_CQ_PASID_t LDB_CQ_PASID;
    DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    DIR_PP2VAS_t DIR_PP2VAS;
    DIR_PP_V_t DIR_PP_V;
    DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    DIR_CQ_ISR_t DIR_CQ_ISR;
    DIR_CQ_PASID_t DIR_CQ_PASID;
    DIR_CQ_FMT_t DIR_CQ_FMT;
    SBE_CNT_0_t SBE_CNT_0;
    SBE_CNT_1_t SBE_CNT_1;
    PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    PERF_SMON_TIMER_t PERF_SMON_TIMER;
    PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    AI_ADDR_L_t AI_ADDR_L;
    AI_ADDR_U_t AI_ADDR_U;
    AI_DATA_t AI_DATA;
    AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    AW_SMON_TIMER_t AW_SMON_TIMER;
    AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_reg_read_t;

typedef struct packed {
    ALARM_PF_SYND0_t ALARM_PF_SYND0;
    ALARM_PF_SYND1_t ALARM_PF_SYND1;
    ALARM_PF_SYND2_t ALARM_PF_SYND2;
    ALARM_HW_SYND_t ALARM_HW_SYND;
    VF_LDB_VPP_V_t VF_LDB_VPP_V;
    VF_LDB_VPP2PP_t VF_LDB_VPP2PP;
    VF_DIR_VPP_V_t VF_DIR_VPP_V;
    VF_DIR_VPP2PP_t VF_DIR_VPP2PP;
    VF_LDB_VQID_V_t VF_LDB_VQID_V;
    VF_LDB_VQID2QID_t VF_LDB_VQID2QID;
    LDB_QID2VQID_t LDB_QID2VQID;
    VF_DIR_VQID_V_t VF_DIR_VQID_V;
    VF_DIR_VQID2QID_t VF_DIR_VQID2QID;
    LDB_VASQID_V_t LDB_VASQID_V;
    DIR_VASQID_V_t DIR_VASQID_V;
    ALARM_VF_SYND0_t ALARM_VF_SYND0;
    ALARM_VF_SYND1_t ALARM_VF_SYND1;
    ALARM_VF_SYND2_t ALARM_VF_SYND2;
    LDB_QID_V_t LDB_QID_V;
    LDB_QID_ITS_t LDB_QID_ITS;
    LDB_QID_CFG_V_t LDB_QID_CFG_V;
    DIR_QID_V_t DIR_QID_V;
    DIR_QID_ITS_t DIR_QID_ITS;
    LDB_CQ_ADDR_L_t LDB_CQ_ADDR_L;
    LDB_CQ_ADDR_U_t LDB_CQ_ADDR_U;
    LDB_PP2VAS_t LDB_PP2VAS;
    LDB_PP_V_t LDB_PP_V;
    LDB_CQ2VF_PF_RO_t LDB_CQ2VF_PF_RO;
    LDB_CQ_ISR_t LDB_CQ_ISR;
    LDB_CQ_PASID_t LDB_CQ_PASID;
    DIR_CQ_ADDR_L_t DIR_CQ_ADDR_L;
    DIR_CQ_ADDR_U_t DIR_CQ_ADDR_U;
    DIR_PP2VAS_t DIR_PP2VAS;
    DIR_PP_V_t DIR_PP_V;
    DIR_CQ2VF_PF_RO_t DIR_CQ2VF_PF_RO;
    DIR_CQ_ISR_t DIR_CQ_ISR;
    DIR_CQ_PASID_t DIR_CQ_PASID;
    DIR_CQ_FMT_t DIR_CQ_FMT;
    SBE_CNT_0_t SBE_CNT_0;
    SBE_CNT_1_t SBE_CNT_1;
    PERF_SMON_CONFIGURATION0_t PERF_SMON_CONFIGURATION0;
    PERF_SMON_CONFIGURATION1_t PERF_SMON_CONFIGURATION1;
    PERF_SMON_COMPARE0_t PERF_SMON_COMPARE0;
    PERF_SMON_COMPARE1_t PERF_SMON_COMPARE1;
    PERF_SMON_ACTIVITYCOUNTER0_t PERF_SMON_ACTIVITYCOUNTER0;
    PERF_SMON_ACTIVITYCOUNTER1_t PERF_SMON_ACTIVITYCOUNTER1;
    PERF_SMON_TIMER_t PERF_SMON_TIMER;
    PERF_SMON_MAXIMUM_TIMER_t PERF_SMON_MAXIMUM_TIMER;
    PERF_SMON_COMP_MASK0_t PERF_SMON_COMP_MASK0;
    PERF_SMON_COMP_MASK1_t PERF_SMON_COMP_MASK1;
    WB_DIR_CQ_STATE_t WB_DIR_CQ_STATE;
    WB_LDB_CQ_STATE_t WB_LDB_CQ_STATE;
    AI_ADDR_L_t AI_ADDR_L;
    AI_ADDR_U_t AI_ADDR_U;
    AI_DATA_t AI_DATA;
    AW_SMON_CONFIGURATION0_t AW_SMON_CONFIGURATION0;
    AW_SMON_CONFIGURATION1_t AW_SMON_CONFIGURATION1;
    AW_SMON_COMPARE0_t AW_SMON_COMPARE0;
    AW_SMON_COMPARE1_t AW_SMON_COMPARE1;
    AW_SMON_ACTIVITYCOUNTER0_t AW_SMON_ACTIVITYCOUNTER0;
    AW_SMON_ACTIVITYCOUNTER1_t AW_SMON_ACTIVITYCOUNTER1;
    AW_SMON_TIMER_t AW_SMON_TIMER;
    AW_SMON_MAXIMUM_TIMER_t AW_SMON_MAXIMUM_TIMER;
    AW_SMON_COMP_MASK0_t AW_SMON_COMP_MASK0;
    AW_SMON_COMP_MASK1_t AW_SMON_COMP_MASK1;
} hqm_system_csr_hc_reg_write_t;

// ===================================================
// RW/V2 Structure

// ===================================================
// Parity Bit Structure

// ===================================================
// Watch Signals Structure


endpackage: hqm_system_csr_pkg

`endif // HQM_SYSTEM_CSR_PKG_VH
