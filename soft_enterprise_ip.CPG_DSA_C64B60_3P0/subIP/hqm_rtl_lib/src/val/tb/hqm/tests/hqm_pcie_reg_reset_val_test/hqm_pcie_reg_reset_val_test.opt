use lib "$ENV{MODEL_ROOT}/cfg/ace/lib";
use common::RunModes;
common::RunModes::init_library;
{
   %opts = (
      -simv_args => [
            "+AW_CONTINUE_ON_ERROR", "+iosf_tracker_filename=iosf_trk", "-assert nopostproc", "+HQMS_DEBUG", "+HQMI_DEBUG", "+HQM_PCIE_RC_VIP_PRESENT +HQM_PCIE_EP_VIP_ABSENT=0", "+hqm_pcie_init_stim_config::skip_msix_cfg=1", "+vcs+lic+wait", "+SLA_FLUSH_PHASE_TIMEOUT=400000 +HQM_TB_EOT_CHECK_DISABLE",
            ],
      -test_in_model => 1,
      -enabled_post_process_modes => "hqm_test",
   );
   %runModes = (
      sec_6_6_1  => {   
          -simv_args => 
          ["",
          ], 
          },
      cold_warm_reset_pf	  => {   
          -simv_args => ["+HQM_SEQ_CFG=aceroot/verif/tb/hqm/hqm_pcie_lib/cft/hqm_ss_warm_reset.cft",
	              							"+HQM_RESET_CHECK_REG_FILE=hqm_pf_cfg_i",
                        ],   },
      smoke => {
          -simv_args => ["+HQM_SEQ_CFG=aceroot/verif/tb/hqm/hqm_pcie_lib/cft/hqm_warm_reset.cft",
									"+HQM_SEQ_CFG=aceroot/verif/tb/hqm/tests/hqm_cfg_smoke.cft",
                        ],
      },


       ##-----------------------------------------------------------------------------------------
       # Strap variation for SAI field in ResetPrep msg sent to HQM
       ##-----------------------------------------------------------------------------------------
       gp_strap_resetprep_sai_00    => {
           -simv_args => [  "+HQM_ILLEGAL_RESETPREP_SAI ",
                       "+HQM_STRAP_RESETPREP_SAI_0=0xaa",
                       "+HQM_STRAP_RESETPREP_SAI_1=0x55 ",
                    ],
       },
       gp_strap_resetprep_sai_01    => {
           -simv_args => [  "+HQM_RESEND_RESETPREP_SAI",
                       "+HQM_ILLEGAL_RESETPREP_SAI",
                       "+HQM_STRAP_RESETPREP_SAI_0=0xaa",
                       "+HQM_STRAP_RESETPREP_SAI_1=0x55",
                    ],
       },
       gp_strap_resetprep_sai_02    => {
           -simv_args => [  "+HQM_ILLEGAL_RESETPREP_SAI ",
                       "+HQM_STRAP_RESETPREP_SAI_0=0x55",
                       "+HQM_STRAP_RESETPREP_SAI_1=0xaa ",
                    ],
       },
       gp_strap_resetprep_sai_03    => {
           -simv_args => [  "+HQM_RESEND_RESETPREP_SAI",
                       "+HQM_ILLEGAL_RESETPREP_SAI",
                       "+HQM_STRAP_RESETPREP_SAI_0=0x55",
                       "+HQM_STRAP_RESETPREP_SAI_1=0xaa",
                    ],
       },
       gp_strap_resetprep_sai_04    => {
           -simv_args => [  "+HQM_ILLEGAL_RESETPREP_SAI ",
                       "+HQM_STRAP_RESETPREP_SAI_0=0xf0",
                       "+HQM_STRAP_RESETPREP_SAI_1=0x0f ",
                    ],
       },
       gp_strap_resetprep_sai_05    => {
           -simv_args => [  "+HQM_RESEND_RESETPREP_SAI",
                       "+HQM_ILLEGAL_RESETPREP_SAI",
                       "+HQM_STRAP_RESETPREP_SAI_0=0xf0",
                       "+HQM_STRAP_RESETPREP_SAI_1=0x0f",
                    ],
       },
       gp_strap_resetprep_sai_06    => {
           -simv_args => [  "+HQM_ILLEGAL_RESETPREP_SAI ",
                       "+HQM_STRAP_RESETPREP_SAI_0=0x0f",
                       "+HQM_STRAP_RESETPREP_SAI_1=0xf0 ",
                    ],
       },
       gp_strap_resetprep_sai_07   => {
           -simv_args => [  "+HQM_RESEND_RESETPREP_SAI",
                       "+HQM_ILLEGAL_RESETPREP_SAI",
                       "+HQM_STRAP_RESETPREP_SAI_0=0x0f",
                       "+HQM_STRAP_RESETPREP_SAI_1=0xf0",
                    ],
       },

      ##-----------------------------------------------------------------------------------------
      # Strap variation for SAI field in force_pok msg sent to HQM
      ##-----------------------------------------------------------------------------------------
       gp_strap_force_pok_sai_00    => {
           -simv_args => [  "+HQM_ILLEGAL_FORCE_POK_SAI ",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0xaa",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0x55 ",
                    ],
       },
       gp_strap_force_pok_sai_01    => {
           -simv_args => [  "+HQM_RESEND_FORCE_POK_SAI",
                       "+HQM_ILLEGAL_FORCE_POK_SAI",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0xaa",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0x55",
                    ],
       },
       gp_strap_force_pok_sai_02    => {
           -simv_args => [  "+HQM_ILLEGAL_FORCE_POK_SAI ",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0x55",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0xaa ",
                    ],
       },
       gp_strap_force_pok_sai_03    => {
           -simv_args => [  "+HQM_RESEND_FORCE_POK_SAI",
                       "+HQM_ILLEGAL_FORCE_POK_SAI",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0x55",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0xaa",
                    ],
       },
       gp_strap_force_pok_sai_04    => {
           -simv_args => [  "+HQM_ILLEGAL_FORCE_POK_SAI ",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0xf0",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0x0f ",
                    ],
       },
       gp_strap_force_pok_sai_05    => {
           -simv_args => [  "+HQM_RESEND_FORCE_POK_SAI",
                       "+HQM_ILLEGAL_FORCE_POK_SAI",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0xf0",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0x0f",
                    ],
       },

       gp_strap_force_pok_sai_06    => {
           -simv_args => [  "+HQM_ILLEGAL_FORCE_POK_SAI",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0x0f",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0xf0 ",
                    ],
       },
       gp_strap_force_pok_sai_07    => {
           -simv_args => [  "+HQM_RESEND_FORCE_POK_SAI",
                       "+HQM_ILLEGAL_FORCE_POK_SAI",
                       "+HQM_STRAP_FORCE_POK_SAI_0=0x0f",
                       "+HQM_STRAP_FORCE_POK_SAI_1=0xf0",
                    ],
       },



   );
   import_runmodes (
         -dest_hash => \%runModes,
   );
}

