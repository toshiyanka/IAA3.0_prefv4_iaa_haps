use lib "$ENV{MODEL_ROOT}/cfg/ace/lib";
use common::RunModes;
common::RunModes::init_library;
{
   %opts = (
      -simv_args => [
            "+AW_CONTINUE_ON_ERROR", "+iosf_tracker_filename=iosf_trk", "-assert nopostproc", "+HQMS_DEBUG", "+HQMI_DEBUG", "+vcs+lic+wait", "+SLA_FLUSH_PHASE_TIMEOUT=400000",
            ],
      -test_in_model => 1,
      -enabled_post_process_modes => "hqm_test",
   );
   %runModes = (
      
    test0 => {
       -simv_args => ["+iosf_tracker_filename=iosf_trk ",
       "+HQM_SEQ_CFG1=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/cfg_poison_sb_check.cft",
       "+HQM_SEQ_CFG=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/mem_pcie.cft",
         "+IOSF_PRIM_FILE=hqm_sla_pcie_cfg_error_seq",],
      },

      poison => {
       -simv_args => ["+iosf_tracker_filename=iosf_trk ",
       "+HQM_SEQ_CFG=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/mem_pcie.cft",
       "+HQM_SEQ_CFG1=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/mem_poison_check.cft",
           "+IOSF_PRIM_FILE=hqm_sla_pcie_mem_poison_seq",],
      },

      malform => {
       -simv_args => ["+iosf_tracker_filename=iosf_trk ",
       "+HQM_SEQ_CFG=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/mem_pcie.cft",
       "+HQM_SEQ_CFG1=aceroot/verif/tb/hqm/hqm_iosf_lib/CFT/CFT/mem_mlform_check.cft",
           "+IOSF_PRIM_FILE=hqm_sla_pcie_mem_malform_seq",],
      },
      
   );
   import_runmodes (
         -dest_hash => \%runModes,
   );
}

