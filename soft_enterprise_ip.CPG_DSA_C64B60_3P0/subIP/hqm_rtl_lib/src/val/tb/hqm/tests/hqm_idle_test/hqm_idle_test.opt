use lib "$ENV{MODEL_ROOT}/cfg/ace/lib";
use common::RunModes;
common::RunModes::init_library;
{
   %opts = (
      -simv_args => [
                     "+AW_CONTINUE_ON_ERROR",
                     "+iosf_tracker_filename=iosf_trk",
                     "-assert nopostproc",
                     "+vcs+lic+wait",
                     "+SLA_USER_DATA_PHASE_TIMEOUT=20000000",
                     "+SLA_CONFIG_PHASE_TIMEOUT=20000000",
                     "-assert finish_maxfail=1000000",
                     "-assert global_finish_maxfail=1000000",
                     "+HQM_NO_PCIE_CONFIG_PHASE",
                     "+HQM_PCIE_SKIP_EOT_SEQ",
                    ],
      -test_in_model => 1,
      -enabled_post_process_modes => "hqm_test",
   );
   %runModes = (
      idle_wo_clk => {
          -simv_args => [
                         "+hqm_idle_test_seq_stim_config::do_sm_pf_cfg=1",
                         "+hqm_idle_test_seq_stim_config::idle_test_type=1",
                         "+HQM_SEQ_CFG_EOT=aceroot/verif/tb/hqm/tests/hqm_system_eot.cft",
                        ],
      },
      idle_w_clk => {
          -simv_args => [
                         "+HQM_IOSF_CLK_ACK_DLY=1000",
                         "+HQM_IOSF_NEG_EDGE_CLK_ACK_DLY=10000000",
                         "+hqm_idle_test_seq_stim_config::do_sm_pf_cfg=1",
                         "+hqm_idle_test_seq_stim_config::idle_test_type=1",
                         "+HQM_SEQ_CFG_EOT=aceroot/verif/tb/hqm/tests/hqm_system_eot.cft",
                        ],
      },
      pmcs_disable => {
          -simv_args => [
                         "+hqm_idle_test_seq_stim_config::do_sm_pf_cfg=1",
                         "+hqm_idle_test_seq_stim_config::idle_test_type=2",
                         "+HQM_SEQ_CFG_EOT=aceroot/verif/tb/hqm/tests/hqm_pmcs_disable_idle_eot.cft",
                        ],
      },
   );
   import_runmodes (
         -dest_hash => \%runModes,
   );
}

