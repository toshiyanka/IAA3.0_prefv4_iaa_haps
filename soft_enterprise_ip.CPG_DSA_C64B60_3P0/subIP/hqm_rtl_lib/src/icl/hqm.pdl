# This file is generated by gen_rtdr_coll.perl
# For changes please edit RTDR_data.csv and not this output file

iProcsForModule hqm

################################################################################
# procs for accessing bits/fields in iosfsb_ism
# register bits 15:15
iProc set_iosfsb_ism_SIDE_FRC_IDLE {val} {
    iWrite iosfsb_ism.SIDE_FRC_IDLE $val
    iApply
}

# register bits 14:14
iProc set_iosfsb_ism_SIDE_FRC_NIDLE {val} {
    iWrite iosfsb_ism.SIDE_FRC_NIDLE $val
    iApply
}

# register bits 13:13
iProc set_iosfsb_ism_SIDE_FRC_CREDRQ {val} {
    iWrite iosfsb_ism.SIDE_FRC_CREDRQ $val
    iApply
}

# register bits 12:12
iProc set_iosfsb_ism_SIDE_FRC_CLKRQ {val} {
    iWrite iosfsb_ism.SIDE_FRC_CLKRQ $val
    iApply
}

# register bits 11:11
iProc set_iosfsb_ism_GPSB_CLKG_OVRD {val} {
    iWrite iosfsb_ism.GPSB_CLKG_OVRD $val
    iApply
}

# register bits 5:5
iProc set_iosfsb_ism_PRIM_FRC_IDLE {val} {
    iWrite iosfsb_ism.PRIM_FRC_IDLE $val
    iApply
}

# register bits 4:4
iProc set_iosfsb_ism_PRIM_FRC_NIDLE {val} {
    iWrite iosfsb_ism.PRIM_FRC_NIDLE $val
    iApply
}

# register bits 3:3
iProc set_iosfsb_ism_PRIM_FRC_CREDRQ {val} {
    iWrite iosfsb_ism.PRIM_FRC_CREDRQ $val
    iApply
}

# register bits 2:2
iProc set_iosfsb_ism_PRIM_FRC_CLKRQ {val} {
    iWrite iosfsb_ism.PRIM_FRC_CLKRQ $val
    iApply
}

# register bits 1:1
iProc set_iosfsb_ism_PRIM_CLKG_OVRD {val} {
    iWrite iosfsb_ism.PRIM_CLKG_OVRD $val
    iApply
}

# register bits 0:0
iProc set_iosfsb_ism_SIDE_CLKG_OVRD {val} {
    iWrite iosfsb_ism.SIDE_CLKG_OVRD $val
    iApply
}

################################################################################
# No procs file found for iosfsb_ism

################################################################################
# procs for accessing bits/fields in tapconfig
# register bits 11:11
iProc set_tapconfig_FORCE_POWER_ON {val} {
    iWrite tapconfig.FORCE_POWER_ON $val
    iApply
}

# register bits 10:8
iProc set_tapconfig_VIEWPIN1_SEL {val} {
    iWrite tapconfig.VIEWPIN1_SEL $val
    iApply
}

# register bits 7:5
iProc set_tapconfig_VIEWPIN0_SEL {val} {
    iWrite tapconfig.VIEWPIN0_SEL $val
    iApply
}

# register bits 4:4
iProc set_tapconfig_FET_EN_SEL {val} {
    iWrite tapconfig.FET_EN_SEL $val
    iApply
}

# register bits 3:3
iProc set_tapconfig_FET_ON {val} {
    iWrite tapconfig.FET_ON $val
    iApply
}

# register bits 2:2
iProc set_tapconfig_PGCB_OVR {val} {
    iWrite tapconfig.PGCB_OVR $val
    iApply
}

# register bits 1:1
iProc set_tapconfig_PGCB_BYP {val} {
    iWrite tapconfig.PGCB_BYP $val
    iApply
}

################################################################################
# procs included from ../../tools/icl/RTDR_data_tapconfig.pdl
#This is a manually-created file which the generate script includes in the final pdl

# Sequence required by PGCB when forcing power on in an IP where the default is powered off
iProc pgcb_preamble {} {
    iWrite tapconfig.PGCB_OVR 1
    iWrite tapconfig.PGCB_BYP 0
    iApply
    iWrite tapconfig.PGCB_OVR 1
    iWrite tapconfig.PGCB_BYP 1
    iApply
}

################################################################################
# procs for accessing bits/fields in taptrigger
# register bits 30:30
iProc set_taptrigger_TRIG_VALID {val} {
    iWrite taptrigger.TRIG_VALID $val
    iApply
}

# register bits 29:20
iProc set_taptrigger_TRIG_PM_1 {val} {
    iWrite taptrigger.TRIG_PM_1 $val
    iApply
}

iProc set_taptrigger_TRIG_PM_1_bit {bit val} {
    iWrite taptrigger.TRIG_PM_1[$bit] $val
    iApply
}

# register bits 19:10
iProc set_taptrigger_TRIG_PM_0 {val} {
    iWrite taptrigger.TRIG_PM_0 $val
    iApply
}

iProc set_taptrigger_TRIG_PM_0_bit {bit val} {
    iWrite taptrigger.TRIG_PM_0[$bit] $val
    iApply
}

# register bits 9:0
iProc set_taptrigger_TRIG_IOSF {val} {
    iWrite taptrigger.TRIG_IOSF $val
    iApply
}

iProc set_taptrigger_TRIG_IOSF_bit {bit val} {
    iWrite taptrigger.TRIG_IOSF[$bit] $val
    iApply
}

################################################################################
# procs included from ../../tools/icl/RTDR_data_taptrigger.pdl
#This is a manually-created file which the generate script includes in the final pdl
iProc clear_all_triggers {} {
    iWrite taptrigger.TRIG_PM_1 0
    iWrite taptrigger.TRIG_PM_0 0
    iWrite taptrigger.TRIG_IOSF 0
    iApply
}

# TRIG_VALID must be pulsed in order for the trigger arm bits to actually be seen
iProc load_triggers {} {
    iCall set_taptrigger_TRIG_VALID 0
    iCall set_taptrigger_TRIG_VALID 1
}

# Arm the specified trigger bit in TRIG_PM_1, and clear all other trigger bits
iProc arm_TRIG_PM_1 {bit} {
    iCall clear_all_triggers
    iCall set_taptrigger_TRIG_PM_1_bit $bit 1
    iCall load_triggers
}

# Arm the specified trigger bit in TRIG_PM_0, and clear all other trigger bits
iProc arm_TRIG_PM_0 {bit} {
    iCall clear_all_triggers
    iCall set_taptrigger_TRIG_PM_0_bit $bit 1
    iCall load_triggers
}

# Arm the specified trigger bit in TRIG_IOSF, and clear all other trigger bits
iProc arm_TRIG_IOSF {bit} {
    iCall clear_all_triggers
    iCall set_taptrigger_TRIG_IOSF_bit $bit 1
    iCall load_triggers
}

