// ICL  : generated by tap_icl_gen.pl version 1.0
// TIME : Mon Jan 25 12:17:43 2021


Module ip {

   Attribute intel_desc = "IP Top description";
   // Common TAP interfaces
   // All ports in ICL must match corresponding RTL module port names

   TCKPort       Tclk;
   TRSTPort      Trstb_2;

   // DFx powergood/reset ports
   ResetPort     fdfx_powergood { ActivePolarity 0;}

   // DFx Secure Interface
   //Note: fdfx_earlyboot_exit/fdfx_policy_update are not required to be modeled in ICL
   DataInPort    fdfx_secure_policy[3:0] { RefEnum TAP_SECURITY;}

   Enum TAP_SECURITY {
      SECURITY_LOCKED      = 4'h0;
      FUNCTIONALITY_LOCKED = 4'h1;
      SECURITY_UNLOCKED    = 4'h2;
      RESERVED             = 4'h3;
      INTEL_UNLOCKED       = 4'h4;
      OEM_UNLOCKED         = 4'h5;
      ENDEBUG_UNLOCKED     = 4'h6;
      INFRARED_UNLOCKED    = 4'h7;
      DRAM_DEBUG_UNLOCKED  = 4'h8;
      FUSA_UNLOCKED        = 4'h9;
      USER4_UNLOCKED       = 4'ha;
      USER5_UNLOCKED       = 4'hb;
      USER6_UNLOCKED       = 4'hc;
      USER7_UNLOCKED       = 4'hd;
      USER8_UNLOCKED       = 4'he;
      PART_DISABLED        = 4'hf;
   }

   // Individual TAP interfaces and instances
   //---------------------------

   ScanInPort    TdiT731L;
   ScanOutPort   TdoT731H { Source tap1.Tdo;}
   TMSPort       TmsT731L;

   ScanInterface c_tap1 {
      Port   TdiT731L;
      Port   TdoT731H;
      Port   TmsT731L;
   }

   Instance tap1 Of ip_top_ip_tap1_def {
      InputPort   Tdi                = TdiT731L;
      InputPort   Tms                = TmsT731L;
      InputPort   Trstb              = Trstb_2;
      InputPort   Tclk               = Tclk;
      InputPort   fdfx_powergood     = fdfx_powergood;
      InputPort   fdfx_secure_policy = fdfx_secure_policy[3:0];
   }
   //---------------------------

   ScanInPort    Tdi_2;
   ScanOutPort   Tdo_2 { Source tap2.Tdo;}
   TMSPort       Tms_2;

   ScanInterface c_tap2 {
      Port   Tdi_2;
      Port   Tdo_2;
      Port   Tms_2;
   }

   Instance tap2 Of ip_top_ip_tap2_def {
      InputPort   Tdi                = Tdi_2;
      InputPort   Tms                = Tms_2;
      InputPort   Trstb              = Trstb_2;
      InputPort   Tclk               = Tclk;
      InputPort   fdfx_powergood     = fdfx_powergood;
      InputPort   fdfx_secure_policy = fdfx_secure_policy[3:0];
   }

   //---------------------------
   // Individual Registers and Chains
   //---------------------------

   //--------------------------------------------------------------------------------
   //TAP DR Sizes
   LocalParameter regA_DR_SIZE = 6;
   LocalParameter regB_DR_SIZE = 12;

   //--------------------------------------------------------------------------------
   // Common RTDR/IJTAG ports
   // All ports in ICL must match corresponding RTL module port names

   CaptureEnPort   	cen;
   ShiftEnPort   	sen;
   UpdateEnPort   	uen;

   //--------------------------------------------------------------------------------
   // TaP TDRs and ScanInterfaces
   //--------------------------------------------------------------------------------

   ScanInPort	 si_A;
   ScanOutPort	 so_A { Source regA.so;}
   SelectPort	 sel_A;

   ScanInterface c_regA {
      Port   si_A;
      Port   so_A;
      Port   sel_A;
   }

   Instance regA Of ip_top_regA_def {
      Attribute intel_TapOpcodeSecurityLevel = "SECURE_RED";
      Attribute intel_TapRegResetType = "PWRGOOD";
      InputPort   si = si_A;
      InputPort   rstn = fdfx_powergood;
   }
   Alias regA[$regA_DR_SIZE-1:0] = regA.DR;

   //---------------------------

   ScanInPort	 si_B;
   ScanOutPort	 so_B { Source regB.so;}
   SelectPort	 sel_B;

   ScanInterface c_regB {
      Port   si_B;
      Port   so_B;
      Port   sel_B;
   }

   Instance regB Of ip_top_regB_def {
      Attribute intel_TapOpcodeSecurityLevel = "SECURE_GREEN";
      InputPort   si = si_B;
      InputPort   rstn = fdfx_powergood;
   }
   Alias regB[$regB_DR_SIZE-1:0] = regB.DR;

   //---------------------------


   // Other Ports (not used)
   // -----------------------
    TRSTPort   TrstbT731L;

} // end of ip


// Register Definitions
//---------------------------
Module ip_top_regA_def {

   Attribute intel_desc = "regA description";

   ScanInPort    si;
   ScanOutPort   so   { Source DR[0];}
   ResetPort     rstn { ActivePolarity 0;}
   SelectPort    sel;

   ScanRegister DR[5:0] {
      ScanInSource   si;
      ResetValue     6'b0;
      CaptureSource  2'bx,DR[3:0];
   }
   Alias f1[3:0] = DR[3:0] {
      Attribute intel_desc = "f1 description";
      Attribute intel_AccessType = "RW";
   }
   Alias f2[0:0] = DR[4:4] {
      Attribute intel_desc = "f2 description";
      Attribute intel_AccessType = "RW/V";
   }
   Alias f3[0:0] = DR[5:5] {
      Attribute intel_desc = "f3 description";
      Attribute intel_AccessType = "WO";
   }
} // end of ip_top_regA_def

//---------------------------
Module ip_top_regB_def {

   Attribute intel_desc = "regB description";

   ScanInPort    si;
   ScanOutPort   so   { Source DR[0];}
   ResetPort     rstn { ActivePolarity 0;}
   SelectPort    sel;

   ScanRegister DR[11:0] {
      ScanInSource   si;
      ResetValue     12'b101;
      CaptureSource  8'bx,4'b101;
   }
   Alias f1[3:0] = DR[3:0] {
      Attribute intel_desc = "f1 description";
      Attribute intel_AccessType = "RO";
   }
   Alias f2[7:0] = DR[11:4] {
      Attribute intel_desc = "f2 description";
      Attribute intel_AccessType = "RO/V";
   }
} // end of ip_top_regB_def

