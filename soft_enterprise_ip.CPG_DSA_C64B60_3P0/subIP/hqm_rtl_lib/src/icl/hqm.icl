// ICL  : generated by tap_icl_gen.pl version 1.0
// TIME : Mon Mar  1 07:46:31 2021


Module hqm {

   Attribute intel_desc = "Hardware Queue Manager";

   //--------------------------------------------------------------------------------
   //TAP DR Sizes
   LocalParameter iosfsb_ism_DR_SIZE = 32;
   LocalParameter tapconfig_DR_SIZE = 32;
   LocalParameter taptrigger_DR_SIZE = 32;

   //--------------------------------------------------------------------------------
   // Common RTDR/IJTAG ports
   // All ports in ICL must match corresponding RTL module port names

   TCKPort       rtdr_tapconfig_tck;

   // DFx powergood/reset ports
   ResetPort     rtdr_taptrigger_trst_b { ActivePolarity 0;}
   ResetPort     rtdr_tapconfig_trst_b { ActivePolarity 0;}
   ResetPort     rtdr_iosfsb_ism_trst_b { ActivePolarity 0;}

   //--------------------------------------------------------------------------------
   // TaP TDRs and ScanInterfaces
   //--------------------------------------------------------------------------------

   CaptureEnPort	 rtdr_iosfsb_ism_capturedr;
   ScanInPort	 rtdr_iosfsb_ism_tdi;
   ScanOutPort	 rtdr_iosfsb_ism_tdo { Source iosfsb_ism.so;}
   SelectPort	 rtdr_iosfsb_ism_irdec;
   ShiftEnPort	 rtdr_iosfsb_ism_shiftdr;
   UpdateEnPort	 rtdr_iosfsb_ism_updatedr;

   ScanInterface c_iosfsb_ism {
      Port   rtdr_iosfsb_ism_capturedr;
      Port   rtdr_iosfsb_ism_tdi;
      Port   rtdr_iosfsb_ism_tdo;
      Port   rtdr_iosfsb_ism_irdec;
      Port   rtdr_iosfsb_ism_shiftdr;
      Port   rtdr_iosfsb_ism_updatedr;
   }

   Instance iosfsb_ism Of hqm_iosfsb_ism_def {
      Attribute intel_TapOpcodeSecurityLevel = "RED";
      Attribute intel_TapRegResetType = "PWRGOOD_iosfsb_ism";
      InputPort   si = rtdr_iosfsb_ism_tdi;
      InputPort   rstn = rtdr_iosfsb_ism_trst_b;
   }
   Alias iosfsb_ism[$iosfsb_ism_DR_SIZE-1:0] = iosfsb_ism.DR;

   //---------------------------

   CaptureEnPort	 rtdr_tapconfig_capturedr;
   ScanInPort	 rtdr_tapconfig_tdi;
   ScanOutPort	 rtdr_tapconfig_tdo { Source tapconfig.so;}
   SelectPort	 rtdr_tapconfig_irdec;
   ShiftEnPort	 rtdr_tapconfig_shiftdr;
   UpdateEnPort	 rtdr_tapconfig_updatedr;

   ScanInterface c_tapconfig {
      Port   rtdr_tapconfig_capturedr;
      Port   rtdr_tapconfig_tdi;
      Port   rtdr_tapconfig_tdo;
      Port   rtdr_tapconfig_irdec;
      Port   rtdr_tapconfig_shiftdr;
      Port   rtdr_tapconfig_updatedr;
   }

   Instance tapconfig Of hqm_tapconfig_def {
      Attribute intel_TapOpcodeSecurityLevel = "RED";
      Attribute intel_TapRegResetType = "PWRGOOD_tapconfig";
      InputPort   si = rtdr_tapconfig_tdi;
      InputPort   rstn = rtdr_tapconfig_trst_b;
   }
   Alias tapconfig[$tapconfig_DR_SIZE-1:0] = tapconfig.DR;

   //---------------------------

   CaptureEnPort	 rtdr_taptrigger_capturedr;
   ScanInPort	 rtdr_taptrigger_tdi;
   ScanOutPort	 rtdr_taptrigger_tdo { Source taptrigger.so;}
   SelectPort	 rtdr_taptrigger_irdec;
   ShiftEnPort	 rtdr_taptrigger_shiftdr;
   UpdateEnPort	 rtdr_taptrigger_updatedr;

   ScanInterface c_taptrigger {
      Port   rtdr_taptrigger_capturedr;
      Port   rtdr_taptrigger_tdi;
      Port   rtdr_taptrigger_tdo;
      Port   rtdr_taptrigger_irdec;
      Port   rtdr_taptrigger_shiftdr;
      Port   rtdr_taptrigger_updatedr;
   }

   Instance taptrigger Of hqm_taptrigger_def {
      Attribute intel_TapOpcodeSecurityLevel = "RED";
      Attribute intel_TapRegResetType = "PWRGOOD_taptrigger";
      InputPort   si = rtdr_taptrigger_tdi;
      InputPort   rstn = rtdr_taptrigger_trst_b;
   }
   Alias taptrigger[$taptrigger_DR_SIZE-1:0] = taptrigger.DR;

   //---------------------------


   // Other Ports (not used)
   // -----------------------
    TCKPort   rtdr_iosfsb_ism_tck;
    TCKPort   rtdr_taptrigger_tck;

} // end of hqm


// Register Definitions
//---------------------------
Module hqm_iosfsb_ism_def {

   Attribute intel_desc = "iosfsb_ism register";

   ScanInPort    si;
   ScanOutPort   so   { Source DR[0];}
   ResetPort     rstn { ActivePolarity 0;}
   SelectPort    sel;

   ScanRegister DR[31:0] {
      ScanInSource   si;
      ResetValue     32'b0;
      CaptureSource  DR[31:0];
   }
   Alias SIDE_CLKG_OVRD[0:0] = DR[0:0] {
      Attribute intel_desc = "cdc_side_jta_clkgate_ovrd";
      Attribute intel_AccessType = "RW";
   }
   Alias PRIM_CLKG_OVRD[0:0] = DR[1:1] {
      Attribute intel_desc = "cdc_prim_jta_clkgate_ovrd. Also hqm_master/cdc_hqm_jta_clkgate_ovrd";
      Attribute intel_AccessType = "RW";
   }
   Alias PRIM_FRC_CLKRQ[0:0] = DR[2:2] {
      Attribute intel_desc = "cdc_prim_jta_force_clkreq. Also prim_jta_force_clkreq and hqm_master/cdc_hqm_jta_force_clkreq";
      Attribute intel_AccessType = "RW";
   }
   Alias PRIM_FRC_CREDRQ[0:0] = DR[3:3] {
      Attribute intel_desc = "prim_jta_force_creditreq";
      Attribute intel_AccessType = "RW";
   }
   Alias PRIM_FRC_NIDLE[0:0] = DR[4:4] {
      Attribute intel_desc = "prim_jta_force_notidle";
      Attribute intel_AccessType = "RW";
   }
   Alias PRIM_FRC_IDLE[0:0] = DR[5:5] {
      Attribute intel_desc = "prim_jta_force_idle";
      Attribute intel_AccessType = "RW";
   }
   Alias RESERVED_II0[4:0] = DR[10:6] {
      Attribute intel_desc = "Reserved for future use";
      Attribute intel_AccessType = "RW";
   }
   Alias GPSB_CLKG_OVRD[0:0] = DR[11:11] {
      Attribute intel_desc = "gpsb_jta_clkgate_ovrd";
      Attribute intel_AccessType = "RW";
   }
   Alias SIDE_FRC_CLKRQ[0:0] = DR[12:12] {
      Attribute intel_desc = "cdc_side_jta_force_clkreq. Also gpsb_jta_force_clkreq";
      Attribute intel_AccessType = "RW";
   }
   Alias SIDE_FRC_CREDRQ[0:0] = DR[13:13] {
      Attribute intel_desc = "gpsb_jta_force_creditreq";
      Attribute intel_AccessType = "RW";
   }
   Alias SIDE_FRC_NIDLE[0:0] = DR[14:14] {
      Attribute intel_desc = "gpsb_jta_force_notidle";
      Attribute intel_AccessType = "RW";
   }
   Alias SIDE_FRC_IDLE[0:0] = DR[15:15] {
      Attribute intel_desc = "gpsb_jta_force_idle";
      Attribute intel_AccessType = "RW";
   }
   Alias RESERVED_II1[15:0] = DR[31:16] {
      Attribute intel_desc = "Reserved for future use";
      Attribute intel_AccessType = "RW";
   }
} // end of hqm_iosfsb_ism_def

//---------------------------
Module hqm_tapconfig_def {

   Attribute intel_desc = "tapconfig register";

   ScanInPort    si;
   ScanOutPort   so   { Source DR[0];}
   ResetPort     rstn { ActivePolarity 0;}
   SelectPort    sel;

   ScanRegister DR[31:0] {
      ScanInSource   si;
      ResetValue     32'b0;
      CaptureSource  DR[31:0];
   }
   Alias RESERVED_TC0[0:0] = DR[0:0] {
      Attribute intel_desc = "Reserved for future use";
      Attribute intel_AccessType = "RW";
   }
   Alias PGCB_BYP[0:0] = DR[1:1] {
      Attribute intel_desc = "fdfx_pgcb_bypass";
      Attribute intel_AccessType = "RW";
   }
   Alias PGCB_OVR[0:0] = DR[2:2] {
      Attribute intel_desc = "fdfx_pgcb_ovr";
      Attribute intel_AccessType = "RW";
   }
   Alias FET_ON[0:0] = DR[3:3] {
      Attribute intel_desc = "fscan_fet_on";
      Attribute intel_AccessType = "RW";
   }
   Alias FET_EN_SEL[0:0] = DR[4:4] {
      Attribute intel_desc = "fscan_fet_en_sel";
      Attribute intel_AccessType = "RW";
   }
   Alias VIEWPIN0_SEL[2:0] = DR[7:5] {
      Attribute intel_desc = "Select for viewpin[0]. 0:hqm_cdc_clkreq ; 1:pmsm active ; 2:pgcb force reset ; 3:pgcb_isol_en_b ; 4:pgcb_hqm_pwrgate_active ; 5:fet_en_ack_b to hqm_pm_unit ; 6:fet_en_b indication from pgcbunit";
      Attribute intel_AccessType = "RW";
   }
   Alias VIEWPIN1_SEL[2:0] = DR[10:8] {
      Attribute intel_desc = "Select for viewpin[1], same encoding as sel0";
      Attribute intel_AccessType = "RW";
   }
   Alias FORCE_POWER_ON[0:0] = DR[11:11] {
      Attribute intel_desc = "Forces PM state machine to the ON/RUN state";
      Attribute intel_AccessType = "RW";
   }
   Alias RESERVED_TC1[19:0] = DR[31:12] {
      Attribute intel_desc = "Reserved for future use";
      Attribute intel_AccessType = "RW";
   }
} // end of hqm_tapconfig_def

//---------------------------
Module hqm_taptrigger_def {

   Attribute intel_desc = "taptrigger register";

   ScanInPort    si;
   ScanOutPort   so   { Source DR[0];}
   ResetPort     rstn { ActivePolarity 0;}
   SelectPort    sel;

   ScanRegister DR[31:0] {
      ScanInSource   si;
      ResetValue     32'b0;
      CaptureSource  DR[31:0];
   }
   Alias TRIG_IOSF[9:0] = DR[9:0] {
      Attribute intel_desc = "fscan_trigger_mask for IOSF";
      Attribute intel_AccessType = "RW";
   }
   Alias TRIG_PM_0[9:0] = DR[19:10] {
      Attribute intel_desc = "fscan_trigger_mask for PM 0";
      Attribute intel_AccessType = "RW";
   }
   Alias TRIG_PM_1[9:0] = DR[29:20] {
      Attribute intel_desc = "fscan_trigger_mask for PM 1";
      Attribute intel_AccessType = "RW";
   }
   Alias TRIG_VALID[0:0] = DR[30:30] {
      Attribute intel_desc = "fscan_trigger_valid: Rising edge loads trigger mask values into mask register";
      Attribute intel_AccessType = "RW";
   }
   Alias RESERVED_TT0[0:0] = DR[31:31] {
      Attribute intel_desc = "Reserved for future use";
      Attribute intel_AccessType = "RW";
   }
} // end of hqm_taptrigger_def

