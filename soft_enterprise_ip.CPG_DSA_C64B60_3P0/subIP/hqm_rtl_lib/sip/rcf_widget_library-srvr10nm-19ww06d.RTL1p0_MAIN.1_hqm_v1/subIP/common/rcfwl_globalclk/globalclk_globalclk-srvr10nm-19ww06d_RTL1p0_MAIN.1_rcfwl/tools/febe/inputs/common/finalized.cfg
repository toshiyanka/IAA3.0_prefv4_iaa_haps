# -*-cperl-*-
BEGIN {
  unshift @INC, ("$ENV{MODEL_ROOT}/tools/febe/inputs/common/finalized", "$ENV{MODEL_ROOT}/tools/febe/inputs/common","$ENV{MODEL_ROOT}/tools/febe/inputs/common/finalized/hip",);
}
package finalized;

use refclkdist_final_cfg;
use clkreqaggr_final_cfg;
use pccdu_final_cfg;
use rcb_lcb_final_cfg;
use glitchfree_clkmux_final_cfg;
use psyncdist_final_cfg;
use ipglbdrvby9or12pp60_final_cfg;
use rcb_lcb_final_cfg;
use vret_clock_gate_final_cfg;
use trunk_clock_switch_final_cfg;
use lib "$ENV{RTL_PROJ_BIN}/perllib";
use ToolConfig;

my $CTECH_cfg = {
                 -path => [],
                 -replace => [],
};

my @add_replace_ctech_files = (
                               #priority order top-to-bottom
                               #for example, you may now choose a mixed design of nom,svt. E.g. nom for clk ctechs with a *ctech_lib*clk*.sv pattern
                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech")."/source/p1274/ec0/bn/*ctech_lib*.sv"),
                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech_exp")."/source/p1274/ec0/bn/*ctech_lib*.sv"),
                               glob(&ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech_exp")."/source/p1274/ec0/syn_tmp/*ctech_lib*.sv"),
                              );

foreach my $file (@add_replace_ctech_files) {
     my @source = split(/source/,$file);
     my @function = split(/ctech_lib_/,$source[1]);
     my $replace = {
                    #assume match should be from source/v
                    match => "source/v/ctech_lib_$function[1]",
                    replace => "source$function[0]ctech_lib_$function[1]",
                   };
     push($CTECH_cfg->{-replace},$replace);
 }

sub get_data() {

  return {
         gclk_refclkdist   => $refclkdist_final_cfg::dc_cfg ,
         gclk_clkreqaggr  => $clkreqaggr_final_cfg::dc_cfg ,
         gclk_pccdu  => $pccdu_final_cfg::dc_cfg ,
	 gclk_glitchfree_clkmux  => $glitchfree_clkmux_final_cfg::dc_cfg ,
	 
	 #gclk_horizontal_clkdist => $refclkdist_final_cfg::dc_cfg ,
	 
	# gclk_mesh_clkdist	  => $refclkdist_final_cfg::dc_cfg ,
	 
	 #gclk_pclkdist	  => $refclkdist_final_cfg::dc_cfg ,
	 #gclk_pcu_clkdist	  => $refclkdist_final_cfg::dc_cfg ,
	 gclk_psyncdist	  => $psyncdist_final_cfg::dc_cfg ,
	 
	 #gclk_vertical_clkdist => $refclkdist_final_cfg::dc_cfg ,
	 gclk_rcb_lcb => $rcb_lcb_final_cfg::dc_cfg ,
	 gclk_vret_clock_gate => $vret_clock_gate_final_cfg::dc_cfg ,
	  gclk_trunk_clock_switch => $trunk_clock_switch_final_cfg::dc_cfg ,
	 #gclk_clkdist_repeater => $refclkdist_final_cfg::dc_cfg ,
	 #gclk_clkdist_mux  => $refclkdist_final_cfg::dc_cfg ,
	 #gclk_divsync_gen  => $refclkdist_final_cfg::dc_cfg ,
	 ipglbdrvby9or12pp60 => $ipglbdrvby9or12pp60_final_cfg::dc_cfg,
	 
    COMMON_CFG => {
        -lib_variant => "bn,cn",
        -stdlib_type => "ec0",
	-add_ctech_files => [],
##	-search => ["$ENV{MODEL_ROOT}/src/rtl/clkdist",
##	            "$ENV{MODEL_ROOT}/src/rtl/clkreqaggr",],
    
     -rm_ctech_files => [
                                "\/v\/ctech_lib*",
                               ], 
    },
 PATH_REGULATOR => {
         
 -full_env => [ 'MODEL_ROOT', 'REPO_ROOT', 'IP_RELEASES', 'CTECH_VERSION', 'CTECH_EXP_VERSION'  ],
        },
'CTECH' => $CTECH_cfg,

##     'CTECH' => {
        # -path => &ToolConfig::ToolConfig_get_tool_path("ipconfig/ctech")."/source/p1274/",
##        -path => "/{" . &ToolConfig::get_tool_path("ipconfig/ctech") . "/source/p1274/" . "," . &ToolConfig::get_tool_path("ipconfig/ctech_exp") . "/source/p1274_g1p3/" . "," . &ToolConfig::get_tool_path("ipconfig/ctech_exp") . "/source/p1274_ip74xglbdrvby9or12/" ."}"
##                },

	LIB_2STAGE_CFG_sim => {
       ' -add_defines' => [
                         'NO_PWR_PINS',
                         'INTEL_NO_PWR_PINS',
                           ],
       '-sim_add_defines' => [
                             ],
       '-libfiles_as_designfiles' => 1,
       '-filter_defines' => [
                            ],
       '-sim_filter_defines' => [
                                ],
     },

     LIB_2STAGE_CFG => {
        -add_defines => [       
                        ],
    '-sim_add_defines' => [
                          ],                        
       '-libfiles_as_designfiles' => 1,
       '-filter_defines' => [
                            ],
       '-sim_filter_defines' => [
                                ],
     },

  }
}


1;
