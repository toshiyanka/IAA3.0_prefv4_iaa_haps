// $Header: /ds/data/2647/server_vault/Projects/drwork/x12dev_drwork/rst/x12dev_drwork_rst/PXL/1273/p1273d0_DFM_dr.rs.rca 1.6 Thu Oct 23 11:31:11 2014 gmonroy Experimental $
//
// $Log: p1273d0_DFM_dr.rs.rca $
// 
//  Revision: 1.6 Thu Oct 23 11:31:11 2014 gmonroy
//  Add second set of DFM rules (i.e. rules defined after lead vehicle introduction)
//  for p1272 and p1273dx
// 
//  Revision: 1.5 Fri Jul 11 10:41:37 2014 gmonroy
//  Added new rule $$$DFM_PTG_Hybrid_decap to all p1273 dot processes
// 
//  Revision: 1.4 Wed Apr 30 16:42:41 2014 gmonroy
//  Add DFM_TPL_90 to all p1273 dot processes, and create standalone flow to evaluate it
// 
//  Revision: 1.3 Wed Nov  6 15:46:48 2013 gmonroy
//  Added: rule description in DFM_fix output; ability to only run a subset
//  of the rules (by name, $-value or layer) via prj_dfm_settings
// 
//  Revision: 1.2 Wed Oct 30 15:09:41 2013 gmonroy
//  Added "don't manually modify" comment
// 
//  Revision: 1.1 Wed Oct 30 13:37:07 2013 gmonroy
//  Refactored DFM code to allow future features
// 

#ifndef _P1273D0_DFM_DR_RS_
#define _P1273D0_DFM_DR_RS_

// Automatically generated file.  Do not edit.  Maintain with dfm_csv_pxl_dr.pl

drDFMDollarHash["DFM_DC_11isocut"]                 = "$$$";
drDFMDollarHash["DFM_DC_11p21"]                    = "$$";
drDFMDollarHash["DFM_DC_c2c"]                      = "$$";
drDFMDollarHash["DFM_DC_cutV"]                     = "$$";
drDFMDollarHash["DFM_M0_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M0_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M0_60_0V_p70"]                = "$";
drDFMDollarHash["DFM_M0_60_1V_p70"]                = "$";
drDFMDollarHash["DFM_M0_60_2V_p70"]                = "$$";
drDFMDollarHash["DFM_M0_60_F_p70"]                 = "$";
drDFMDollarHash["DFM_M0_C2Cskip"]                  = "$";
drDFMDollarHash["DFM_M0_ETE_transitions"]          = "$$$$";
drDFMDollarHash["DFM_M0cut_C"]                     = "$";
drDFMDollarHash["DFM_M0cut_C_wv"]                  = "$$";
drDFMDollarHash["DFM_M0cut_D"]                     = "$$$";
drDFMDollarHash["DFM_M0cut_D_wv"]                  = "$$$$";
drDFMDollarHash["DFM_M0cut_S"]                     = "$";
drDFMDollarHash["DFM_M0cut_SS"]                    = "$$";
drDFMDollarHash["DFM_M0cut_SS_wv"]                 = "$$$";
drDFMDollarHash["DFM_M0cut_S_wv"]                  = "$$";
drDFMDollarHash["DFM_M0cut_V"]                     = "$";
drDFMDollarHash["DFM_M0cut_V_wv"]                  = "$$";
drDFMDollarHash["DFM_M0cut_X"]                     = "$$$";
drDFMDollarHash["DFM_M0cut_X_wv"]                  = "$$$$";
drDFMDollarHash["DFM_M0cut_Y"]                     = "$$";
drDFMDollarHash["DFM_M0cut_Y_wv"]                  = "$$$";
drDFMDollarHash["DFM_M1_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M1_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M1_60_0V_p15"]                = "$$";
drDFMDollarHash["DFM_M1_60_0V_p15_30"]             = "$";
drDFMDollarHash["DFM_M1_60_1V_p15"]                = "$$$";
drDFMDollarHash["DFM_M1_60_1V_p15_30"]             = "$$";
drDFMDollarHash["DFM_M1_60_2V_p15"]                = "$$$$";
drDFMDollarHash["DFM_M1_60_2V_p15_30"]             = "$$$";
drDFMDollarHash["DFM_M1_60_F_p15"]                 = "$$";
drDFMDollarHash["DFM_M1_60_F_p15_30"]              = "$";
drDFMDollarHash["DFM_M1_adj_cut2cut"]              = "$$$$";
drDFMDollarHash["DFM_M1_cut2cut_V0PAX"]            = "$$$$";
drDFMDollarHash["DFM_M1_isocut_V0PAX"]             = "$$$$";
drDFMDollarHash["DFM_M1cut_D"]                     = "$$$";
drDFMDollarHash["DFM_M1cut_D_wv"]                  = "$$$$";
drDFMDollarHash["DFM_M1cut_V"]                     = "$";
drDFMDollarHash["DFM_M1cut_V_wv"]                  = "$$";
drDFMDollarHash["DFM_M2_147p20"]                   = "$";
drDFMDollarHash["DFM_M2_148p20"]                   = "$";
drDFMDollarHash["DFM_M2_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M2_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M2_48N1p30"]                  = "$";
drDFMDollarHash["DFM_M2_48N2p16"]                  = "$";
drDFMDollarHash["DFM_M2_60_0V_p8"]                 = "$$";
drDFMDollarHash["DFM_M2_60_0V_p8_16"]              = "$";
drDFMDollarHash["DFM_M2_60_1V_p8"]                 = "$$$";
drDFMDollarHash["DFM_M2_60_1V_p8_16"]              = "$$";
drDFMDollarHash["DFM_M2_60_2V_p8_16"]              = "$$$";
drDFMDollarHash["DFM_M2_60_2V_p8_gt32"]            = "$$$";
drDFMDollarHash["DFM_M2_60_2V_p8_lteq32"]          = "$$$$";
drDFMDollarHash["DFM_M2_60_F_p8"]                  = "$$";
drDFMDollarHash["DFM_M2_60_F_p8_16"]               = "$";
drDFMDollarHash["DFM_M2_ETE_transitions"]          = "$$$$";
drDFMDollarHash["DFM_M3_147p20"]                   = "$";
drDFMDollarHash["DFM_M3_148p20"]                   = "$";
drDFMDollarHash["DFM_M3_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M3_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M3_48N1p30"]                  = "$";
drDFMDollarHash["DFM_M3_48N2p16"]                  = "$";
drDFMDollarHash["DFM_M3_60_0V_p8"]                 = "$$";
drDFMDollarHash["DFM_M3_60_0V_p8_16"]              = "$";
drDFMDollarHash["DFM_M3_60_1V_p8"]                 = "$$$";
drDFMDollarHash["DFM_M3_60_1V_p8_16"]              = "$$";
drDFMDollarHash["DFM_M3_60_2V_p8"]                 = "$$$$";
drDFMDollarHash["DFM_M3_60_2V_p8_16"]              = "$$$";
drDFMDollarHash["DFM_M3_60_F_p8"]                  = "$$";
drDFMDollarHash["DFM_M3_60_F_p8_16"]               = "$";
drDFMDollarHash["DFM_M3_ETE_transitions"]          = "$$$$";
drDFMDollarHash["DFM_M4_147p20"]                   = "$";
drDFMDollarHash["DFM_M4_148p20"]                   = "$";
drDFMDollarHash["DFM_M4_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M4_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M4_48N1p30"]                  = "$";
drDFMDollarHash["DFM_M4_48N2p16"]                  = "$";
drDFMDollarHash["DFM_M4_60_0V_p8"]                 = "$$";
drDFMDollarHash["DFM_M4_60_0V_p8_16"]              = "$";
drDFMDollarHash["DFM_M4_60_1V_p8"]                 = "$$$";
drDFMDollarHash["DFM_M4_60_1V_p8_16"]              = "$$";
drDFMDollarHash["DFM_M4_60_2V_p8"]                 = "$$$$";
drDFMDollarHash["DFM_M4_60_2V_p8_16"]              = "$$$";
drDFMDollarHash["DFM_M4_60_F_p8"]                  = "$$";
drDFMDollarHash["DFM_M4_60_F_p8_16"]               = "$";
drDFMDollarHash["DFM_M4_ETE_transitions"]          = "$$$$";
drDFMDollarHash["DFM_M5_147p20"]                   = "$";
drDFMDollarHash["DFM_M5_148p20"]                   = "$";
drDFMDollarHash["DFM_M5_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M5_41_2Viso"]                 = "$$$";
drDFMDollarHash["DFM_M5_48N1p30"]                  = "$";
drDFMDollarHash["DFM_M5_48N2p16"]                  = "$";
drDFMDollarHash["DFM_M5_60_0V_p8"]                 = "$$";
drDFMDollarHash["DFM_M5_60_0V_p8_16"]              = "$";
drDFMDollarHash["DFM_M5_60_1V_p8"]                 = "$$$";
drDFMDollarHash["DFM_M5_60_1V_p8_16"]              = "$$";
drDFMDollarHash["DFM_M5_60_2V_p8"]                 = "$$$$";
drDFMDollarHash["DFM_M5_60_2V_p8_16"]              = "$$$";
drDFMDollarHash["DFM_M5_60_F_p8"]                  = "$$";
drDFMDollarHash["DFM_M5_60_F_p8_16"]               = "$";
drDFMDollarHash["DFM_M5_ETE_transitions"]          = "$$$$";
drDFMDollarHash["DFM_M6_148"]                      = "$$$";
drDFMDollarHash["DFM_M6_149_1"]                    = "$";
drDFMDollarHash["DFM_M6_149_2"]                    = "$$";
drDFMDollarHash["DFM_M6_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M6_60_0V_p20"]                = "$$";
drDFMDollarHash["DFM_M6_60_0V_p20_40"]             = "$";
drDFMDollarHash["DFM_M6_60_1V_p20"]                = "$$$";
drDFMDollarHash["DFM_M6_60_1V_p20_40"]             = "$$";
drDFMDollarHash["DFM_M6_60_2V_p20"]                = "$$$$";
drDFMDollarHash["DFM_M6_60_2V_p20_40"]             = "$$$";
drDFMDollarHash["DFM_M6_60_F_p20"]                 = "$$";
drDFMDollarHash["DFM_M6_60_F_p20_40"]              = "$";
drDFMDollarHash["DFM_M6_Tshort"]                   = "$";
drDFMDollarHash["DFM_M7_148"]                      = "$$$";
drDFMDollarHash["DFM_M7_149_1"]                    = "$";
drDFMDollarHash["DFM_M7_149_2"]                    = "$$";
drDFMDollarHash["DFM_M7_41_2V"]                    = "$$";
drDFMDollarHash["DFM_M7_60_0V_p45"]                = "$$";
drDFMDollarHash["DFM_M7_60_0V_p45_90"]             = "$";
drDFMDollarHash["DFM_M7_60_1V_p45"]                = "$$$";
drDFMDollarHash["DFM_M7_60_1V_p45_90"]             = "$$";
drDFMDollarHash["DFM_M7_60_2V_p45"]                = "$$$$";
drDFMDollarHash["DFM_M7_60_2V_p45_90"]             = "$$$";
drDFMDollarHash["DFM_M7_60_F_p45"]                 = "$$";
drDFMDollarHash["DFM_M7_60_F_p45_90"]              = "$";
drDFMDollarHash["DFM_M8_148"]                      = "$$$";
drDFMDollarHash["DFM_M8_149_1"]                    = "$";
drDFMDollarHash["DFM_M8_149_2"]                    = "$$";
drDFMDollarHash["DFM_M8_41_2V"]                    = "$";
drDFMDollarHash["DFM_M8_60_0V_p23"]                = "$$";
drDFMDollarHash["DFM_M8_60_0V_p23_46"]             = "$";
drDFMDollarHash["DFM_M8_60_1V_p23"]                = "$$";
drDFMDollarHash["DFM_M8_60_1V_p23_46"]             = "$";
drDFMDollarHash["DFM_M8_60_2V_p23"]                = "$$$";
drDFMDollarHash["DFM_M8_60_2V_p23_46"]             = "$$";
drDFMDollarHash["DFM_M8_60_F_p23"]                 = "$$";
drDFMDollarHash["DFM_M8_60_F_p23_46"]              = "$";
drDFMDollarHash["DFM_PC_126to126"]                 = "$$";
drDFMDollarHash["DFM_PC_126to168"]                 = "$$$";
drDFMDollarHash["DFM_PC_31_1to1p20"]               = "$$";
drDFMDollarHash["DFM_PC_31_2to1p20_easy"]          = "$$";
drDFMDollarHash["DFM_PC_31_2to1p20_hard"]          = "$$$$";
drDFMDollarHash["DFM_PC_42p9_easy"]                = "$";
drDFMDollarHash["DFM_PC_42p9_hard"]                = "$$";
drDFMDollarHash["DFM_PC_43p5"]                     = "$";
drDFMDollarHash["DFM_PC_44p8_easy"]                = "$$";
drDFMDollarHash["DFM_PC_44p8_hard"]                = "$$$";
drDFMDollarHash["DFM_PC_45p5"]                     = "$";
drDFMDollarHash["DFM_PC_81NA1p10"]                 = "$$";
drDFMDollarHash["DFM_PC_81NA2p10"]                 = "$$$";
drDFMDollarHash["DFM_PC_long"]                     = "$$$";
drDFMDollarHash["DFM_PC_offset_easy"]              = "$$";
drDFMDollarHash["DFM_PC_offset_hard"]              = "$$$";
drDFMDollarHash["DFM_PL63Lp6"]                     = "$$";
drDFMDollarHash["DFM_PL63Mp6"]                     = "$$$";
drDFMDollarHash["DFM_PL_103p8"]                    = "$$";
drDFMDollarHash["DFM_PL_13p18"]                    = "$$";
drDFMDollarHash["DFM_PL_WN"]                       = "$$";
drDFMDollarHash["DFM_PL_WNW"]                      = "$$$";
drDFMDollarHash["DFM_PTG_Hybrid_decap"]            = "$$$";
drDFMDollarHash["DFM_TPL_90"]                      = "$$$$";
drDFMDollarHash["DFM_V0AXBX_c2c2N"]                = "$$$";
drDFMDollarHash["DFM_V0AX_c2c2N"]                  = "$$$";
drDFMDollarHash["DFM_V0AX_c2c2Ndiag"]              = "$$$$";
drDFMDollarHash["DFM_V0AX_c2c3N4N"]                = "$$$$";
drDFMDollarHash["DFM_V0PAX_V0PAX"]                 = "$$$$";
drDFMDollarHash["DFM_V0PAX_V1"]                    = "$$";
drDFMDollarHash["DFM_V0PAX_any"]                   = "$";
drDFMDollarHash["DFM_V0PAX_c2c2N"]                 = "$$$$";
drDFMDollarHash["DFM_V0PAX_exposed1"]              = "$$";
drDFMDollarHash["DFM_V0PAX_exposed2"]              = "$$$";
drDFMDollarHash["DFM_V0PAX_shortM1"]               = "$$";
drDFMDollarHash["DFM_V0_49p5"]                     = "$";
drDFMDollarHash["DFM_V0_62p5"]                     = "$$$";
drDFMDollarHash["DFM_V1_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V1_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V1_sandwich"]                 = "$$$$";
drDFMDollarHash["DFM_V1bridge_c2c"]                = "$$$$";
drDFMDollarHash["DFM_V2_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V2_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V2_nested_NSA"]               = "$$$$";
drDFMDollarHash["DFM_V3_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V3_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V4_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V4_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V5_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V5_61Np9"]                    = "$$$";
drDFMDollarHash["DFM_V5_61Np9_18"]                 = "$$";
drDFMDollarHash["DFM_V5_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V5_61p5_10"]                  = "$$";
drDFMDollarHash["DFM_V6_49Np12"]                   = "$$$";
drDFMDollarHash["DFM_V6_49Np12_24"]                = "$$";
drDFMDollarHash["DFM_V6_49p8"]                     = "$$$";
drDFMDollarHash["DFM_V6_49p8_16"]                  = "$$";
drDFMDollarHash["DFM_V6_61p5"]                     = "$$$";
drDFMDollarHash["DFM_V6_61p5_10"]                  = "$$";
drDFMDollarHash["DFM_V7_49p5"]                     = "$$$";
drDFMDollarHash["DFM_V7_49p5_10"]                  = "$$";
drDFMDollarHash["DFM_V7_61p8"]                     = "$$";
drDFMDollarHash["DFM_V7_61p8_15"]                  = "$";
drDFMDollarHash["DFM_VC_139p8"]                    = "$$";
drDFMDollarHash["DFM_VC_43p12"]                    = "$$";
drDFMDollarHash["DFM_VC_61p5"]                     = "$";
drDFMDollarHash["DFM_VC_c2c2N"]                    = "$$";
drDFMDollarHash["DFM_VC_c2c3N"]                    = "$$$";
drDFMDollarHash["DFM_VC_c2c4N_no_poly_short_risk"] = "$$$";
drDFMDollarHash["DFM_VC_c2c4N_poly_short_risk"]    = "$$$$";

drDFMDlHash["DFM_DC_11isocut"]                 = 1827;
drDFMDlHash["DFM_DC_11p21"]                    = 1802;
drDFMDlHash["DFM_DC_c2c"]                      = 1827;
drDFMDlHash["DFM_DC_cutV"]                     = 1827;
drDFMDlHash["DFM_M0_41_2V"]                    = 1806;
drDFMDlHash["DFM_M0_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M0_60_0V_p70"]                = 1804;
drDFMDlHash["DFM_M0_60_1V_p70"]                = 1804;
drDFMDlHash["DFM_M0_60_2V_p70"]                = 1804;
drDFMDlHash["DFM_M0_60_F_p70"]                 = 1804;
drDFMDlHash["DFM_M0_C2Cskip"]                  = 1812;
drDFMDlHash["DFM_M0_ETE_transitions"]          = 1815;
drDFMDlHash["DFM_M0cut_C"]                     = 1809;
drDFMDlHash["DFM_M0cut_C_wv"]                  = 1808;
drDFMDlHash["DFM_M0cut_D"]                     = 1809;
drDFMDlHash["DFM_M0cut_D_wv"]                  = 1808;
drDFMDlHash["DFM_M0cut_S"]                     = 1809;
drDFMDlHash["DFM_M0cut_SS"]                    = 1809;
drDFMDlHash["DFM_M0cut_SS_wv"]                 = 1808;
drDFMDlHash["DFM_M0cut_S_wv"]                  = 1808;
drDFMDlHash["DFM_M0cut_V"]                     = 1809;
drDFMDlHash["DFM_M0cut_V_wv"]                  = 1808;
drDFMDlHash["DFM_M0cut_X"]                     = 1809;
drDFMDlHash["DFM_M0cut_X_wv"]                  = 1808;
drDFMDlHash["DFM_M0cut_Y"]                     = 1809;
drDFMDlHash["DFM_M0cut_Y_wv"]                  = 1808;
drDFMDlHash["DFM_M1_41_2V"]                    = 1806;
drDFMDlHash["DFM_M1_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M1_60_0V_p15"]                = 1804;
drDFMDlHash["DFM_M1_60_0V_p15_30"]             = 1804;
drDFMDlHash["DFM_M1_60_1V_p15"]                = 1804;
drDFMDlHash["DFM_M1_60_1V_p15_30"]             = 1804;
drDFMDlHash["DFM_M1_60_2V_p15"]                = 1804;
drDFMDlHash["DFM_M1_60_2V_p15_30"]             = 1804;
drDFMDlHash["DFM_M1_60_F_p15"]                 = 1804;
drDFMDlHash["DFM_M1_60_F_p15_30"]              = 1804;
drDFMDlHash["DFM_M1_adj_cut2cut"]              = 1815;
drDFMDlHash["DFM_M1_cut2cut_V0PAX"]            = 1815;
drDFMDlHash["DFM_M1_isocut_V0PAX"]             = 1815;
drDFMDlHash["DFM_M1cut_D"]                     = 1811;
drDFMDlHash["DFM_M1cut_D_wv"]                  = 1810;
drDFMDlHash["DFM_M1cut_V"]                     = 1811;
drDFMDlHash["DFM_M1cut_V_wv"]                  = 1810;
drDFMDlHash["DFM_M2_147p20"]                   = 1812;
drDFMDlHash["DFM_M2_148p20"]                   = 1812;
drDFMDlHash["DFM_M2_41_2V"]                    = 1806;
drDFMDlHash["DFM_M2_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M2_48N1p30"]                  = 1812;
drDFMDlHash["DFM_M2_48N2p16"]                  = 1812;
drDFMDlHash["DFM_M2_60_0V_p8"]                 = 1804;
drDFMDlHash["DFM_M2_60_0V_p8_16"]              = 1804;
drDFMDlHash["DFM_M2_60_1V_p8"]                 = 1804;
drDFMDlHash["DFM_M2_60_1V_p8_16"]              = 1804;
drDFMDlHash["DFM_M2_60_2V_p8_16"]              = 1804;
drDFMDlHash["DFM_M2_60_2V_p8_gt32"]            = 1804;
drDFMDlHash["DFM_M2_60_2V_p8_lteq32"]          = 1804;
drDFMDlHash["DFM_M2_60_F_p8"]                  = 1804;
drDFMDlHash["DFM_M2_60_F_p8_16"]               = 1804;
drDFMDlHash["DFM_M2_ETE_transitions"]          = 1815;
drDFMDlHash["DFM_M3_147p20"]                   = 1812;
drDFMDlHash["DFM_M3_148p20"]                   = 1812;
drDFMDlHash["DFM_M3_41_2V"]                    = 1806;
drDFMDlHash["DFM_M3_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M3_48N1p30"]                  = 1812;
drDFMDlHash["DFM_M3_48N2p16"]                  = 1812;
drDFMDlHash["DFM_M3_60_0V_p8"]                 = 1804;
drDFMDlHash["DFM_M3_60_0V_p8_16"]              = 1804;
drDFMDlHash["DFM_M3_60_1V_p8"]                 = 1804;
drDFMDlHash["DFM_M3_60_1V_p8_16"]              = 1804;
drDFMDlHash["DFM_M3_60_2V_p8"]                 = 1804;
drDFMDlHash["DFM_M3_60_2V_p8_16"]              = 1804;
drDFMDlHash["DFM_M3_60_F_p8"]                  = 1804;
drDFMDlHash["DFM_M3_60_F_p8_16"]               = 1804;
drDFMDlHash["DFM_M3_ETE_transitions"]          = 1815;
drDFMDlHash["DFM_M4_147p20"]                   = 1812;
drDFMDlHash["DFM_M4_148p20"]                   = 1812;
drDFMDlHash["DFM_M4_41_2V"]                    = 1806;
drDFMDlHash["DFM_M4_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M4_48N1p30"]                  = 1812;
drDFMDlHash["DFM_M4_48N2p16"]                  = 1812;
drDFMDlHash["DFM_M4_60_0V_p8"]                 = 1804;
drDFMDlHash["DFM_M4_60_0V_p8_16"]              = 1804;
drDFMDlHash["DFM_M4_60_1V_p8"]                 = 1804;
drDFMDlHash["DFM_M4_60_1V_p8_16"]              = 1804;
drDFMDlHash["DFM_M4_60_2V_p8"]                 = 1804;
drDFMDlHash["DFM_M4_60_2V_p8_16"]              = 1804;
drDFMDlHash["DFM_M4_60_F_p8"]                  = 1804;
drDFMDlHash["DFM_M4_60_F_p8_16"]               = 1804;
drDFMDlHash["DFM_M4_ETE_transitions"]          = 1815;
drDFMDlHash["DFM_M5_147p20"]                   = 1812;
drDFMDlHash["DFM_M5_148p20"]                   = 1812;
drDFMDlHash["DFM_M5_41_2V"]                    = 1806;
drDFMDlHash["DFM_M5_41_2Viso"]                 = 1805;
drDFMDlHash["DFM_M5_48N1p30"]                  = 1812;
drDFMDlHash["DFM_M5_48N2p16"]                  = 1812;
drDFMDlHash["DFM_M5_60_0V_p8"]                 = 1804;
drDFMDlHash["DFM_M5_60_0V_p8_16"]              = 1804;
drDFMDlHash["DFM_M5_60_1V_p8"]                 = 1804;
drDFMDlHash["DFM_M5_60_1V_p8_16"]              = 1804;
drDFMDlHash["DFM_M5_60_2V_p8"]                 = 1804;
drDFMDlHash["DFM_M5_60_2V_p8_16"]              = 1804;
drDFMDlHash["DFM_M5_60_F_p8"]                  = 1804;
drDFMDlHash["DFM_M5_60_F_p8_16"]               = 1804;
drDFMDlHash["DFM_M5_ETE_transitions"]          = 1815;
drDFMDlHash["DFM_M6_148"]                      = 1850;
drDFMDlHash["DFM_M6_149_1"]                    = 1851;
drDFMDlHash["DFM_M6_149_2"]                    = 1852;
drDFMDlHash["DFM_M6_41_2V"]                    = 1806;
drDFMDlHash["DFM_M6_60_0V_p20"]                = 1804;
drDFMDlHash["DFM_M6_60_0V_p20_40"]             = 1804;
drDFMDlHash["DFM_M6_60_1V_p20"]                = 1804;
drDFMDlHash["DFM_M6_60_1V_p20_40"]             = 1804;
drDFMDlHash["DFM_M6_60_2V_p20"]                = 1804;
drDFMDlHash["DFM_M6_60_2V_p20_40"]             = 1804;
drDFMDlHash["DFM_M6_60_F_p20"]                 = 1804;
drDFMDlHash["DFM_M6_60_F_p20_40"]              = 1804;
drDFMDlHash["DFM_M6_Tshort"]                   = 1813;
drDFMDlHash["DFM_M7_148"]                      = 1850;
drDFMDlHash["DFM_M7_149_1"]                    = 1851;
drDFMDlHash["DFM_M7_149_2"]                    = 1852;
drDFMDlHash["DFM_M7_41_2V"]                    = 1806;
drDFMDlHash["DFM_M7_60_0V_p45"]                = 1804;
drDFMDlHash["DFM_M7_60_0V_p45_90"]             = 1804;
drDFMDlHash["DFM_M7_60_1V_p45"]                = 1804;
drDFMDlHash["DFM_M7_60_1V_p45_90"]             = 1804;
drDFMDlHash["DFM_M7_60_2V_p45"]                = 1804;
drDFMDlHash["DFM_M7_60_2V_p45_90"]             = 1804;
drDFMDlHash["DFM_M7_60_F_p45"]                 = 1804;
drDFMDlHash["DFM_M7_60_F_p45_90"]              = 1804;
drDFMDlHash["DFM_M8_148"]                      = 1850;
drDFMDlHash["DFM_M8_149_1"]                    = 1851;
drDFMDlHash["DFM_M8_149_2"]                    = 1852;
drDFMDlHash["DFM_M8_41_2V"]                    = 1806;
drDFMDlHash["DFM_M8_60_0V_p23"]                = 1804;
drDFMDlHash["DFM_M8_60_0V_p23_46"]             = 1804;
drDFMDlHash["DFM_M8_60_1V_p23"]                = 1804;
drDFMDlHash["DFM_M8_60_1V_p23_46"]             = 1804;
drDFMDlHash["DFM_M8_60_2V_p23"]                = 1804;
drDFMDlHash["DFM_M8_60_2V_p23_46"]             = 1804;
drDFMDlHash["DFM_M8_60_F_p23"]                 = 1804;
drDFMDlHash["DFM_M8_60_F_p23_46"]              = 1804;
drDFMDlHash["DFM_PC_126to126"]                 = 1826;
drDFMDlHash["DFM_PC_126to168"]                 = 1826;
drDFMDlHash["DFM_PC_31_1to1p20"]               = 1826;
drDFMDlHash["DFM_PC_31_2to1p20_easy"]          = 1826;
drDFMDlHash["DFM_PC_31_2to1p20_hard"]          = 1826;
drDFMDlHash["DFM_PC_42p9_easy"]                = 1826;
drDFMDlHash["DFM_PC_42p9_hard"]                = 1826;
drDFMDlHash["DFM_PC_43p5"]                     = 1825;
drDFMDlHash["DFM_PC_44p8_easy"]                = 1826;
drDFMDlHash["DFM_PC_44p8_hard"]                = 1826;
drDFMDlHash["DFM_PC_45p5"]                     = 1825;
drDFMDlHash["DFM_PC_81NA1p10"]                 = 1827;
drDFMDlHash["DFM_PC_81NA2p10"]                 = 1827;
drDFMDlHash["DFM_PC_long"]                     = 1826;
drDFMDlHash["DFM_PC_offset_easy"]              = 1826;
drDFMDlHash["DFM_PC_offset_hard"]              = 1826;
drDFMDlHash["DFM_PL63Lp6"]                     = 1825;
drDFMDlHash["DFM_PL63Mp6"]                     = 1825;
drDFMDlHash["DFM_PL_103p8"]                    = 1825;
drDFMDlHash["DFM_PL_13p18"]                    = 1802;
drDFMDlHash["DFM_PL_WN"]                       = 1825;
drDFMDlHash["DFM_PL_WNW"]                      = 1825;
drDFMDlHash["DFM_PTG_Hybrid_decap"]            = 1825;
drDFMDlHash["DFM_TPL_90"]                      = 1825;
drDFMDlHash["DFM_V0AXBX_c2c2N"]                = 1814;
drDFMDlHash["DFM_V0AX_c2c2N"]                  = 1814;
drDFMDlHash["DFM_V0AX_c2c2Ndiag"]              = 1814;
drDFMDlHash["DFM_V0AX_c2c3N4N"]                = 1814;
drDFMDlHash["DFM_V0PAX_V0PAX"]                 = 1807;
drDFMDlHash["DFM_V0PAX_V1"]                    = 1807;
drDFMDlHash["DFM_V0PAX_any"]                   = 1807;
drDFMDlHash["DFM_V0PAX_c2c2N"]                 = 1814;
drDFMDlHash["DFM_V0PAX_exposed1"]              = 1807;
drDFMDlHash["DFM_V0PAX_exposed2"]              = 1807;
drDFMDlHash["DFM_V0PAX_shortM1"]               = 1807;
drDFMDlHash["DFM_V0_49p5"]                     = 1801;
drDFMDlHash["DFM_V0_62p5"]                     = 1800;
drDFMDlHash["DFM_V1_49p5"]                     = 1801;
drDFMDlHash["DFM_V1_61p5"]                     = 1800;
drDFMDlHash["DFM_V1_sandwich"]                 = 1815;
drDFMDlHash["DFM_V1bridge_c2c"]                = 1814;
drDFMDlHash["DFM_V2_49p5"]                     = 1801;
drDFMDlHash["DFM_V2_61p5"]                     = 1800;
drDFMDlHash["DFM_V2_nested_NSA"]               = 1815;
drDFMDlHash["DFM_V3_49p5"]                     = 1801;
drDFMDlHash["DFM_V3_61p5"]                     = 1800;
drDFMDlHash["DFM_V4_49p5"]                     = 1801;
drDFMDlHash["DFM_V4_61p5"]                     = 1800;
drDFMDlHash["DFM_V5_49p5"]                     = 1801;
drDFMDlHash["DFM_V5_61Np9"]                    = 1800;
drDFMDlHash["DFM_V5_61Np9_18"]                 = 1800;
drDFMDlHash["DFM_V5_61p5"]                     = 1800;
drDFMDlHash["DFM_V5_61p5_10"]                  = 1800;
drDFMDlHash["DFM_V6_49Np12"]                   = 1801;
drDFMDlHash["DFM_V6_49Np12_24"]                = 1801;
drDFMDlHash["DFM_V6_49p8"]                     = 1801;
drDFMDlHash["DFM_V6_49p8_16"]                  = 1801;
drDFMDlHash["DFM_V6_61p5"]                     = 1800;
drDFMDlHash["DFM_V6_61p5_10"]                  = 1800;
drDFMDlHash["DFM_V7_49p5"]                     = 1801;
drDFMDlHash["DFM_V7_49p5_10"]                  = 1801;
drDFMDlHash["DFM_V7_61p8"]                     = 1800;
drDFMDlHash["DFM_V7_61p8_15"]                  = 1800;
drDFMDlHash["DFM_VC_139p8"]                    = 1802;
drDFMDlHash["DFM_VC_43p12"]                    = 1802;
drDFMDlHash["DFM_VC_61p5"]                     = 1800;
drDFMDlHash["DFM_VC_c2c2N"]                    = 1814;
drDFMDlHash["DFM_VC_c2c3N"]                    = 1814;
drDFMDlHash["DFM_VC_c2c4N_no_poly_short_risk"] = 1814;
drDFMDlHash["DFM_VC_c2c4N_poly_short_risk"]    = 1814;

drDFMDtHash["DFM_DC_11isocut"]                 = 3;
drDFMDtHash["DFM_DC_11p21"]                    = 3;
drDFMDtHash["DFM_DC_c2c"]                      = 4;
drDFMDtHash["DFM_DC_cutV"]                     = 5;
drDFMDtHash["DFM_M0_41_2V"]                    = 0;
drDFMDtHash["DFM_M0_41_2Viso"]                 = 0;
drDFMDtHash["DFM_M0_60_0V_p70"]                = 2;
drDFMDtHash["DFM_M0_60_1V_p70"]                = 1;
drDFMDtHash["DFM_M0_60_2V_p70"]                = 0;
drDFMDtHash["DFM_M0_60_F_p70"]                 = 3;
drDFMDtHash["DFM_M0_C2Cskip"]                  = 1;
drDFMDtHash["DFM_M0_ETE_transitions"]          = 0;
drDFMDtHash["DFM_M0cut_C"]                     = 3;
drDFMDtHash["DFM_M0cut_C_wv"]                  = 3;
drDFMDtHash["DFM_M0cut_D"]                     = 1;
drDFMDtHash["DFM_M0cut_D_wv"]                  = 1;
drDFMDtHash["DFM_M0cut_S"]                     = 7;
drDFMDtHash["DFM_M0cut_SS"]                    = 5;
drDFMDtHash["DFM_M0cut_SS_wv"]                 = 5;
drDFMDtHash["DFM_M0cut_S_wv"]                  = 7;
drDFMDtHash["DFM_M0cut_V"]                     = 6;
drDFMDtHash["DFM_M0cut_V_wv"]                  = 6;
drDFMDtHash["DFM_M0cut_X"]                     = 2;
drDFMDtHash["DFM_M0cut_X_wv"]                  = 2;
drDFMDtHash["DFM_M0cut_Y"]                     = 4;
drDFMDtHash["DFM_M0cut_Y_wv"]                  = 4;
drDFMDtHash["DFM_M1_41_2V"]                    = 100;
drDFMDtHash["DFM_M1_41_2Viso"]                 = 100;
drDFMDtHash["DFM_M1_60_0V_p15"]                = 102;
drDFMDtHash["DFM_M1_60_0V_p15_30"]             = 152;
drDFMDtHash["DFM_M1_60_1V_p15"]                = 101;
drDFMDtHash["DFM_M1_60_1V_p15_30"]             = 151;
drDFMDtHash["DFM_M1_60_2V_p15"]                = 100;
drDFMDtHash["DFM_M1_60_2V_p15_30"]             = 150;
drDFMDtHash["DFM_M1_60_F_p15"]                 = 103;
drDFMDtHash["DFM_M1_60_F_p15_30"]              = 153;
drDFMDtHash["DFM_M1_adj_cut2cut"]              = 3;
drDFMDtHash["DFM_M1_cut2cut_V0PAX"]            = 5;
drDFMDtHash["DFM_M1_isocut_V0PAX"]             = 4;
drDFMDtHash["DFM_M1cut_D"]                     = 1;
drDFMDtHash["DFM_M1cut_D_wv"]                  = 1;
drDFMDtHash["DFM_M1cut_V"]                     = 2;
drDFMDtHash["DFM_M1cut_V_wv"]                  = 2;
drDFMDtHash["DFM_M2_147p20"]                   = 11;
drDFMDtHash["DFM_M2_148p20"]                   = 12;
drDFMDtHash["DFM_M2_41_2V"]                    = 200;
drDFMDtHash["DFM_M2_41_2Viso"]                 = 200;
drDFMDtHash["DFM_M2_48N1p30"]                  = 2;
drDFMDtHash["DFM_M2_48N2p16"]                  = 3;
drDFMDtHash["DFM_M2_60_0V_p8"]                 = 202;
drDFMDtHash["DFM_M2_60_0V_p8_16"]              = 252;
drDFMDtHash["DFM_M2_60_1V_p8"]                 = 201;
drDFMDtHash["DFM_M2_60_1V_p8_16"]              = 251;
drDFMDtHash["DFM_M2_60_2V_p8_16"]              = 250;
drDFMDtHash["DFM_M2_60_2V_p8_gt32"]            = 205;
drDFMDtHash["DFM_M2_60_2V_p8_lteq32"]          = 204;
drDFMDtHash["DFM_M2_60_F_p8"]                  = 203;
drDFMDtHash["DFM_M2_60_F_p8_16"]               = 253;
drDFMDtHash["DFM_M2_ETE_transitions"]          = 1;
drDFMDtHash["DFM_M3_147p20"]                   = 13;
drDFMDtHash["DFM_M3_148p20"]                   = 14;
drDFMDtHash["DFM_M3_41_2V"]                    = 300;
drDFMDtHash["DFM_M3_41_2Viso"]                 = 300;
drDFMDtHash["DFM_M3_48N1p30"]                  = 5;
drDFMDtHash["DFM_M3_48N2p16"]                  = 6;
drDFMDtHash["DFM_M3_60_0V_p8"]                 = 302;
drDFMDtHash["DFM_M3_60_0V_p8_16"]              = 352;
drDFMDtHash["DFM_M3_60_1V_p8"]                 = 301;
drDFMDtHash["DFM_M3_60_1V_p8_16"]              = 351;
drDFMDtHash["DFM_M3_60_2V_p8"]                 = 300;
drDFMDtHash["DFM_M3_60_2V_p8_16"]              = 350;
drDFMDtHash["DFM_M3_60_F_p8"]                  = 303;
drDFMDtHash["DFM_M3_60_F_p8_16"]               = 353;
drDFMDtHash["DFM_M3_ETE_transitions"]          = 2;
drDFMDtHash["DFM_M4_147p20"]                   = 15;
drDFMDtHash["DFM_M4_148p20"]                   = 16;
drDFMDtHash["DFM_M4_41_2V"]                    = 400;
drDFMDtHash["DFM_M4_41_2Viso"]                 = 400;
drDFMDtHash["DFM_M4_48N1p30"]                  = 7;
drDFMDtHash["DFM_M4_48N2p16"]                  = 8;
drDFMDtHash["DFM_M4_60_0V_p8"]                 = 402;
drDFMDtHash["DFM_M4_60_0V_p8_16"]              = 452;
drDFMDtHash["DFM_M4_60_1V_p8"]                 = 401;
drDFMDtHash["DFM_M4_60_1V_p8_16"]              = 451;
drDFMDtHash["DFM_M4_60_2V_p8"]                 = 400;
drDFMDtHash["DFM_M4_60_2V_p8_16"]              = 450;
drDFMDtHash["DFM_M4_60_F_p8"]                  = 403;
drDFMDtHash["DFM_M4_60_F_p8_16"]               = 453;
drDFMDtHash["DFM_M4_ETE_transitions"]          = 500;
drDFMDtHash["DFM_M5_147p20"]                   = 17;
drDFMDtHash["DFM_M5_148p20"]                   = 18;
drDFMDtHash["DFM_M5_41_2V"]                    = 500;
drDFMDtHash["DFM_M5_41_2Viso"]                 = 500;
drDFMDtHash["DFM_M5_48N1p30"]                  = 9;
drDFMDtHash["DFM_M5_48N2p16"]                  = 10;
drDFMDtHash["DFM_M5_60_0V_p8"]                 = 502;
drDFMDtHash["DFM_M5_60_0V_p8_16"]              = 552;
drDFMDtHash["DFM_M5_60_1V_p8"]                 = 501;
drDFMDtHash["DFM_M5_60_1V_p8_16"]              = 551;
drDFMDtHash["DFM_M5_60_2V_p8"]                 = 500;
drDFMDtHash["DFM_M5_60_2V_p8_16"]              = 550;
drDFMDtHash["DFM_M5_60_F_p8"]                  = 503;
drDFMDtHash["DFM_M5_60_F_p8_16"]               = 553;
drDFMDtHash["DFM_M5_ETE_transitions"]          = 501;
drDFMDtHash["DFM_M6_148"]                      = 16;
drDFMDtHash["DFM_M6_149_1"]                    = 16;
drDFMDtHash["DFM_M6_149_2"]                    = 16;
drDFMDtHash["DFM_M6_41_2V"]                    = 600;
drDFMDtHash["DFM_M6_60_0V_p20"]                = 602;
drDFMDtHash["DFM_M6_60_0V_p20_40"]             = 652;
drDFMDtHash["DFM_M6_60_1V_p20"]                = 601;
drDFMDtHash["DFM_M6_60_1V_p20_40"]             = 651;
drDFMDtHash["DFM_M6_60_2V_p20"]                = 600;
drDFMDtHash["DFM_M6_60_2V_p20_40"]             = 650;
drDFMDtHash["DFM_M6_60_F_p20"]                 = 603;
drDFMDtHash["DFM_M6_60_F_p20_40"]              = 653;
drDFMDtHash["DFM_M6_Tshort"]                   = 600;
drDFMDtHash["DFM_M7_148"]                      = 17;
drDFMDtHash["DFM_M7_149_1"]                    = 17;
drDFMDtHash["DFM_M7_149_2"]                    = 17;
drDFMDtHash["DFM_M7_41_2V"]                    = 700;
drDFMDtHash["DFM_M7_60_0V_p45"]                = 702;
drDFMDtHash["DFM_M7_60_0V_p45_90"]             = 752;
drDFMDtHash["DFM_M7_60_1V_p45"]                = 701;
drDFMDtHash["DFM_M7_60_1V_p45_90"]             = 751;
drDFMDtHash["DFM_M7_60_2V_p45"]                = 700;
drDFMDtHash["DFM_M7_60_2V_p45_90"]             = 750;
drDFMDtHash["DFM_M7_60_F_p45"]                 = 703;
drDFMDtHash["DFM_M7_60_F_p45_90"]              = 753;
drDFMDtHash["DFM_M8_148"]                      = 18;
drDFMDtHash["DFM_M8_149_1"]                    = 18;
drDFMDtHash["DFM_M8_149_2"]                    = 18;
drDFMDtHash["DFM_M8_41_2V"]                    = 800;
drDFMDtHash["DFM_M8_60_0V_p23"]                = 802;
drDFMDtHash["DFM_M8_60_0V_p23_46"]             = 852;
drDFMDtHash["DFM_M8_60_1V_p23"]                = 801;
drDFMDtHash["DFM_M8_60_1V_p23_46"]             = 851;
drDFMDtHash["DFM_M8_60_2V_p23"]                = 800;
drDFMDtHash["DFM_M8_60_2V_p23_46"]             = 850;
drDFMDtHash["DFM_M8_60_F_p23"]                 = 803;
drDFMDtHash["DFM_M8_60_F_p23_46"]              = 853;
drDFMDtHash["DFM_PC_126to126"]                 = 5;
drDFMDtHash["DFM_PC_126to168"]                 = 4;
drDFMDtHash["DFM_PC_31_1to1p20"]               = 7;
drDFMDtHash["DFM_PC_31_2to1p20_easy"]          = 12;
drDFMDtHash["DFM_PC_31_2to1p20_hard"]          = 6;
drDFMDtHash["DFM_PC_42p9_easy"]                = 11;
drDFMDtHash["DFM_PC_42p9_hard"]                = 10;
drDFMDtHash["DFM_PC_43p5"]                     = 6;
drDFMDtHash["DFM_PC_44p8_easy"]                = 9;
drDFMDtHash["DFM_PC_44p8_hard"]                = 8;
drDFMDtHash["DFM_PC_45p5"]                     = 7;
drDFMDtHash["DFM_PC_81NA1p10"]                 = 2;
drDFMDtHash["DFM_PC_81NA2p10"]                 = 1;
drDFMDtHash["DFM_PC_long"]                     = 3;
drDFMDtHash["DFM_PC_offset_easy"]              = 2;
drDFMDtHash["DFM_PC_offset_hard"]              = 1;
drDFMDtHash["DFM_PL63Lp6"]                     = 2;
drDFMDtHash["DFM_PL63Mp6"]                     = 1;
drDFMDtHash["DFM_PL_103p8"]                    = 3;
drDFMDtHash["DFM_PL_13p18"]                    = 1;
drDFMDtHash["DFM_PL_WN"]                       = 5;
drDFMDtHash["DFM_PL_WNW"]                      = 4;
drDFMDtHash["DFM_PTG_Hybrid_decap"]            = 8;
drDFMDtHash["DFM_TPL_90"]                      = 10;
drDFMDtHash["DFM_V0AXBX_c2c2N"]                = 6;
drDFMDtHash["DFM_V0AX_c2c2N"]                  = 5;
drDFMDtHash["DFM_V0AX_c2c2Ndiag"]              = 7;
drDFMDtHash["DFM_V0AX_c2c3N4N"]                = 9;
drDFMDtHash["DFM_V0PAX_V0PAX"]                 = 1;
drDFMDtHash["DFM_V0PAX_V1"]                    = 2;
drDFMDtHash["DFM_V0PAX_any"]                   = 6;
drDFMDtHash["DFM_V0PAX_c2c2N"]                 = 4;
drDFMDtHash["DFM_V0PAX_exposed1"]              = 4;
drDFMDtHash["DFM_V0PAX_exposed2"]              = 5;
drDFMDtHash["DFM_V0PAX_shortM1"]               = 3;
drDFMDtHash["DFM_V0_49p5"]                     = 0;
drDFMDtHash["DFM_V0_62p5"]                     = 100;
drDFMDtHash["DFM_V1_49p5"]                     = 100;
drDFMDtHash["DFM_V1_61p5"]                     = 200;
drDFMDtHash["DFM_V1_sandwich"]                 = 6;
drDFMDtHash["DFM_V1bridge_c2c"]                = 8;
drDFMDtHash["DFM_V2_49p5"]                     = 200;
drDFMDtHash["DFM_V2_61p5"]                     = 300;
drDFMDtHash["DFM_V2_nested_NSA"]               = 7;
drDFMDtHash["DFM_V3_49p5"]                     = 300;
drDFMDtHash["DFM_V3_61p5"]                     = 400;
drDFMDtHash["DFM_V4_49p5"]                     = 400;
drDFMDtHash["DFM_V4_61p5"]                     = 500;
drDFMDtHash["DFM_V5_49p5"]                     = 500;
drDFMDtHash["DFM_V5_61Np9"]                    = 600;
drDFMDtHash["DFM_V5_61Np9_18"]                 = 601;
drDFMDtHash["DFM_V5_61p5"]                     = 602;
drDFMDtHash["DFM_V5_61p5_10"]                  = 603;
drDFMDtHash["DFM_V6_49Np12"]                   = 600;
drDFMDtHash["DFM_V6_49Np12_24"]                = 601;
drDFMDtHash["DFM_V6_49p8"]                     = 602;
drDFMDtHash["DFM_V6_49p8_16"]                  = 603;
drDFMDtHash["DFM_V6_61p5"]                     = 700;
drDFMDtHash["DFM_V6_61p5_10"]                  = 701;
drDFMDtHash["DFM_V7_49p5"]                     = 700;
drDFMDtHash["DFM_V7_49p5_10"]                  = 701;
drDFMDtHash["DFM_V7_61p8"]                     = 800;
drDFMDtHash["DFM_V7_61p8_15"]                  = 801;
drDFMDtHash["DFM_VC_139p8"]                    = 2;
drDFMDtHash["DFM_VC_43p12"]                    = 5;
drDFMDtHash["DFM_VC_61p5"]                     = 0;
drDFMDtHash["DFM_VC_c2c2N"]                    = 3;
drDFMDtHash["DFM_VC_c2c3N"]                    = 2;
drDFMDtHash["DFM_VC_c2c4N_no_poly_short_risk"] = 1;
drDFMDtHash["DFM_VC_c2c4N_poly_short_risk"]    = 0;

drDFMDescriptionHash["DFM_DC_11isocut"]                 = "TCN isolated 42 nm cut near multi-fin device";
drDFMDescriptionHash["DFM_DC_11p21"]                    = "Min diffcon extension beyond diffusion edge for single fin devices";
drDFMDescriptionHash["DFM_DC_c2c"]                      = "Min offset for skip track TCN cut to cut space";
drDFMDescriptionHash["DFM_DC_cutV"]                     = "V-shaped TCN cut configurations not allowed (with min cuts 36/42 nm)";
drDFMDescriptionHash["DFM_M0_41_2V"]                    = "Two line end vias near ETE of narrow M0 wire";
drDFMDescriptionHash["DFM_M0_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M0 wire";
drDFMDescriptionHash["DFM_M0_60_0V_p70"]                = "Min length for M0 wires with width <=48";
drDFMDescriptionHash["DFM_M0_60_1V_p70"]                = "Min length for M0 wires with width <=48";
drDFMDescriptionHash["DFM_M0_60_2V_p70"]                = "Min length for M0 wires with width <=48";
drDFMDescriptionHash["DFM_M0_60_F_p70"]                 = "Min length for M0 wires with width <=48";
drDFMDescriptionHash["DFM_M0_C2Cskip"]                  = "Min space between M0 cuts (skip track)";
drDFMDescriptionHash["DFM_M0_ETE_transitions"]          = "Avoid two sucessive Metal0 B/C Metal ETE transitions <300 away";
drDFMDescriptionHash["DFM_M0cut_C"]                     = "Avoid M0 cut configuration of C shape ";
drDFMDescriptionHash["DFM_M0cut_C_wv"]                  = "Avoid M0 cut configuration of C shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_D"]                     = "Avoid M0 cut configuration of diamond shape ";
drDFMDescriptionHash["DFM_M0cut_D_wv"]                  = "Avoid M0 cut configuration of diamond shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_S"]                     = "Avoid M0 cut configuration of step shape ";
drDFMDescriptionHash["DFM_M0cut_SS"]                    = "Avoid M0 cut configuration of stair step shape ";
drDFMDescriptionHash["DFM_M0cut_SS_wv"]                 = "Avoid M0 cut configuration of stair step shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_S_wv"]                  = "Avoid M0 cut configuration of step shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_V"]                     = "Avoid M0 cut configuration of V shape ";
drDFMDescriptionHash["DFM_M0cut_V_wv"]                  = "Avoid M0 cut configuration of V shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_X"]                     = "Avoid M0 cut configuration of X shape ";
drDFMDescriptionHash["DFM_M0cut_X_wv"]                  = "Avoid M0 cut configuration of X shape (with via present)";
drDFMDescriptionHash["DFM_M0cut_Y"]                     = "Avoid M0 cut configuration of Y shape ";
drDFMDescriptionHash["DFM_M0cut_Y_wv"]                  = "Avoid M0 cut configuration of Y shape (with via present)";
drDFMDescriptionHash["DFM_M1_41_2V"]                    = "Two line end vias near ETE of narrow M1 wire";
drDFMDescriptionHash["DFM_M1_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M1 wire";
drDFMDescriptionHash["DFM_M1_60_0V_p15"]                = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_0V_p15_30"]             = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_1V_p15"]                = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_1V_p15_30"]             = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_2V_p15"]                = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_2V_p15_30"]             = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_F_p15"]                 = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_60_F_p15_30"]              = "Min length for M1 wires with width <=42";
drDFMDescriptionHash["DFM_M1_adj_cut2cut"]              = "Avoid adjacent M1 Cut to Cut space in PGD <60 when both the overlapping line ends have V0 or V1 within <30 nm from line ends";
drDFMDescriptionHash["DFM_M1_cut2cut_V0PAX"]            = "Avoid M1 cut to cut space <=98 w/ presence of facing V0PAX on at least 1 cut end";
drDFMDescriptionHash["DFM_M1_isocut_V0PAX"]             = "Avoid isolated M1 cut within two facing line-end V0PAX";
drDFMDescriptionHash["DFM_M1cut_D"]                     = "Avoid M1 cut configuration of diamond shape (with via present)";
drDFMDescriptionHash["DFM_M1cut_D_wv"]                  = "Avoid M1 cut configuration of diamond shape (with via present)";
drDFMDescriptionHash["DFM_M1cut_V"]                     = "Avoid M1 cut configuration of V shape (with via present)";
drDFMDescriptionHash["DFM_M1cut_V_wv"]                  = "Avoid M1 cut configuration of V shape (with via present)";
drDFMDescriptionHash["DFM_M2_147p20"]                   = "M2 width <=32, need line end offset >=44 ";
drDFMDescriptionHash["DFM_M2_148p20"]                   = "M2 width >32 <=46, need line end offset >=34";
drDFMDescriptionHash["DFM_M2_41_2V"]                    = "Two line end vias near ETE of narrow M2 wire";
drDFMDescriptionHash["DFM_M2_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M2 wire";
drDFMDescriptionHash["DFM_M2_48N1p30"]                  = "Min overlap of M2 line ends in opposite direction (wire width = 28)";
drDFMDescriptionHash["DFM_M2_48N2p16"]                  = "Min overlap of M2 line ends in opposite direction (wire width >28 <=48)";
drDFMDescriptionHash["DFM_M2_60_0V_p8"]                 = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_0V_p8_16"]              = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_1V_p8"]                 = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_1V_p8_16"]              = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_2V_p8_16"]              = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_2V_p8_gt32"]            = "Min length for M2 wires with width >32<=46";
drDFMDescriptionHash["DFM_M2_60_2V_p8_lteq32"]          = "Min length for M2 wires with width <=32";
drDFMDescriptionHash["DFM_M2_60_F_p8"]                  = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_60_F_p8_16"]               = "Min length for M2 wires with width <=46";
drDFMDescriptionHash["DFM_M2_ETE_transitions"]          = "Avoid two sucessive Metal2 B/C Metal ETE transitions <300 away";
drDFMDescriptionHash["DFM_M3_147p20"]                   = "M3 width <=32, need line end offset >=44 ";
drDFMDescriptionHash["DFM_M3_148p20"]                   = "M3 width >32 <=46, need line end offset >=34";
drDFMDescriptionHash["DFM_M3_41_2V"]                    = "Two line end vias near ETE of narrow M3 wire";
drDFMDescriptionHash["DFM_M3_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M3 wire";
drDFMDescriptionHash["DFM_M3_48N1p30"]                  = "Min overlap of M3 line ends in opposite direction (wire width = 28)";
drDFMDescriptionHash["DFM_M3_48N2p16"]                  = "Min overlap of M3 line ends in opposite direction (wire width >28 <=48)";
drDFMDescriptionHash["DFM_M3_60_0V_p8"]                 = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_0V_p8_16"]              = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_1V_p8"]                 = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_1V_p8_16"]              = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_2V_p8"]                 = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_2V_p8_16"]              = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_F_p8"]                  = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_60_F_p8_16"]               = "Min length for M3 wires with width <=46";
drDFMDescriptionHash["DFM_M3_ETE_transitions"]          = "Avoid two sucessive Metal3 B/C Metal ETE transitions <300 away";
drDFMDescriptionHash["DFM_M4_147p20"]                   = "M4 width <=32, need line end offset >=44 ";
drDFMDescriptionHash["DFM_M4_148p20"]                   = "M4 width >32 <=46, need line end offset >=34";
drDFMDescriptionHash["DFM_M4_41_2V"]                    = "Two line end vias near ETE of narrow M4 wire";
drDFMDescriptionHash["DFM_M4_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M4 wire";
drDFMDescriptionHash["DFM_M4_48N1p30"]                  = "Min overlap of M4 line ends in opposite direction (wire width = 28)";
drDFMDescriptionHash["DFM_M4_48N2p16"]                  = "Min overlap of M4 line ends in opposite direction (wire width >28 <=48)";
drDFMDescriptionHash["DFM_M4_60_0V_p8"]                 = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_0V_p8_16"]              = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_1V_p8"]                 = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_1V_p8_16"]              = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_2V_p8"]                 = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_2V_p8_16"]              = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_F_p8"]                  = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_60_F_p8_16"]               = "Min length for M4 wires with width <=46";
drDFMDescriptionHash["DFM_M4_ETE_transitions"]          = "Avoid two sucessive Metal4 B/C Metal ETE transitions <300 away";
drDFMDescriptionHash["DFM_M5_147p20"]                   = "M5 width <=32, need line end offset >=44 ";
drDFMDescriptionHash["DFM_M5_148p20"]                   = "M5 width >32 <=46, need line end offset >=34";
drDFMDescriptionHash["DFM_M5_41_2V"]                    = "Two line end vias near ETE of narrow M5 wire";
drDFMDescriptionHash["DFM_M5_41_2Viso"]                 = "Two line end vias near isolated ETE of narrow M5 wire";
drDFMDescriptionHash["DFM_M5_48N1p30"]                  = "Min overlap of M5 line ends in opposite direction (wire width = 28)";
drDFMDescriptionHash["DFM_M5_48N2p16"]                  = "Min overlap of M5 line ends in opposite direction (wire width >28 <=48)";
drDFMDescriptionHash["DFM_M5_60_0V_p8"]                 = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_0V_p8_16"]              = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_1V_p8"]                 = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_1V_p8_16"]              = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_2V_p8"]                 = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_2V_p8_16"]              = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_F_p8"]                  = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_60_F_p8_16"]               = "Min length for M5 wires with width <=46";
drDFMDescriptionHash["DFM_M5_ETE_transitions"]          = "Avoid two sucessive Metal5 B/C Metal ETE transitions <300 away";
drDFMDescriptionHash["DFM_M6_148"]                      = "Max exposure of short narrow M6 wire (<200, <=60) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M6_149_1"]                    = "Max exposure of narrow M6 wire (<=60) line end (one side exposed)";
drDFMDescriptionHash["DFM_M6_149_2"]                    = "Max exposure of narrow M6 wire (<=60) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M6_41_2V"]                    = "Two line end vias near ETE of narrow M6 wire";
drDFMDescriptionHash["DFM_M6_60_0V_p20"]                = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_0V_p20_40"]             = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_1V_p20"]                = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_1V_p20_40"]             = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_2V_p20"]                = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_2V_p20_40"]             = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_F_p20"]                 = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_60_F_p20_40"]              = "Min length for M6 wires with width <=60";
drDFMDescriptionHash["DFM_M6_Tshort"]                   = "narrow M6 line (40/44/48) cut region near >=56<=68 line cut region";
drDFMDescriptionHash["DFM_M7_148"]                      = "Max exposure of short narrow M7 wire (<300, <=60) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M7_149_1"]                    = "Max exposure of narrow M7 wire (<=60) line end (one side exposed)";
drDFMDescriptionHash["DFM_M7_149_2"]                    = "Max exposure of narrow M7 wire (<=60) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M7_41_2V"]                    = "Two line end vias near ETE of narrow M7 wire";
drDFMDescriptionHash["DFM_M7_60_0V_p45"]                = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_0V_p45_90"]             = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_1V_p45"]                = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_1V_p45_90"]             = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_2V_p45"]                = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_2V_p45_90"]             = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_F_p45"]                 = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M7_60_F_p45_90"]              = "Min length for M7 wires with width <=84";
drDFMDescriptionHash["DFM_M8_148"]                      = "Max exposure of short narrow M8 wire (<320, <=126) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M8_149_1"]                    = "Max exposure of narrow M8 wire (<=126) line end (one side exposed)";
drDFMDescriptionHash["DFM_M8_149_2"]                    = "Max exposure of narrow M8 wire (<=126) line end (both sides exposed)";
drDFMDescriptionHash["DFM_M8_41_2V"]                    = "Two line end vias near ETE of narrow M8 wire";
drDFMDescriptionHash["DFM_M8_60_0V_p23"]                = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_0V_p23_46"]             = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_1V_p23"]                = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_1V_p23_46"]             = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_2V_p23"]                = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_2V_p23_46"]             = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_F_p23"]                 = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_M8_60_F_p23_46"]              = "Min length for M8 wires with width <=140";
drDFMDescriptionHash["DFM_PC_126to126"]                 = "GCN line with 126 pitch on both sides not allowed";
drDFMDescriptionHash["DFM_PC_126to168"]                 = "GCN pitch transition from 126 to 168 not allowed";
drDFMDescriptionHash["DFM_PC_31_1to1p20"]               = "Min OGD space for two opposing offset GCN line ends";
drDFMDescriptionHash["DFM_PC_31_2to1p20_easy"]          = "Min OGD space for three or more opposing offset GCN line ends (likely easier to fix)";
drDFMDescriptionHash["DFM_PC_31_2to1p20_hard"]          = "Min OGD space for three or more opposing offset GCN line ends (harder to fix)";
drDFMDescriptionHash["DFM_PC_42p9_easy"]                = "Min poly enclosure by GCN line end (OGD) (harder to fix)";
drDFMDescriptionHash["DFM_PC_42p9_hard"]                = "Min poly enclosure by GCN line end (OGD) (harder to fix)";
drDFMDescriptionHash["DFM_PC_43p5"]                     = "Min Poly end to GCN space (PGD)";
drDFMDescriptionHash["DFM_PC_44p8_easy"]                = "Min GCN line end to poly side space (OGD) (likely easier to fix)";
drDFMDescriptionHash["DFM_PC_44p8_hard"]                = "Min GCN line end to poly side space (OGD) (harder to fix)";
drDFMDescriptionHash["DFM_PC_45p5"]                     = "Min Poly end overlap of GCN (PGD)";
drDFMDescriptionHash["DFM_PC_81NA1p10"]                 = "Min TCN to GCN space (PGD) when TCN is exposed on 1-side or not exposed";
drDFMDescriptionHash["DFM_PC_81NA2p10"]                 = "Min TCN to GCN space (PGD) when TCN is exposed on both sides";
drDFMDescriptionHash["DFM_PC_long"]                     = "Long GCN >300 nm with 84/84 pitch transitions on both sides is not allowed";
drDFMDescriptionHash["DFM_PC_offset_easy"]              = "Two min GCN ETE's offset by 36 nm (easier fix likely)";
drDFMDescriptionHash["DFM_PC_offset_hard"]              = "Two min GCN ETE's offset by 36 nm (harder to fix)";
drDFMDescriptionHash["DFM_PL63Lp6"]                     = "Min offset for adjacent poly tracks (large cut >99 nm to any cut)";
drDFMDescriptionHash["DFM_PL63Mp6"]                     = "Min offset for adjacent poly tracks (between cuts <99 nm)";
drDFMDescriptionHash["DFM_PL_103p8"]                    = "Narrow poly cut offset across long cut (see PL_103 rule in red book)";
drDFMDescriptionHash["DFM_PL_13p18"]                    = "Single fin dummy gate poly max pullback from diffusion edge";
drDFMDescriptionHash["DFM_PL_WN"]                       = "Wide-narrow cut (on a single mask) configuration not allowed";
drDFMDescriptionHash["DFM_PL_WNW"]                      = "Wide-narrow-wide cut (on a single mask) configuration not allowed";
drDFMDescriptionHash["DFM_PTG_Hybrid_decap"]            = "Use of cells d8xsdcpiptgevm4v2 and d8xsdcpiptgevm2v2 is discouraged";
drDFMDescriptionHash["DFM_TPL_90"]                      = "Min TG/TGULV poly to poly space (PGD) in TPT mask 0.099 ";
drDFMDescriptionHash["DFM_V0AXBX_c2c2N"]                = "V0AX or V0BX with 2 V0 neighbors on self aligned edge (corner to corner <=60)";
drDFMDescriptionHash["DFM_V0AX_c2c2N"]                  = "V0AX with 2 V0 neighbors on non-self aligned edge (corner to corner <=45)";
drDFMDescriptionHash["DFM_V0AX_c2c2Ndiag"]              = "V0AX with 2 V0 neighbors on diagonal corners (corner to corner <=45)";
drDFMDescriptionHash["DFM_V0AX_c2c3N4N"]                = "V0AX with 3 or 4 V0 neighbors (corner to corner <=45)";
drDFMDescriptionHash["DFM_V0PAX_V0PAX"]                 = "Min M1 ETE when V0PAX is facing V0PAX (in PGD)";
drDFMDescriptionHash["DFM_V0PAX_V1"]                    = "Min M1 ETE when V0PAX is facing V1 (in PGD)";
drDFMDescriptionHash["DFM_V0PAX_any"]                   = "Avoid V0PAX usage unless necessary";
drDFMDescriptionHash["DFM_V0PAX_c2c2N"]                 = "V0PAX with >=2 V0 neighbors (corner to corner <=45)";
drDFMDescriptionHash["DFM_V0PAX_exposed1"]              = "Max exposure of V0PAX one side";
drDFMDescriptionHash["DFM_V0PAX_exposed2"]              = "Max exposure of V0PAX two sides";
drDFMDescriptionHash["DFM_V0PAX_shortM1"]               = "Min M1 ETE when V0PAX is facing short M1 (PGD)";
drDFMDescriptionHash["DFM_V0_49p5"]                     = "Min line end enclosure of V0 by M0 wires with width <=48";
drDFMDescriptionHash["DFM_V0_62p5"]                     = "Min line end enclosure of V0 by M1 wires with width <=42";
drDFMDescriptionHash["DFM_V1_49p5"]                     = "Min line end enclosure of V1 by M1 wires with width <=42";
drDFMDescriptionHash["DFM_V1_61p5"]                     = "Min line end enclosure of V1 by M2 wires with width <=46";
drDFMDescriptionHash["DFM_V1_sandwich"]                 = "Avoid small V1 (<32) with two PGD neighbors at <=80 and one (or two) OGD neighbors at <=104";
drDFMDescriptionHash["DFM_V1bridge_c2c"]                = "Bridge V1 to any V1 <=51nm";
drDFMDescriptionHash["DFM_V2_49p5"]                     = "Min line end enclosure of V2 by M2 wires with width <=46";
drDFMDescriptionHash["DFM_V2_61p5"]                     = "Min line end enclosure of V2 by M3 wires with width <=46";
drDFMDescriptionHash["DFM_V2_nested_NSA"]               = "Avoid nested non-SA Via2";
drDFMDescriptionHash["DFM_V3_49p5"]                     = "Min line end enclosure of V3 by M3 wires with width <=46";
drDFMDescriptionHash["DFM_V3_61p5"]                     = "Min line end enclosure of V3 by M4 wires with width <=46";
drDFMDescriptionHash["DFM_V4_49p5"]                     = "Min line end enclosure of V4 by M4 wires with width <=46";
drDFMDescriptionHash["DFM_V4_61p5"]                     = "Min line end enclosure of V4 by M5 wires with width <=46";
drDFMDescriptionHash["DFM_V5_49p5"]                     = "Min line end enclosure of V5 by M5 wires with width <=46";
drDFMDescriptionHash["DFM_V5_61Np9"]                    = "Min line end enclosure of V5 by M6 wires with width <=44";
drDFMDescriptionHash["DFM_V5_61Np9_18"]                 = "Min line end enclosure of V5 by M6 wires with width <=44";
drDFMDescriptionHash["DFM_V5_61p5"]                     = "Min line end enclosure of V5 by M6 wires with width >44<=60";
drDFMDescriptionHash["DFM_V5_61p5_10"]                  = "Min line end enclosure of V5 by M6 wires with width >44<=60";
drDFMDescriptionHash["DFM_V6_49Np12"]                   = "Min line end enclosure of V6 by M6 wires with width <=44";
drDFMDescriptionHash["DFM_V6_49Np12_24"]                = "Min line end enclosure of V6 by M6 wires with width <=44";
drDFMDescriptionHash["DFM_V6_49p8"]                     = "Min line end enclosure of V6 by M6 wires with width >44<=60";
drDFMDescriptionHash["DFM_V6_49p8_16"]                  = "Min line end enclosure of V6 by M6 wires with width >44<=60";
drDFMDescriptionHash["DFM_V6_61p5"]                     = "Min line end enclosure of V6 by M7 wires with width <=84";
drDFMDescriptionHash["DFM_V6_61p5_10"]                  = "Min line end enclosure of V6 by M7 wires with width <=84";
drDFMDescriptionHash["DFM_V7_49p5"]                     = "Min line end enclosure of V7 by M7 wires with width <=84";
drDFMDescriptionHash["DFM_V7_49p5_10"]                  = "Min line end enclosure of V7 by M7 wires with width <=84";
drDFMDescriptionHash["DFM_V7_61p8"]                     = "Min line end enclosure of V7 by M8 wires with width <=140";
drDFMDescriptionHash["DFM_V7_61p8_15"]                  = "Min line end enclosure of V7 by M8 wires with width <=140";
drDFMDescriptionHash["DFM_VC_139p8"]                    = "VCN edge enclosure of diffcon end max value PGD";
drDFMDescriptionHash["DFM_VC_43p12"]                    = "VCN edge enclosure of polycon end max value OGD";
drDFMDescriptionHash["DFM_VC_61p5"]                     = "Min line end enclosure of VCN by M0 wires with width <=48";
drDFMDescriptionHash["DFM_VC_c2c2N"]                    = "Small VCN (<=32 PGD) with VCN neighbors (corner to corner <=45) on 2 corners";
drDFMDescriptionHash["DFM_VC_c2c3N"]                    = "Small VCN (<=32 PGD) with any VCN neighbors (corner to corner <=45) on 3 corners";
drDFMDescriptionHash["DFM_VC_c2c4N_no_poly_short_risk"] = "Small VCN (<=32 PGD) with any VCN neighbors (corner to corner <=45) on 4 corners without poly shorting risk";
drDFMDescriptionHash["DFM_VC_c2c4N_poly_short_risk"]    = "Small VCN (<=32 PGD) with any VCN neighbors (corner to corner <=45) on 4 corners with poly shorting risk";

drDFMMaskHash["DFM_DC_11isocut"]                 = "TCN";
drDFMMaskHash["DFM_DC_11p21"]                    = "TCN";
drDFMMaskHash["DFM_DC_c2c"]                      = "TCN";
drDFMMaskHash["DFM_DC_cutV"]                     = "TCN";
drDFMMaskHash["DFM_M0_41_2V"]                    = "M0";
drDFMMaskHash["DFM_M0_41_2Viso"]                 = "M0";
drDFMMaskHash["DFM_M0_60_0V_p70"]                = "M0";
drDFMMaskHash["DFM_M0_60_1V_p70"]                = "M0";
drDFMMaskHash["DFM_M0_60_2V_p70"]                = "M0";
drDFMMaskHash["DFM_M0_60_F_p70"]                 = "M0";
drDFMMaskHash["DFM_M0_C2Cskip"]                  = "M0";
drDFMMaskHash["DFM_M0_ETE_transitions"]          = "M0";
drDFMMaskHash["DFM_M0cut_C"]                     = "M0";
drDFMMaskHash["DFM_M0cut_C_wv"]                  = "M0";
drDFMMaskHash["DFM_M0cut_D"]                     = "M0";
drDFMMaskHash["DFM_M0cut_D_wv"]                  = "M0";
drDFMMaskHash["DFM_M0cut_S"]                     = "M0";
drDFMMaskHash["DFM_M0cut_SS"]                    = "M0";
drDFMMaskHash["DFM_M0cut_SS_wv"]                 = "M0";
drDFMMaskHash["DFM_M0cut_S_wv"]                  = "M0";
drDFMMaskHash["DFM_M0cut_V"]                     = "M0";
drDFMMaskHash["DFM_M0cut_V_wv"]                  = "M0";
drDFMMaskHash["DFM_M0cut_X"]                     = "M0";
drDFMMaskHash["DFM_M0cut_X_wv"]                  = "M0";
drDFMMaskHash["DFM_M0cut_Y"]                     = "M0";
drDFMMaskHash["DFM_M0cut_Y_wv"]                  = "M0";
drDFMMaskHash["DFM_M1_41_2V"]                    = "M1";
drDFMMaskHash["DFM_M1_41_2Viso"]                 = "M1";
drDFMMaskHash["DFM_M1_60_0V_p15"]                = "M1";
drDFMMaskHash["DFM_M1_60_0V_p15_30"]             = "M1";
drDFMMaskHash["DFM_M1_60_1V_p15"]                = "M1";
drDFMMaskHash["DFM_M1_60_1V_p15_30"]             = "M1";
drDFMMaskHash["DFM_M1_60_2V_p15"]                = "M1";
drDFMMaskHash["DFM_M1_60_2V_p15_30"]             = "M1";
drDFMMaskHash["DFM_M1_60_F_p15"]                 = "M1";
drDFMMaskHash["DFM_M1_60_F_p15_30"]              = "M1";
drDFMMaskHash["DFM_M1_adj_cut2cut"]              = "M1";
drDFMMaskHash["DFM_M1_cut2cut_V0PAX"]            = "M1";
drDFMMaskHash["DFM_M1_isocut_V0PAX"]             = "M1";
drDFMMaskHash["DFM_M1cut_D"]                     = "M1";
drDFMMaskHash["DFM_M1cut_D_wv"]                  = "M1";
drDFMMaskHash["DFM_M1cut_V"]                     = "M1";
drDFMMaskHash["DFM_M1cut_V_wv"]                  = "M1";
drDFMMaskHash["DFM_M2_147p20"]                   = "M2";
drDFMMaskHash["DFM_M2_148p20"]                   = "M2";
drDFMMaskHash["DFM_M2_41_2V"]                    = "M2";
drDFMMaskHash["DFM_M2_41_2Viso"]                 = "M2";
drDFMMaskHash["DFM_M2_48N1p30"]                  = "M2";
drDFMMaskHash["DFM_M2_48N2p16"]                  = "M2";
drDFMMaskHash["DFM_M2_60_0V_p8"]                 = "M2";
drDFMMaskHash["DFM_M2_60_0V_p8_16"]              = "M2";
drDFMMaskHash["DFM_M2_60_1V_p8"]                 = "M2";
drDFMMaskHash["DFM_M2_60_1V_p8_16"]              = "M2";
drDFMMaskHash["DFM_M2_60_2V_p8_16"]              = "M2";
drDFMMaskHash["DFM_M2_60_2V_p8_gt32"]            = "M2";
drDFMMaskHash["DFM_M2_60_2V_p8_lteq32"]          = "M2";
drDFMMaskHash["DFM_M2_60_F_p8"]                  = "M2";
drDFMMaskHash["DFM_M2_60_F_p8_16"]               = "M2";
drDFMMaskHash["DFM_M2_ETE_transitions"]          = "M2";
drDFMMaskHash["DFM_M3_147p20"]                   = "M3";
drDFMMaskHash["DFM_M3_148p20"]                   = "M3";
drDFMMaskHash["DFM_M3_41_2V"]                    = "M3";
drDFMMaskHash["DFM_M3_41_2Viso"]                 = "M3";
drDFMMaskHash["DFM_M3_48N1p30"]                  = "M3";
drDFMMaskHash["DFM_M3_48N2p16"]                  = "M3";
drDFMMaskHash["DFM_M3_60_0V_p8"]                 = "M3";
drDFMMaskHash["DFM_M3_60_0V_p8_16"]              = "M3";
drDFMMaskHash["DFM_M3_60_1V_p8"]                 = "M3";
drDFMMaskHash["DFM_M3_60_1V_p8_16"]              = "M3";
drDFMMaskHash["DFM_M3_60_2V_p8"]                 = "M3";
drDFMMaskHash["DFM_M3_60_2V_p8_16"]              = "M3";
drDFMMaskHash["DFM_M3_60_F_p8"]                  = "M3";
drDFMMaskHash["DFM_M3_60_F_p8_16"]               = "M3";
drDFMMaskHash["DFM_M3_ETE_transitions"]          = "M3";
drDFMMaskHash["DFM_M4_147p20"]                   = "M4";
drDFMMaskHash["DFM_M4_148p20"]                   = "M4";
drDFMMaskHash["DFM_M4_41_2V"]                    = "M4";
drDFMMaskHash["DFM_M4_41_2Viso"]                 = "M4";
drDFMMaskHash["DFM_M4_48N1p30"]                  = "M4";
drDFMMaskHash["DFM_M4_48N2p16"]                  = "M4";
drDFMMaskHash["DFM_M4_60_0V_p8"]                 = "M4";
drDFMMaskHash["DFM_M4_60_0V_p8_16"]              = "M4";
drDFMMaskHash["DFM_M4_60_1V_p8"]                 = "M4";
drDFMMaskHash["DFM_M4_60_1V_p8_16"]              = "M4";
drDFMMaskHash["DFM_M4_60_2V_p8"]                 = "M4";
drDFMMaskHash["DFM_M4_60_2V_p8_16"]              = "M4";
drDFMMaskHash["DFM_M4_60_F_p8"]                  = "M4";
drDFMMaskHash["DFM_M4_60_F_p8_16"]               = "M4";
drDFMMaskHash["DFM_M4_ETE_transitions"]          = "M4";
drDFMMaskHash["DFM_M5_147p20"]                   = "M5";
drDFMMaskHash["DFM_M5_148p20"]                   = "M5";
drDFMMaskHash["DFM_M5_41_2V"]                    = "M5";
drDFMMaskHash["DFM_M5_41_2Viso"]                 = "M5";
drDFMMaskHash["DFM_M5_48N1p30"]                  = "M5";
drDFMMaskHash["DFM_M5_48N2p16"]                  = "M5";
drDFMMaskHash["DFM_M5_60_0V_p8"]                 = "M5";
drDFMMaskHash["DFM_M5_60_0V_p8_16"]              = "M5";
drDFMMaskHash["DFM_M5_60_1V_p8"]                 = "M5";
drDFMMaskHash["DFM_M5_60_1V_p8_16"]              = "M5";
drDFMMaskHash["DFM_M5_60_2V_p8"]                 = "M5";
drDFMMaskHash["DFM_M5_60_2V_p8_16"]              = "M5";
drDFMMaskHash["DFM_M5_60_F_p8"]                  = "M5";
drDFMMaskHash["DFM_M5_60_F_p8_16"]               = "M5";
drDFMMaskHash["DFM_M5_ETE_transitions"]          = "M5";
drDFMMaskHash["DFM_M6_148"]                      = "M6";
drDFMMaskHash["DFM_M6_149_1"]                    = "M6";
drDFMMaskHash["DFM_M6_149_2"]                    = "M6";
drDFMMaskHash["DFM_M6_41_2V"]                    = "M6";
drDFMMaskHash["DFM_M6_60_0V_p20"]                = "M6";
drDFMMaskHash["DFM_M6_60_0V_p20_40"]             = "M6";
drDFMMaskHash["DFM_M6_60_1V_p20"]                = "M6";
drDFMMaskHash["DFM_M6_60_1V_p20_40"]             = "M6";
drDFMMaskHash["DFM_M6_60_2V_p20"]                = "M6";
drDFMMaskHash["DFM_M6_60_2V_p20_40"]             = "M6";
drDFMMaskHash["DFM_M6_60_F_p20"]                 = "M6";
drDFMMaskHash["DFM_M6_60_F_p20_40"]              = "M6";
drDFMMaskHash["DFM_M6_Tshort"]                   = "M6";
drDFMMaskHash["DFM_M7_148"]                      = "M7";
drDFMMaskHash["DFM_M7_149_1"]                    = "M7";
drDFMMaskHash["DFM_M7_149_2"]                    = "M7";
drDFMMaskHash["DFM_M7_41_2V"]                    = "M7";
drDFMMaskHash["DFM_M7_60_0V_p45"]                = "M7";
drDFMMaskHash["DFM_M7_60_0V_p45_90"]             = "M7";
drDFMMaskHash["DFM_M7_60_1V_p45"]                = "M7";
drDFMMaskHash["DFM_M7_60_1V_p45_90"]             = "M7";
drDFMMaskHash["DFM_M7_60_2V_p45"]                = "M7";
drDFMMaskHash["DFM_M7_60_2V_p45_90"]             = "M7";
drDFMMaskHash["DFM_M7_60_F_p45"]                 = "M7";
drDFMMaskHash["DFM_M7_60_F_p45_90"]              = "M7";
drDFMMaskHash["DFM_M8_148"]                      = "M8";
drDFMMaskHash["DFM_M8_149_1"]                    = "M8";
drDFMMaskHash["DFM_M8_149_2"]                    = "M8";
drDFMMaskHash["DFM_M8_41_2V"]                    = "M8";
drDFMMaskHash["DFM_M8_60_0V_p23"]                = "M8";
drDFMMaskHash["DFM_M8_60_0V_p23_46"]             = "M8";
drDFMMaskHash["DFM_M8_60_1V_p23"]                = "M8";
drDFMMaskHash["DFM_M8_60_1V_p23_46"]             = "M8";
drDFMMaskHash["DFM_M8_60_2V_p23"]                = "M8";
drDFMMaskHash["DFM_M8_60_2V_p23_46"]             = "M8";
drDFMMaskHash["DFM_M8_60_F_p23"]                 = "M8";
drDFMMaskHash["DFM_M8_60_F_p23_46"]              = "M8";
drDFMMaskHash["DFM_PC_126to126"]                 = "GCN";
drDFMMaskHash["DFM_PC_126to168"]                 = "GCN";
drDFMMaskHash["DFM_PC_31_1to1p20"]               = "GCN";
drDFMMaskHash["DFM_PC_31_2to1p20_easy"]          = "GCN";
drDFMMaskHash["DFM_PC_31_2to1p20_hard"]          = "GCN";
drDFMMaskHash["DFM_PC_42p9_easy"]                = "GCN";
drDFMMaskHash["DFM_PC_42p9_hard"]                = "GCN";
drDFMMaskHash["DFM_PC_43p5"]                     = "GCN";
drDFMMaskHash["DFM_PC_44p8_easy"]                = "GCN";
drDFMMaskHash["DFM_PC_44p8_hard"]                = "GCN";
drDFMMaskHash["DFM_PC_45p5"]                     = "GCN";
drDFMMaskHash["DFM_PC_81NA1p10"]                 = "GCN";
drDFMMaskHash["DFM_PC_81NA2p10"]                 = "GCN";
drDFMMaskHash["DFM_PC_long"]                     = "GCN";
drDFMMaskHash["DFM_PC_offset_easy"]              = "GCN";
drDFMMaskHash["DFM_PC_offset_hard"]              = "GCN";
drDFMMaskHash["DFM_PL63Lp6"]                     = "POLY";
drDFMMaskHash["DFM_PL63Mp6"]                     = "POLY";
drDFMMaskHash["DFM_PL_103p8"]                    = "POLY";
drDFMMaskHash["DFM_PL_13p18"]                    = "POLY";
drDFMMaskHash["DFM_PL_WN"]                       = "POLY";
drDFMMaskHash["DFM_PL_WNW"]                      = "POLY";
drDFMMaskHash["DFM_PTG_Hybrid_decap"]            = "POLY";
drDFMMaskHash["DFM_TPL_90"]                      = "POLY";
drDFMMaskHash["DFM_V0AXBX_c2c2N"]                = "V0";
drDFMMaskHash["DFM_V0AX_c2c2N"]                  = "V0";
drDFMMaskHash["DFM_V0AX_c2c2Ndiag"]              = "V0";
drDFMMaskHash["DFM_V0AX_c2c3N4N"]                = "V0";
drDFMMaskHash["DFM_V0PAX_V0PAX"]                 = "V0";
drDFMMaskHash["DFM_V0PAX_V1"]                    = "V0";
drDFMMaskHash["DFM_V0PAX_any"]                   = "V0";
drDFMMaskHash["DFM_V0PAX_c2c2N"]                 = "V0";
drDFMMaskHash["DFM_V0PAX_exposed1"]              = "V0";
drDFMMaskHash["DFM_V0PAX_exposed2"]              = "V0";
drDFMMaskHash["DFM_V0PAX_shortM1"]               = "V0";
drDFMMaskHash["DFM_V0_49p5"]                     = "V0";
drDFMMaskHash["DFM_V0_62p5"]                     = "V0";
drDFMMaskHash["DFM_V1_49p5"]                     = "V1";
drDFMMaskHash["DFM_V1_61p5"]                     = "V1";
drDFMMaskHash["DFM_V1_sandwich"]                 = "V1";
drDFMMaskHash["DFM_V1bridge_c2c"]                = "V1";
drDFMMaskHash["DFM_V2_49p5"]                     = "V2";
drDFMMaskHash["DFM_V2_61p5"]                     = "V2";
drDFMMaskHash["DFM_V2_nested_NSA"]               = "V2";
drDFMMaskHash["DFM_V3_49p5"]                     = "V3";
drDFMMaskHash["DFM_V3_61p5"]                     = "V3";
drDFMMaskHash["DFM_V4_49p5"]                     = "V4";
drDFMMaskHash["DFM_V4_61p5"]                     = "V4";
drDFMMaskHash["DFM_V5_49p5"]                     = "V5";
drDFMMaskHash["DFM_V5_61Np9"]                    = "V5";
drDFMMaskHash["DFM_V5_61Np9_18"]                 = "V5";
drDFMMaskHash["DFM_V5_61p5"]                     = "V5";
drDFMMaskHash["DFM_V5_61p5_10"]                  = "V5";
drDFMMaskHash["DFM_V6_49Np12"]                   = "V6";
drDFMMaskHash["DFM_V6_49Np12_24"]                = "V6";
drDFMMaskHash["DFM_V6_49p8"]                     = "V6";
drDFMMaskHash["DFM_V6_49p8_16"]                  = "V6";
drDFMMaskHash["DFM_V6_61p5"]                     = "V6";
drDFMMaskHash["DFM_V6_61p5_10"]                  = "V6";
drDFMMaskHash["DFM_V7_49p5"]                     = "V7";
drDFMMaskHash["DFM_V7_49p5_10"]                  = "V7";
drDFMMaskHash["DFM_V7_61p8"]                     = "V7";
drDFMMaskHash["DFM_V7_61p8_15"]                  = "V7";
drDFMMaskHash["DFM_VC_139p8"]                    = "VCN";
drDFMMaskHash["DFM_VC_43p12"]                    = "VCN";
drDFMMaskHash["DFM_VC_61p5"]                     = "VCN";
drDFMMaskHash["DFM_VC_c2c2N"]                    = "VCN";
drDFMMaskHash["DFM_VC_c2c3N"]                    = "VCN";
drDFMMaskHash["DFM_VC_c2c4N_no_poly_short_risk"] = "VCN";
drDFMMaskHash["DFM_VC_c2c4N_poly_short_risk"]    = "VCN";


#endif /* _P1273D0_DFM_DR_RS_ */
