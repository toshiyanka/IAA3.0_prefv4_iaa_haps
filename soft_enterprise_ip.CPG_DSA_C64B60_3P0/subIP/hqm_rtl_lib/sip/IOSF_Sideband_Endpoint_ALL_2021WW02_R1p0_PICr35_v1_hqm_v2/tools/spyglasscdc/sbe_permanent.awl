# need to check later only failing for sbebase
waive -msg {Unsynchronized Crossing: destination flop sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncingress.\i_gen_gray_rptr_nprptr_usync.i_sbcusync_rptr_nprptr .qtmp3[3:0], clocked by sbebase.side_clk, source flop sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncegress.\i_gen_gray_rptr_nprptr_usync.i_usync_rptr_nprptr .pre_sync_data[3:0], clocked by sbebase.agent_clk. Reason: Qualifier not found [Total Sources: 1 (Number of source domains: 1)]}  -rule {  {Ac_unsync02}  }  -comment {Created by vnandaku on 27-Jun-2018 23:55:12} 
waive -msg {Unsynchronized Crossing: destination flop sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncegress.\i_gen_agent_wptr_idle_usync.i_sbcusync_wptr_idle .qtmp3[2:0], clocked by sbebase.side_clk, source flop sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.\i_gen_agent_wptr_idle_usync.i_sbcusync_wptr_idle .pre_sync_data[2:0], clocked by sbebase.agent_clk. Reason: Qualifier not found [Total Sources: 1 (Number of source domains: 1)]}  -rule {  {Ac_unsync02}  }  -comment {Created by vnandaku on 27-Jun-2018 23:55:47} 

# all the outputs from target reg (or bulk widget) feed into the idle_trgtreg that asynchronously wakes up the clk ("or"'d with external input sbi_sbe_clkreq and becomes the async wake to the side_clkreq) All treg outputs are glitch free and the external input (input sbi_sbe_clkreq) is also required to be glitch free and driven off a flop. This "or"d output is expected to be async as mentioned in the IG. There are several HSD's discussions about this.  
#waive -msg {Reset signal '*sbendpoint.\gen_rata.gen_treg.sbetrgtreg .*state[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 13-Feb-2019 17:42:50} 
#waive -msg {Reset signal '*sbebase.\gen_doserrmstr.mmsg_lcl_pcirdy_doserrmstr ' used to reset signal '*sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 13-Feb-2019 17:43:57} 
#waive -msg {Reset signal '*sbebase.egress_port_idle_ff' used to reset signal '*sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 13-Feb-2019 18:12:30} 
#waive -msg {Reset signal '*sbendpoint.\gen_rata.gen_bulk_widget.sbebulkrdwrwrapper*' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 14-Feb-2019 17:11:41} 
#waive -msg {Destination flop '*sbebase.i_sbc_doublesync_wake.i_ctech_lib_msff_async_rst_meta_donttouch_dcszo*' clocked by '*side_clk' can glitch (* source(s), * domain(s)). Reason :'*'}  -rule {  {Ac_glitch03}  }  -comment {Created by vnandaku on 27-Jun-2018 23:56:07} 
#waive -msg {Reset signal '*sbendpoint.agent_clkreq' used to reset signal '*sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 13-Feb-2019 16:49:39} 
#waive -msg {Reset signal '*sbebase.sbi_sbe_clkreq' used to reset signal '*sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 14-Feb-2019 17:53:00} 
#waive -msg {Reset signal '*sbebase.i_sbcasyncclkreq_side_clk.async_clkreq_rst_b' used to reset signal '*sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*'}  -rule {  {Reset_sync02}  }
# comments
# output payload and eom are qualified with the put (which has a proper async qualifier). 
# but the tool will flag an error and hence these errors are ok to waive

#waive -msg {Unsynchronized Crossing: destination primary output *sbendpoint.tmsg_pceom, clocked by *sbendpoint.agent_clk, source flop *sbendpoint.sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncingress*rp_based_impl*, clocked by *sbendpoint.side_clk. Reason: Qualifier not found [Total Sources: * (Number of source domains: *)]}  -rule {  {Ac_unsync01}  }  -comment {Created by vnandaku on 15-Oct-2018 16:56:49} 
#waive -msg {Unsynchronized Crossing: destination primary output *sbendpoint.tmsg_pcpayload[31:0], clocked by *sbendpoint.agent_clk, source flop *sbendpoint.sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncingress*rp_based_impl*, clocked by *sbendpoint.side_clk. Reason: Qualifier not found [Total Sources: * (Number of source domains: *)]}  -rule {  {Ac_unsync02}  }  -comment {Created by vnandaku on 15-Oct-2018 20:53:42} 
#waive -msg {Unsynchronized Crossing: destination primary output sbebase.sbe_sbi_tmsg_pceom, clocked by sbebase.agent_clk, source flop sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncingress*rp_based_impl*, clocked by sbebase.side_clk. Reason: Qualifier not found [Total Sources: 1 (Number of source domains: 1)]}  -rule {  {Ac_unsync01}  }  -comment {Created by vnandaku on 15-Oct-2018 17:15:50} 
#waive -msg {Unsynchronized Crossing: destination primary output sbebase.sbe_sbi_tmsg_pcpayload[31:0], clocked by sbebase.agent_clk, source flop sbebase.\gen_async_blk2.sbcasyncingress .sbcasyncingress*rp_based_impl*, clocked by sbebase.side_clk. Reason: Qualifier not found [Total Sources: * (Number of source domains: *)]}  -rule {  {Ac_unsync02}  }  -comment {Created by vnandaku on 15-Oct-2018 17:16:18}

 


# The below waivers, similar to "async wake" waivers, but have different paths source flops from agent clk driving idle_trgtreg that feeds into async wake. There is a SGCDC tool enhancemnt to identify such data reset paths. Until then, it needs to be waived.
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .gray_wptr[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:20:01} 
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.gray_rptr_ff2_dsync[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:20:21}
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.\i_gen_gray_rptr_usync_doubleflop.syncptrs*' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:20:21} 
#waive -msg {Reset signal '*sbendpoint.sbebase.sbetrgt.npfsm*' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:20:59} 
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.gray_npwptr[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:21:10} 
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.gray_npr*' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:21:25} 
#waive -msg {Reset signal '*sbendpoint.sbebase.sbemstr.np' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:47:55} 
#waive -msg {Reset signal '*sbendpoint.sbebase.\gen_async_blk2.sbcasyncegress .sbcasyncingress.trdy_gaten' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 06-Mar-2019 17:47:55}
#waive -rule Reset_sync02 -msg {Reset signal '*sbendpoint.sbebase.mmsg_pcsel[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'} -comment {Created by vnandaku on 06-Mar-2019 18:01:01}
#waive -rule Reset_sync02 -msg {Reset signal '*sbendpoint.sbebase.mmsg_npsel[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'} -comment {Created by vnandaku on 06-Mar-2019 18:01:01}
#waive -rule Reset_sync02 -msg {Reset signal '*sbendpoint.mmsg_pcirdy[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'} -comment {Created by vnandaku on 06-Mar-2019 18:01:01}
#waive -rule Reset_sync02 -msg {Reset signal '*sbendpoint.mmsg_npirdy[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'} -comment {Created by vnandaku on 06-Mar-2019 18:01:01}
#waive -msg {Reset signal '*sbendpoint.sbe_sbi_mmsg_npsel[*]' used to reset signal '*sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old' (domain '*side_clk') is generated from domain '*agent_clk'}  -rule {  {Reset_sync02}  }  -comment {Created by vnandaku on 07-Mar-2019 14:54:10} 
# new waivers will start from here

# no waiver allowd in sgcdc but can't add flop before side_clkreq_async_wake
#keeping waiver for it for now HSD 22010630078 

waive -msg {Destination flop '*sbebase.i_sbc_doublesync_wake.i_ctech_lib_msff_async_rst_meta_donttouch_dcszo*' clocked by '*side_clk' can glitch (* source(s), * domain(s)). Reason :'*'}  -rule {  {Ac_glitch03}  }  -comment {Created by vnandaku on 27-Jun-2018 23:56:07} 

