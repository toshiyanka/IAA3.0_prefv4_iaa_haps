current_design hqm_sbendpoint
# Clock information:
######################################### 
# The helper script runSGCDC in scripts/qa will set/unset this parameter depending on the EP config
setvar async 0
setvar rp 0
setvar latch 0
setvar bulkrdwr 0


clock -name "side_clk"   -domain SIDE_CLK -tag SIDE_CLK
# the domain and tag for agent_clk will be replaced by the scripts/qa/runSGCDC script when running ASYNC/SYNC configs
# if running standalone or directly, this will have to be changed to either SIDE_CLK or AGENT_CLK manually depending on SYNC/ASYNC

if {$async == 1} {
    clock -name "agent_clk"   -domain AGENT_CLK -tag AGENT_CLK
} else {
    clock -name "agent_clk"   -domain SIDE_CLK -tag SIDE_CLK
}

clock -name "visa_ser_cfg_in[0]"   -domain VISACFGCLK_GROUP -tag VISACFGCLK_GROUP

reset -name "side_rst_b" -value 0

reset_filter_path -type rdc -from_rst side_rst_b

reset_filter_path -type reset_sync02 -from_rst side_rst_b -to_clock side_clk

#Jignasa Jeremy request

## In order for this to deassert, side_rst_b must be 1 and wake or clkgated must be 0.
## In order to have metastability, clkactive must be 0 when this deasserts (it's async preset)
## wake will begin at 1 because that is how this sequential gets set
## wake can only go to 0 if the clkreq goes to 0 and the fabric is idle
## clkgated will also begin at 1 when this sequential is set
## for clkgated to go to 0, the fsm must transition from the RESET_ST to ACTIVE_ST
## which requires a clkack to come to the sideband.  That transition puts clkactive to 1
## which eliminates this hazard
filter_async_reset_deassert -name sbendpoint.sbebase.i_sbcasyncclkreq_side_clk.clkreq_old

if {$bulkrdwr == 1} {
   reset_sense -pins "\gen_rata.gen_bulk_widget.sbebulkrdwrwrapper .treg_irdy"
}

#reset_sense -pins sbebase.sbe_sbi_tmsg_pcput
#reset_sense -pins sbebase.sbe_sbi_tmsg_npput
#reset_sense -pins sbebase.sbe_sbi_tmsg_npeom
#reset_sense -pins sbebase.sbe_sbi_tmsg_pceom
#reset_sense -pins sbebase.sbe_sbi_tmsg_pcpayload
#reset_sense -pins sbebase.sbe_sbi_tmsg_nppayload
#reset_sense -pins sbebase.sbe_sbi_tmsg_pccmpl
#reset_sense -pins sbebase.sbe_sbi_tmsg_npvalid
#reset_sense -pins sbebase.sbe_sbi_mmsg_pctrdy
#reset_sense -pins sbebase.sbe_sbi_mmsg_nptrdy
#reset_sense -pins sbebase.sbe_sbi_idle

# Jignasa end

#quasi_static -name "jta_*"
#quasi_static -name "cgctrl_clk*"
quasi_static -name "usyncselect"
quasi_static -name "fdfx_sbparity_def"
quasi_static -name "global_ep_strap"

#quasi_static -name "sbebase.sbe_sbi_parity_err_out"
#quasi_static -name "ext_parity_err_detected"

current_design hqm_sbendpoint 

quasi_static -name "fscan_clkungate"
quasi_static -name "fscan_latchopen"
quasi_static -name "fscan_latchclosed_b"

set_case_analysis -name fscan_rstbypen -value 0

if {$async == 1} {
    if {$rp == 1} {
        current_design sbcasyncfifo
        qualifier \
            -enable   "sbcasyncegress.qempty==1 && sbcasyncegress.npqempty==1" \
            -from_obj "sbcasyncingress.\rp_based_impl.i_vram2 .\byte_enable*.i_sb_vram_genram_bees_knees .latched_data*" \
            -to_clk   "gated_egr_side_clk"

    } else {
        if {$latch == 1} {
        current_design sbcasyncfifo
        qualifier \
            -enable   "sbcasyncegress.qempty==1 && sbcasyncegress.npqempty==1" \
            -from_obj "sbcasyncingress.\non_rp_based_impl.gen_latch_queue*.sbcvram2q .data_memory" \
            -to_clk   "gated_egr_side_clk"
        } else {
        current_design sbcasyncfifo
        qualifier \
            -enable   "sbcasyncegress.qempty==1 && sbcasyncegress.npqempty==1" \
            -from_obj "sbcasyncingress.\non_rp_based_impl.gen_flop_queue*.i_sbcfifo .fifo" \
            -to_clk   "gated_egr_side_clk"
        }
    }
}

#=================================================

#           ABSTRACT PORT INFORMATION             

#=================================================

current_design hqm_sbendpoint 

# side_rst_b is needed for async modes - so change it using the runSGCDC script
abstract_port -ports "side_rst_b" -clock "VCLK_sbendpoint_side_rst_b" -direction input -combo no

abstract_port -ports "side_usync" -clock "side_clk" -direction input
abstract_port -ports "agent_usync" -clock "agent_clk" -direction input
abstract_port -ports "cgctrl_idlecnt" -clock "agent_clk" -direction input

# similar to agent_clkreq/agent_idle on sbebase
abstract_port -ports "agent_clkreq" -clock "agent_clk" -direction input
abstract_port -ports "agent_idle" -clock "agent_clk" -direction input
abstract_port -ports "side_ism_fabric" -clock "side_clk" -direction input
abstract_port -ports "side_clkack" -clock "VCLK_sbendpoint_side_clkack" -direction input -combo no
abstract_port -ports "side_ism_lock_b" -clock "side_clk" -direction input

abstract_port -ports "mpccup" -clock "side_clk" -direction input
abstract_port -ports "mnpcup" -clock "side_clk" -direction input
abstract_port -ports "tpcput" -clock "side_clk" -direction input
abstract_port -ports "tnpput" -clock "side_clk" -direction input
abstract_port -ports "teom" -clock "side_clk" -direction input
abstract_port -ports "tpayload" -clock "side_clk" -direction input
abstract_port -ports "tparity" -clock "side_clk" -direction input

abstract_port -ports "tmsg_pcfree" -clock "agent_clk" -direction input
abstract_port -ports "tmsg_npfree" -clock "agent_clk" -direction input
abstract_port -ports "tmsg_npclaim" -clock "agent_clk" -direction input
abstract_port -ports "ur_csairs_valid" -clock "agent_clk" -direction input
abstract_port -ports "ur_csai" -clock "agent_clk" -direction input
abstract_port -ports "ur_crs" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_pcirdy" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_npirdy" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_pceom" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_npeom" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_pcpayload" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_nppayload" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_pcparity" -clock "agent_clk" -direction input
abstract_port -ports "mmsg_npparity" -clock "agent_clk" -direction input

abstract_port -ports "treg_trdy" -clock "agent_clk" -direction input
abstract_port -ports "treg_cerr" -clock "agent_clk" -direction input
abstract_port -ports "treg_rdata" -clock "agent_clk" -direction input
abstract_port -ports "treg_csairs_valid" -clock "agent_clk" -direction input
abstract_port -ports "treg_csai" -clock "agent_clk" -direction input
abstract_port -ports "treg_crs" -clock "agent_clk" -direction input
abstract_port -ports "mreg_irdy" -clock "agent_clk" -direction input
abstract_port -ports "mreg_npwrite" -clock "agent_clk" -direction input
abstract_port -ports "mreg_dest" -clock "agent_clk" -direction input
abstract_port -ports "mreg_source" -clock "agent_clk" -direction input
abstract_port -ports "mreg_opcode" -clock "agent_clk" -direction input
abstract_port -ports "mreg_addrlen" -clock "agent_clk" -direction input
abstract_port -ports "mreg_bar" -clock "agent_clk" -direction input
abstract_port -ports "mreg_tag" -clock "agent_clk" -direction input
abstract_port -ports "mreg_be" -clock "agent_clk" -direction input
abstract_port -ports "mreg_fid" -clock "agent_clk" -direction input
abstract_port -ports "mreg_addr" -clock "agent_clk" -direction input
abstract_port -ports "mreg_wdata" -clock "agent_clk" -direction input
abstract_port -ports "mreg_sairs_valid" -clock "agent_clk" -direction input
abstract_port -ports "mreg_sai" -clock "agent_clk" -direction input
abstract_port -ports "mreg_rs" -clock "agent_clk" -direction input
abstract_port -ports "mreg_hier_destid" -clock "agent_clk" -direction input
abstract_port -ports "mreg_hier_srcid" -clock "agent_clk" -direction input

abstract_port -ports "tx_ext_headers" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_hier_dstid_strap" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_srcid_strap" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_dstid_strap" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_tag_strap" -clock "agent_clk" -direction input
abstract_port -ports "global_ep_strap" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_sairs_valid" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_sai" -clock "agent_clk" -direction input
abstract_port -ports "do_serr_rs" -clock "agent_clk" -direction input
abstract_port -ports "ext_parity_err_detected" -clock "agent_clk" -direction input
abstract_port -ports "fdfx_sbparity_def" -clock "agent_clk" -direction input
abstract_port -ports "visa_all_disable" -clock "visa_ser_cfg_in[0]" -direction input
abstract_port -ports "visa_customer_disable" -clock "visa_ser_cfg_in[0]" -direction input
abstract_port -ports "visa_ser_cfg_in[2:1]" -clock "visa_ser_cfg_in[0]" -direction input

## output ports constrained bcos of tool needs this info to check CDC correctly. The qualifier for the cross clock ends before this signal generates and the tool is not able to relate that these signals are from the same qualifier.
## The payload and eom must be qualified with the put. It is to the user to use put as the qualifier as they are not qualified by the fifo's qualifiers
abstract_port -ports "tmsg_pcput" -clock "agent_clk" -direction output -override
abstract_port -ports "tmsg_pceom" -clock "agent_clk" -direction output -override
abstract_port -ports "tmsg_pcpayload" -clock "agent_clk" -direction output -override
abstract_port -ports "tmsg_npput" -clock "agent_clk" -direction output -override
abstract_port -ports "tmsg_npeom" -clock "agent_clk" -direction output -override
abstract_port -ports "tmsg_nppayload" -clock "agent_clk" -direction output -override

#############
#   VISA    
#############

