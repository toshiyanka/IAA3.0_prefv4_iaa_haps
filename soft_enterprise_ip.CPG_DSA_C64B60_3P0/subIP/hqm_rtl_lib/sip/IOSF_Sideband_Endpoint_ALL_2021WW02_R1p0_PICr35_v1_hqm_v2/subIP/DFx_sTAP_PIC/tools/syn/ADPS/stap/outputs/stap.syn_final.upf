#Generated by Design Compiler(L-2016.03-SP3) on Mon Jan 14 10:36:18 2019

if {[info exists synopsys_program_name]} {
if {[info exists synopsys_program_name] && (($synopsys_program_name == "dc_shell") || ($synopsys_program_name == "icc_shell") || ($synopsys_program_name == "icc2_shell") )} {
set_design_attributes -elements {.} -attribute   \
  lower_domain_boundary false
}
}
upf_version 2.0
if {[info exists synopsys_program_name] && (($synopsys_program_name == "dc_shell") || ($synopsys_program_name == "icc_shell") || ($synopsys_program_name == "icc2_shell") )} {
set_design_attributes -elements {.} -attribute   \
  enable_state_propagation_in_add_power_state    \
  TRUE
}
create_supply_net vss 
create_supply_net vccst 
create_supply_set ss_vccst -function {power      \
  vccst} -function {ground vss} 
create_supply_net vccsa 
create_supply_set ss_vccsa -function {power      \
  vccsa} -function {ground vss} 
create_power_domain pd_stap_AON -include_scope   \
  -supply {extra_supplies_0 ss_vccst}
create_supply_port vccst  -direction in
connect_supply_net vccst -ports vccst
create_supply_port vss  -direction in
connect_supply_net vss -ports vss
create_power_domain pd_stap_VNN -elements        \
  generate_stap_swcomp_rtdr_i_stap_swcomp_rtdr   \
  -supply {extra_supplies_0 ss_vccst} -supply    \
  {extra_supplies_2 ss_vccsa}
create_supply_port vccsa  -direction in
connect_supply_net vccsa -ports vccsa
set_domain_supply_net pd_stap_AON                \
  -primary_power_net ss_vccst.power              \
  -primary_ground_net ss_vccst.ground
set_domain_supply_net pd_stap_VNN                \
  -primary_power_net ss_vccsa.power              \
  -primary_ground_net ss_vccsa.ground
set_isolation i_from_vccsa_to_outputs  -domain   \
  pd_stap_VNN  -isolation_supply_set ss_vccst    \
  -elements                                      \
  {generate_stap_swcomp_rtdr_i_stap_swcomp_rtdr/swcomp_stap_post_tdo \
  generate_stap_swcomp_rtdr_i_stap_swcomp_rtdr/swcompstat_tdo \
  generate_stap_swcomp_rtdr_i_stap_swcomp_rtdr/swcompctrl_tdo} \
  -clamp_value 0 
set_isolation_control i_from_vccsa_to_outputs    \
  -domain pd_stap_VNN -isolation_signal          \
  stap_isol_en_b -isolation_sense low -location  \
  self
add_power_state ss_vccsa -state ps_VCCSA         \
  {-supply_expr {power == `{FULL_ON,0.75}}       \
  -simstate NORMAL}
add_power_state ss_vccsa -state ps_VCCSA_OFF     \
  {-supply_expr {power == `{OFF}} -simstate      \
  CORRUPT}
add_power_state ss_vccst -state ps_VCCST         \
  {-supply_expr {power == `{FULL_ON,0.75}}       \
  -simstate NORMAL}
add_power_state ss_vccst -state ps_VCCST_OFF     \
  {-supply_expr {power == `{OFF}} -simstate      \
  CORRUPT}
add_power_state ss_vccst -state ps_GROUND        \
  {-supply_expr {ground == `{FULL_ON,0.00}}      \
  -simstate NORMAL}
create_pst pst_stap -supplies [list vccsa vccst  \
  vss]
add_pst_state S0  -pst pst_stap  -state          \
  {ps_VCCSA ps_VCCST ps_GROUND}
add_pst_state S0i1  -pst pst_stap  -state        \
  {ps_VCCSA_OFF ps_VCCST ps_GROUND}
add_pst_state G3_OFF  -pst pst_stap  -state      \
  {ps_VCCSA_OFF ps_VCCST_OFF ps_GROUND}

set derived_upf true
#Design Compiler added commands
set_isolation snps_no_iso__0  -domain            \
  pd_stap_VNN  -elements                         \
  generate_stap_swcomp_rtdr_i_stap_swcomp_rtdr/iso \
  -no_isolation
set derived_upf false


