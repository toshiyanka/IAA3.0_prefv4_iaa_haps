# Follow this steps to run FPV for Sideband Endpoint

% cd <fabric_rtl>/scripts
% source setup
% cd ../verif/sim
% source ../../unsupported/scripts/get_vc.csh 
% cd ../fpv_sbe
% source fpv_setup.env
% inspect -s inspect_run_script.pl &

NOTE: Need ip-iosf-sideband-vc-2011ww35r110824 or later VC release, since this release has fixed for 
agent and sideband compmon assertions/assumptions

This will Launch InspectPro Gui

% from the Tools Menu, click on Compilation->Incremental to do Incremental Compilation

% Once the Compilation is completed, Inspect will display a Flow message stating that "Compilation completed" (in the user Information portion).

% After the compilation, user need to click on the  
  Tools -> Verification, this will pop-up a Gui and here user can increment Bound & Timeout values and can also select to Verify all assertions or only selected Assertions (Recommandation is to click on "Verify All")

% Once Verification is Completed, Inspect Gui will display a Flow message stating that "Verification completed" (in the user Information window).

% Once the verification is completed, users can see the status for all assertions in the Gui and the status will display whether the assertions failed or not.

% Right Click on the Failed assertions and select Debug, this will open a wave window which will display why the assertion has failed, it is possible that user might have to write assumptions for this failed assertion.

% Once all failed assertions are debuged, increase the Bound (from the Gui or in the inspect_run_script.pl script, add_verification_strategy API ) and see if you get more failed assertions or not (some of the vacaviously assertions will either change to Failed ot Bounded) , repeat this step until all assertions are Bounded , write more assumptions as needed.

===============================================================================
# To modify bind files in order to math user Endpoint and Sideband Configuration
===============================================================================
1)Update the <IP>/verif/tb/ep_tb/agent_compliance/agent_include.sv with project specific parameters.

2)Update the sideband_compliance/sideband_include.sv with project specific parameters.

-Follow all the steps listed above to rerun and debug FPV after changing parameters.

================================================================================
# How To create inspect_run_script.pl script for initial setup
================================================================================

- User can refer to https://intelpedia.intel.com/InspectPro/Inspect_Pro_Scripting_Language for more commands

- User first need to specify Project name, top level DUT name,Path for Top level DUT file, Clocks and reset signals, user will also need to specify extra bind files that are used for the project.

- User will then need to create and open a project and have to create activities for example, set module name and top level file name, working directory etc.

- Provide compilation options, for example, set launguage, any include paths that are required, or any additional files that needs to be compiled

- User might also have to provide some other compilation options (some other +defines that are needs for compilation)

- User will also have to provide run time information, for ex. set all clocks specified in the design, set initialization sequences for reset, set all input signals to be stable and set that all signals will transition only at posedge of the clock

- Provide Proof strategy and engine choice, for example user can specify to bound the verification only for 30 cycles with timeout 7200

- User can also use fsdb dump generated by inspect to debug failing assertions using verdi

NOTE: if you face any issues related to inspec run, use %source clean_sim to clear previous simulation, after this user will have to compile and verify all assertions again
