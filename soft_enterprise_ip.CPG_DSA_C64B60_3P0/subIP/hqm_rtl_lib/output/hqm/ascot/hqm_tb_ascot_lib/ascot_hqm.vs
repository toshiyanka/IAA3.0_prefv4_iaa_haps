//
// -- the "ascot_hqm.vs" file was generated by ascotgen. Do not edit!
//    config file: /nfs/site/disks/ncsg_00170/users/jkerth/hqm-srvrgen4/src/ascot/hqm_ascot.xml
//

(* sva_control_module *)
(* ascot_control_ip="hqm" *)
module ascot_hqm(); // lintra s-60038 -- module has no outputs
`ifndef ASCOT_OFF
	`ifdef LINT_ON
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef LINTRA_BUG
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef ASCOT_OFF
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef SVA_OFF
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef EMULATION
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef INTEL_SVA_OFF
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef INTEL_LINTRA_BUG
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef INTEL_EMULATION
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
	`ifdef INTEL_FPGA
		`define ASCOT_OFF
	`endif
`endif
`ifndef ASCOT_OFF
   parameter bit GLOBAL_SVA_DISABLE = 1'b0;
   wire _plusag_disable=$test$plusargs("SVA_OFF")||$test$plusargs("hqm_SVA_OFF"); 
   logic global_sva_enable;
   logic _global_sva_enable;
   always_comb begin
      _global_sva_enable =  global_sva_enable !== 0 
                            && $test$plusargs("SVA_OFF") == 0
                            && $test$plusargs("hqm_SVA_OFF") == 0
                            && GLOBAL_SVA_DISABLE == 0;
   end

   initial $ascot("hqm");

   // fix for vcs/ucli assertion control bug preventing re-evaluation of assertion on $asserton.
   initial begin
       if(0) $asserton();
   end
`endif // ASCOT_OFF
`undef ASCOT_OFF
endmodule
