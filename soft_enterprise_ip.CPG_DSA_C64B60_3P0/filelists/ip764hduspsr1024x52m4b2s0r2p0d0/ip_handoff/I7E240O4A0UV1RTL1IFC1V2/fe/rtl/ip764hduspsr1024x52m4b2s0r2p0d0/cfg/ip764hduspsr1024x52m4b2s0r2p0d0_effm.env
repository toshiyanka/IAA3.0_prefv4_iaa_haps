#-------------------------------------
# FPGA/Emulation checking from here on
#-------------------------------------
# Flow is based on instructions that can be found here:
# http://wiki.ith.intel.com/display/EMUL/ACE+Emul+Flow+Enabling
#
# You must do a source of the project .env file before sourcing this one!
#
# WARNINGS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# WARNINGS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# This env file assumes that the EFFM ACE config file are using the "ace"
# path for it's ace configuration files.  This env file will use the "ace"
# name to run the effm flow and thereby leave the "cfg" directory from the
# original compiler run untouched.  All the files in the "cfg" directory
# are copied to the new "ace: directory and the "cfg" string changed to "ace".
# This way, after EFFM is run, the ace* directory[y|ies] can be deleted/moved
# before delivery and the original "cfg" directory delivered as planned.
#
# If EFFM were to ever change to using "cfg" this methodology will have to be
# re-visited!
#
setenv wd `pwd -L`
setenv UPF_CONFIG "SOC_OVERRIDE"
#setenv TCL_LIBRARY /p/vt/tools/sim/vendor/zse/release/V15.09-2/tcl/tcl8.5

# Changable parameters
setenv ACETYPE "ace"         # set ACE type cfg or ace (ace is recommended)
#setenv effmver "20140520"
#setenv effmver "2016.15"
#setenv effmver "2019.30"
setenv effmver "2019.30.p02"
#setenv effmpath "/nfs/site/disks/an_umg_disk3643/AN/tools/releases/effm/${effmver}"
setenv effmpath "/nfs/site/disks/an_umg_disk3643/AN/tools/releases/effm/${effmver}"
setenv emcfg "${effmpath}/effm_flows"
setenv emtools "${effmpath}/effm_tools"

# Non-changable parameters
setenv fubname ip764hduspsr1024x52m4b2s0r2p0d0
setenv MODEL_ROOT $ACE_ENG
setenv compout /nfs/an/disks/an_mos_scratch01/mos/prod/runs/c764hduspsr-version-r1-0-0/r660547_00_00/r660547_00_00/compout/ip764hduspsr1024x52m4b2s0r2p0d0

setenv EMUL_RESULTS_DIR $ACE_ENG/results/emul/
setenv EMUL_CFG_DIR $ACE_ENG/$ACETYPE/emulation
setenv EMUL_TOOLS_DIR $ACE_ENG/tools/emulation
setenv EMUL_IP_NAME $fubname

setenv INTEL_EMULATION 1
setenv EMULATION_UPF 1
setenv INTEL_FPGA 1
setenv FPGA_UPF 1

set path = ($EMUL_TOOLS_DIR ./ $path)

if ( "X$ACETYPE" == "Xace" ) then
# move old file out of the way
  if ( -e $ACE_ENG/$ACETYPE ) then
    if ( -e $ACE_ENG/$ACETYPE.ootw ) then
      rm -rf $ACE_ENG/$ACETYPE.ootw
    endif
    mv $ACE_ENG/$ACETYPE $ACE_ENG/$ACETYPE.ootw
  endif
# make the new "ACE" directory
  mkdir -p $ACE_ENG/$ACETYPE
# Copy/modify all the original "cfg" directory contents
  sed 's/cfg/ace/g' < $ACE_ENG/cfg/${fubname}.acerc \
                    > $ACE_ENG/$ACETYPE/${fubname}.acerc
  sed 's/cfg/ace/g' < $ACE_ENG/cfg/${fubname}.env \
                    > $ACE_ENG/$ACETYPE/${fubname}.env
#  sed 's/cfg/ace/g' < $ACE_ENG/tools/upf/${fubname}.upf_global_defs.tcl \
#                    > $ACE_ENG/$ACETYPE/${fubname}.upf_global_defs.tcl
  setenv qt '"'
  sed 's/cfg/ace/g' < $ACE_ENG/cfg/${fubname}_hdl.udf \
  | sed "s%#PI%                    power_intent => {\n                        enable_pwr_intent  => 1,\n                        power_top          =>  ${qt}${fubname}_dfx_wrapper${qt},\n                        upf_files          => [ ${qt}${compout}/${fubname}_dfx_wrapper.upf${qt}, ],\n                    },%g" \
                    > $ACE_ENG/$ACETYPE/${fubname}_hdl.udf
  sed 's/cfg/ace/g' < $ACE_ENG/cfg/${fubname}_local_ivars.udf \
                    > $ACE_ENG/$ACETYPE/${fubname}_local_ivars.udf
  sed "s/${fubname}:cfg/${fubname}:ace/g" < $ACE_ENG/cfg/${fubname}.udf \
                    > $ACE_ENG/$ACETYPE/${fubname}.udf
#  sed 's/\"cfg/\"ace/g' < $ACE_ENG/cfg/${fubname}.udf \
#                    > $ACE_ENG/$ACETYPE/${fubname}.udf
# Only copy this script, do not subst "ace" for "cfg"!
  cp $ACE_ENG/cfg/${fubname}_effm.env $ACE_ENG/$ACETYPE/
endif

# ----------------------------------------------
# Perform the steps found on the EFFM WIKI site
# ----------------------------------------------

#---
# 1b. Copy emulation directories from /p/apd_sram/tools/releases/effm/
#---
rm -rf $ACE_ENG/$ACETYPE/emulation
cp -r ${emcfg} $ACE_ENG/$ACETYPE/emulation
rm -rf $ACE_ENG/tools/emulation
cp -r ${emtools} $ACE_ENG/tools/emulation

#---
# 6. Customize the emulation.udf file and Include it in your top-level .udf file
#---
# Add emulation.udf to your project Includes list.
cat $ACE_ENG/$ACETYPE/${fubname}.udf \
 | sed "/\],/ i \        '$ACETYPE/emulation/emulation.udf'," \
 > $ACE_ENG/$ACETYPE/${fubname}.udf.1
mv $ACE_ENG/$ACETYPE/${fubname}.udf.1 $ACE_ENG/$ACETYPE/${fubname}.udf

cp $compout/emulation.udf $ACE_ENG/$ACETYPE/emulation/emulation.udf

#---
# 6b. Source new "ace" version of ${fubname}.env and emulation.env files
#     (was step 4)
#---
source $ACE_ENG/$ACETYPE/${fubname}.env
#source $ACE_ENG/$ACETYPE/emulation/emulation.env

#---
# 7pre. Set LIRA and LINTRA versions (adding EFFM requires these to be set.)
#---
setenv LIRA_VER 13.3p5_shOpt64
setenv LIRA /p/com/eda/tcad2/linux_2.6.5_x86-64/lira/3.16.2_64
setenv LINTRA_VER 13.3p5_shOpt64

#---
# 7. You are ready to run the flows!
#---
#echo ""
#echo "# The following are required to get you here."
#echo "# I.e. you should have already done these!"
#echo "# ----------------------------------------------------"
#echo "# > source cfg/ip764hduspsr1024x52m4b2s0r2p0d0.env"
#echo "# > source cfg/ip764hduspsr1024x52m4b2s0r2p0d0_effm.env"
#echo "#"
#echo "# The following is a break up of the ace command needed to run EFFM"
#echo "# ----------------------------------------------------"
#echo "# ace [-cc] -emul \\"
#echo "#  -emul_top ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib.ip764hduspsr1024x52m4b2s0r2p0d0_dfx_wrapper \\"
#echo "#  -emul_model ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib_model \\"
#echo "#  -vlog_opts '+define+FPGA_MODE +define+INTC_FPGA +define+INTEL_FPGA'"
#echo "#"
#echo "# See cut-n-paste version below."
#echo "#"
#echo "# ----------------------------------------------------"
#echo "# LOGS"
#echo "# ----------------------------------------------------"
#echo "# ZSE LOG:"
#echo "# -----------------------------------------------"
#echo "# results/emul/CHECK_ZSE/zse/zcui.work/zCui/log/design_Default_RTL_GroupBundle_0_Synthesis.log"
#echo "# Look for text string 'inferred'."
#echo "# The inferred array size will not be shown. :-("
#echo "#"
#echo "# VELOCE LOG:"
#echo "# -----------------------------------------------"
#echo "# results/emul/CHECK_VELOCE/emubuild_VELOCE2.log"
#echo "# Look for text string 'inferred'."
#echo "# The inferred array size should be shown."
#echo "#"
#echo "# FPGA LOG:"
#echo "# -----------------------------------------------"
#echo "# results/emul/CHECK_FPGA/projects/ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib_rev/ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib.srr"
#echo "# Look for text string 'Found RAM'."
#echo "# The inferred array size should be shown."
#echo "#"
#echo "#"
#echo "# ----------------------------------------------------"
#echo "# The following is a 'cut-n-paste' version of the"
#echo "#  ace command needed to run EFFM.  The -cc option is optional."
#echo "# ----------------------------------------------------"
#echo "# ace -emul -emul_top ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib.ip764hduspsr1024x52m4b2s0r2p0d0_dfx_wrapper -emul_model ip764hduspsr1024x52m4b2s0r2p0d0_rtl_lib_model -vlog_opts '+define+FPGA_MODE +define+INTC_FPGA +define+INTEL_FPGA' -cc"

